
/**
 * Client
**/

import * as runtime from './runtime/binary.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Project
 * 
 */
export type Project = $Result.DefaultSelection<Prisma.$ProjectPayload>
/**
 * Model ProjectUsers
 * 
 */
export type ProjectUsers = $Result.DefaultSelection<Prisma.$ProjectUsersPayload>
/**
 * Model ProjectInvite
 * 
 */
export type ProjectInvite = $Result.DefaultSelection<Prisma.$ProjectInvitePayload>
/**
 * Model SentEmail
 * 
 */
export type SentEmail = $Result.DefaultSelection<Prisma.$SentEmailPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model VerificationToken
 * 
 */
export type VerificationToken = $Result.DefaultSelection<Prisma.$VerificationTokenPayload>
/**
 * Model Products
 * 
 */
export type Products = $Result.DefaultSelection<Prisma.$ProductsPayload>
/**
 * Model Api_keys
 * 
 */
export type Api_keys = $Result.DefaultSelection<Prisma.$Api_keysPayload>
/**
 * Model Prices
 * 
 */
export type Prices = $Result.DefaultSelection<Prisma.$PricesPayload>
/**
 * Model Discounts
 * 
 */
export type Discounts = $Result.DefaultSelection<Prisma.$DiscountsPayload>
/**
 * Model Discount_Prices
 * 
 */
export type Discount_Prices = $Result.DefaultSelection<Prisma.$Discount_PricesPayload>
/**
 * Model Customers
 * 
 */
export type Customers = $Result.DefaultSelection<Prisma.$CustomersPayload>
/**
 * Model Addresses
 * 
 */
export type Addresses = $Result.DefaultSelection<Prisma.$AddressesPayload>
/**
 * Model SubscriptionItems
 * 
 */
export type SubscriptionItems = $Result.DefaultSelection<Prisma.$SubscriptionItemsPayload>
/**
 * Model Subscription_Scheduled_Changes
 * 
 */
export type Subscription_Scheduled_Changes = $Result.DefaultSelection<Prisma.$Subscription_Scheduled_ChangesPayload>
/**
 * Model BillingDetails
 * 
 */
export type BillingDetails = $Result.DefaultSelection<Prisma.$BillingDetailsPayload>
/**
 * Model Subscriptions
 * 
 */
export type Subscriptions = $Result.DefaultSelection<Prisma.$SubscriptionsPayload>
/**
 * Model TransactionItems
 * 
 */
export type TransactionItems = $Result.DefaultSelection<Prisma.$TransactionItemsPayload>
/**
 * Model TransactionPayment
 * 
 */
export type TransactionPayment = $Result.DefaultSelection<Prisma.$TransactionPaymentPayload>
/**
 * Model Transactions
 * 
 */
export type Transactions = $Result.DefaultSelection<Prisma.$TransactionsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Role: {
  owner: 'owner',
  member: 'member'
};

export type Role = (typeof Role)[keyof typeof Role]


export const product_status: {
  active: 'active',
  archived: 'archived'
};

export type product_status = (typeof product_status)[keyof typeof product_status]


export const Entity_Status: {
  active: 'active',
  archived: 'archived'
};

export type Entity_Status = (typeof Entity_Status)[keyof typeof Entity_Status]


export const PriceType: {
  standard: 'standard',
  custom: 'custom'
};

export type PriceType = (typeof PriceType)[keyof typeof PriceType]


export const BillingInterval: {
  day: 'day',
  week: 'week',
  month: 'month',
  year: 'year'
};

export type BillingInterval = (typeof BillingInterval)[keyof typeof BillingInterval]


export const Discount_type: {
  flat: 'flat',
  percentage: 'percentage',
  flat_per_seat: 'flat_per_seat'
};

export type Discount_type = (typeof Discount_type)[keyof typeof Discount_type]


export const SubscriptionsStatus: {
  active: 'active',
  cancelled: 'cancelled',
  past_due: 'past_due',
  paused: 'paused',
  trial: 'trial'
};

export type SubscriptionsStatus = (typeof SubscriptionsStatus)[keyof typeof SubscriptionsStatus]


export const CollectionMode: {
  automatic: 'automatic',
  manual: 'manual'
};

export type CollectionMode = (typeof CollectionMode)[keyof typeof CollectionMode]


export const SubscriptionItemsStatus: {
  active: 'active',
  inactive: 'inactive',
  trialing: 'trialing'
};

export type SubscriptionItemsStatus = (typeof SubscriptionItemsStatus)[keyof typeof SubscriptionItemsStatus]


export const ScheduledChangeAction: {
  pause: 'pause',
  resume: 'resume',
  cancel: 'cancel'
};

export type ScheduledChangeAction = (typeof ScheduledChangeAction)[keyof typeof ScheduledChangeAction]


export const ScheduledChangesStatus: {
  completed: 'completed',
  scheduled: 'scheduled'
};

export type ScheduledChangesStatus = (typeof ScheduledChangesStatus)[keyof typeof ScheduledChangesStatus]


export const TransactionStatus: {
  billed: 'billed',
  cancelled: 'cancelled'
};

export type TransactionStatus = (typeof TransactionStatus)[keyof typeof TransactionStatus]


export const PaymentMethod: {
  MOBILE_MONEY: 'MOBILE_MONEY',
  CARD: 'CARD',
  BANK_TRANSFER: 'BANK_TRANSFER'
};

export type PaymentMethod = (typeof PaymentMethod)[keyof typeof PaymentMethod]


export const PaymentProvider: {
  MPESA: 'MPESA',
  AIRTEL: 'AIRTEL',
  MTN: 'MTN',
  STRIPE: 'STRIPE',
  PAYSTACK: 'PAYSTACK',
  FLUTTERWAVE: 'FLUTTERWAVE',
  TIGO: 'TIGO',
  ORANGE: 'ORANGE',
  DPO: 'DPO',
  SELCOM: 'SELCOM'
};

export type PaymentProvider = (typeof PaymentProvider)[keyof typeof PaymentProvider]


export const PaymentStatus: {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]

}

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type product_status = $Enums.product_status

export const product_status: typeof $Enums.product_status

export type Entity_Status = $Enums.Entity_Status

export const Entity_Status: typeof $Enums.Entity_Status

export type PriceType = $Enums.PriceType

export const PriceType: typeof $Enums.PriceType

export type BillingInterval = $Enums.BillingInterval

export const BillingInterval: typeof $Enums.BillingInterval

export type Discount_type = $Enums.Discount_type

export const Discount_type: typeof $Enums.Discount_type

export type SubscriptionsStatus = $Enums.SubscriptionsStatus

export const SubscriptionsStatus: typeof $Enums.SubscriptionsStatus

export type CollectionMode = $Enums.CollectionMode

export const CollectionMode: typeof $Enums.CollectionMode

export type SubscriptionItemsStatus = $Enums.SubscriptionItemsStatus

export const SubscriptionItemsStatus: typeof $Enums.SubscriptionItemsStatus

export type ScheduledChangeAction = $Enums.ScheduledChangeAction

export const ScheduledChangeAction: typeof $Enums.ScheduledChangeAction

export type ScheduledChangesStatus = $Enums.ScheduledChangesStatus

export const ScheduledChangesStatus: typeof $Enums.ScheduledChangesStatus

export type TransactionStatus = $Enums.TransactionStatus

export const TransactionStatus: typeof $Enums.TransactionStatus

export type PaymentMethod = $Enums.PaymentMethod

export const PaymentMethod: typeof $Enums.PaymentMethod

export type PaymentProvider = $Enums.PaymentProvider

export const PaymentProvider: typeof $Enums.PaymentProvider

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Projects
 * const projects = await prisma.project.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Projects
   * const projects = await prisma.project.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => $Utils.JsPromise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs, $Utils.Call<Prisma.TypeMapCb, {
    extArgs: ExtArgs
  }>, ClientOptions>

      /**
   * `prisma.project`: Exposes CRUD operations for the **Project** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Projects
    * const projects = await prisma.project.findMany()
    * ```
    */
  get project(): Prisma.ProjectDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.projectUsers`: Exposes CRUD operations for the **ProjectUsers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProjectUsers
    * const projectUsers = await prisma.projectUsers.findMany()
    * ```
    */
  get projectUsers(): Prisma.ProjectUsersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.projectInvite`: Exposes CRUD operations for the **ProjectInvite** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProjectInvites
    * const projectInvites = await prisma.projectInvite.findMany()
    * ```
    */
  get projectInvite(): Prisma.ProjectInviteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sentEmail`: Exposes CRUD operations for the **SentEmail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SentEmails
    * const sentEmails = await prisma.sentEmail.findMany()
    * ```
    */
  get sentEmail(): Prisma.SentEmailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verificationToken`: Exposes CRUD operations for the **VerificationToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VerificationTokens
    * const verificationTokens = await prisma.verificationToken.findMany()
    * ```
    */
  get verificationToken(): Prisma.VerificationTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.products`: Exposes CRUD operations for the **Products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.products.findMany()
    * ```
    */
  get products(): Prisma.ProductsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.api_keys`: Exposes CRUD operations for the **Api_keys** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Api_keys
    * const api_keys = await prisma.api_keys.findMany()
    * ```
    */
  get api_keys(): Prisma.Api_keysDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.prices`: Exposes CRUD operations for the **Prices** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Prices
    * const prices = await prisma.prices.findMany()
    * ```
    */
  get prices(): Prisma.PricesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.discounts`: Exposes CRUD operations for the **Discounts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Discounts
    * const discounts = await prisma.discounts.findMany()
    * ```
    */
  get discounts(): Prisma.DiscountsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.discount_Prices`: Exposes CRUD operations for the **Discount_Prices** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Discount_Prices
    * const discount_Prices = await prisma.discount_Prices.findMany()
    * ```
    */
  get discount_Prices(): Prisma.Discount_PricesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customers`: Exposes CRUD operations for the **Customers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customers.findMany()
    * ```
    */
  get customers(): Prisma.CustomersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.addresses`: Exposes CRUD operations for the **Addresses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Addresses
    * const addresses = await prisma.addresses.findMany()
    * ```
    */
  get addresses(): Prisma.AddressesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscriptionItems`: Exposes CRUD operations for the **SubscriptionItems** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SubscriptionItems
    * const subscriptionItems = await prisma.subscriptionItems.findMany()
    * ```
    */
  get subscriptionItems(): Prisma.SubscriptionItemsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscription_Scheduled_Changes`: Exposes CRUD operations for the **Subscription_Scheduled_Changes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscription_Scheduled_Changes
    * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.findMany()
    * ```
    */
  get subscription_Scheduled_Changes(): Prisma.Subscription_Scheduled_ChangesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.billingDetails`: Exposes CRUD operations for the **BillingDetails** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BillingDetails
    * const billingDetails = await prisma.billingDetails.findMany()
    * ```
    */
  get billingDetails(): Prisma.BillingDetailsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscriptions`: Exposes CRUD operations for the **Subscriptions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscriptions
    * const subscriptions = await prisma.subscriptions.findMany()
    * ```
    */
  get subscriptions(): Prisma.SubscriptionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transactionItems`: Exposes CRUD operations for the **TransactionItems** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TransactionItems
    * const transactionItems = await prisma.transactionItems.findMany()
    * ```
    */
  get transactionItems(): Prisma.TransactionItemsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transactionPayment`: Exposes CRUD operations for the **TransactionPayment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TransactionPayments
    * const transactionPayments = await prisma.transactionPayment.findMany()
    * ```
    */
  get transactionPayment(): Prisma.TransactionPaymentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transactions`: Exposes CRUD operations for the **Transactions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transactions
    * const transactions = await prisma.transactions.findMany()
    * ```
    */
  get transactions(): Prisma.TransactionsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.2.1
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Project: 'Project',
    ProjectUsers: 'ProjectUsers',
    ProjectInvite: 'ProjectInvite',
    SentEmail: 'SentEmail',
    User: 'User',
    Account: 'Account',
    Session: 'Session',
    VerificationToken: 'VerificationToken',
    Products: 'Products',
    Api_keys: 'Api_keys',
    Prices: 'Prices',
    Discounts: 'Discounts',
    Discount_Prices: 'Discount_Prices',
    Customers: 'Customers',
    Addresses: 'Addresses',
    SubscriptionItems: 'SubscriptionItems',
    Subscription_Scheduled_Changes: 'Subscription_Scheduled_Changes',
    BillingDetails: 'BillingDetails',
    Subscriptions: 'Subscriptions',
    TransactionItems: 'TransactionItems',
    TransactionPayment: 'TransactionPayment',
    Transactions: 'Transactions'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "project" | "projectUsers" | "projectInvite" | "sentEmail" | "user" | "account" | "session" | "verificationToken" | "products" | "api_keys" | "prices" | "discounts" | "discount_Prices" | "customers" | "addresses" | "subscriptionItems" | "subscription_Scheduled_Changes" | "billingDetails" | "subscriptions" | "transactionItems" | "transactionPayment" | "transactions"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Project: {
        payload: Prisma.$ProjectPayload<ExtArgs>
        fields: Prisma.ProjectFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProjectFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProjectFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          findFirst: {
            args: Prisma.ProjectFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProjectFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          findMany: {
            args: Prisma.ProjectFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          create: {
            args: Prisma.ProjectCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          createMany: {
            args: Prisma.ProjectCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProjectCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>[]
          }
          delete: {
            args: Prisma.ProjectDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          update: {
            args: Prisma.ProjectUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          deleteMany: {
            args: Prisma.ProjectDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProjectUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProjectUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectPayload>
          }
          aggregate: {
            args: Prisma.ProjectAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProject>
          }
          groupBy: {
            args: Prisma.ProjectGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProjectCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectCountAggregateOutputType> | number
          }
        }
      }
      ProjectUsers: {
        payload: Prisma.$ProjectUsersPayload<ExtArgs>
        fields: Prisma.ProjectUsersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProjectUsersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectUsersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProjectUsersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectUsersPayload>
          }
          findFirst: {
            args: Prisma.ProjectUsersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectUsersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProjectUsersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectUsersPayload>
          }
          findMany: {
            args: Prisma.ProjectUsersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectUsersPayload>[]
          }
          create: {
            args: Prisma.ProjectUsersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectUsersPayload>
          }
          createMany: {
            args: Prisma.ProjectUsersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProjectUsersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectUsersPayload>[]
          }
          delete: {
            args: Prisma.ProjectUsersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectUsersPayload>
          }
          update: {
            args: Prisma.ProjectUsersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectUsersPayload>
          }
          deleteMany: {
            args: Prisma.ProjectUsersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProjectUsersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProjectUsersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectUsersPayload>
          }
          aggregate: {
            args: Prisma.ProjectUsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProjectUsers>
          }
          groupBy: {
            args: Prisma.ProjectUsersGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectUsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProjectUsersCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectUsersCountAggregateOutputType> | number
          }
        }
      }
      ProjectInvite: {
        payload: Prisma.$ProjectInvitePayload<ExtArgs>
        fields: Prisma.ProjectInviteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProjectInviteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectInvitePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProjectInviteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectInvitePayload>
          }
          findFirst: {
            args: Prisma.ProjectInviteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectInvitePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProjectInviteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectInvitePayload>
          }
          findMany: {
            args: Prisma.ProjectInviteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectInvitePayload>[]
          }
          create: {
            args: Prisma.ProjectInviteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectInvitePayload>
          }
          createMany: {
            args: Prisma.ProjectInviteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProjectInviteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectInvitePayload>[]
          }
          delete: {
            args: Prisma.ProjectInviteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectInvitePayload>
          }
          update: {
            args: Prisma.ProjectInviteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectInvitePayload>
          }
          deleteMany: {
            args: Prisma.ProjectInviteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProjectInviteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProjectInviteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProjectInvitePayload>
          }
          aggregate: {
            args: Prisma.ProjectInviteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProjectInvite>
          }
          groupBy: {
            args: Prisma.ProjectInviteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectInviteGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProjectInviteCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectInviteCountAggregateOutputType> | number
          }
        }
      }
      SentEmail: {
        payload: Prisma.$SentEmailPayload<ExtArgs>
        fields: Prisma.SentEmailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SentEmailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentEmailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SentEmailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentEmailPayload>
          }
          findFirst: {
            args: Prisma.SentEmailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentEmailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SentEmailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentEmailPayload>
          }
          findMany: {
            args: Prisma.SentEmailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentEmailPayload>[]
          }
          create: {
            args: Prisma.SentEmailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentEmailPayload>
          }
          createMany: {
            args: Prisma.SentEmailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SentEmailCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentEmailPayload>[]
          }
          delete: {
            args: Prisma.SentEmailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentEmailPayload>
          }
          update: {
            args: Prisma.SentEmailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentEmailPayload>
          }
          deleteMany: {
            args: Prisma.SentEmailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SentEmailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SentEmailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentEmailPayload>
          }
          aggregate: {
            args: Prisma.SentEmailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSentEmail>
          }
          groupBy: {
            args: Prisma.SentEmailGroupByArgs<ExtArgs>
            result: $Utils.Optional<SentEmailGroupByOutputType>[]
          }
          count: {
            args: Prisma.SentEmailCountArgs<ExtArgs>
            result: $Utils.Optional<SentEmailCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      VerificationToken: {
        payload: Prisma.$VerificationTokenPayload<ExtArgs>
        fields: Prisma.VerificationTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findFirst: {
            args: Prisma.VerificationTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findMany: {
            args: Prisma.VerificationTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          create: {
            args: Prisma.VerificationTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          createMany: {
            args: Prisma.VerificationTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificationTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          delete: {
            args: Prisma.VerificationTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          update: {
            args: Prisma.VerificationTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          deleteMany: {
            args: Prisma.VerificationTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VerificationTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          aggregate: {
            args: Prisma.VerificationTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificationToken>
          }
          groupBy: {
            args: Prisma.VerificationTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationTokenCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenCountAggregateOutputType> | number
          }
        }
      }
      Products: {
        payload: Prisma.$ProductsPayload<ExtArgs>
        fields: Prisma.ProductsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductsPayload>
          }
          findFirst: {
            args: Prisma.ProductsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductsPayload>
          }
          findMany: {
            args: Prisma.ProductsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductsPayload>[]
          }
          create: {
            args: Prisma.ProductsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductsPayload>
          }
          createMany: {
            args: Prisma.ProductsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductsPayload>[]
          }
          delete: {
            args: Prisma.ProductsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductsPayload>
          }
          update: {
            args: Prisma.ProductsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductsPayload>
          }
          deleteMany: {
            args: Prisma.ProductsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductsPayload>
          }
          aggregate: {
            args: Prisma.ProductsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducts>
          }
          groupBy: {
            args: Prisma.ProductsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductsCountArgs<ExtArgs>
            result: $Utils.Optional<ProductsCountAggregateOutputType> | number
          }
        }
      }
      Api_keys: {
        payload: Prisma.$Api_keysPayload<ExtArgs>
        fields: Prisma.Api_keysFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Api_keysFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Api_keysPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Api_keysFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Api_keysPayload>
          }
          findFirst: {
            args: Prisma.Api_keysFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Api_keysPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Api_keysFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Api_keysPayload>
          }
          findMany: {
            args: Prisma.Api_keysFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Api_keysPayload>[]
          }
          create: {
            args: Prisma.Api_keysCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Api_keysPayload>
          }
          createMany: {
            args: Prisma.Api_keysCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Api_keysCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Api_keysPayload>[]
          }
          delete: {
            args: Prisma.Api_keysDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Api_keysPayload>
          }
          update: {
            args: Prisma.Api_keysUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Api_keysPayload>
          }
          deleteMany: {
            args: Prisma.Api_keysDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Api_keysUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Api_keysUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Api_keysPayload>
          }
          aggregate: {
            args: Prisma.Api_keysAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApi_keys>
          }
          groupBy: {
            args: Prisma.Api_keysGroupByArgs<ExtArgs>
            result: $Utils.Optional<Api_keysGroupByOutputType>[]
          }
          count: {
            args: Prisma.Api_keysCountArgs<ExtArgs>
            result: $Utils.Optional<Api_keysCountAggregateOutputType> | number
          }
        }
      }
      Prices: {
        payload: Prisma.$PricesPayload<ExtArgs>
        fields: Prisma.PricesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PricesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PricesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricesPayload>
          }
          findFirst: {
            args: Prisma.PricesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PricesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricesPayload>
          }
          findMany: {
            args: Prisma.PricesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricesPayload>[]
          }
          create: {
            args: Prisma.PricesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricesPayload>
          }
          createMany: {
            args: Prisma.PricesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PricesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricesPayload>[]
          }
          delete: {
            args: Prisma.PricesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricesPayload>
          }
          update: {
            args: Prisma.PricesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricesPayload>
          }
          deleteMany: {
            args: Prisma.PricesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PricesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PricesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricesPayload>
          }
          aggregate: {
            args: Prisma.PricesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrices>
          }
          groupBy: {
            args: Prisma.PricesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PricesGroupByOutputType>[]
          }
          count: {
            args: Prisma.PricesCountArgs<ExtArgs>
            result: $Utils.Optional<PricesCountAggregateOutputType> | number
          }
        }
      }
      Discounts: {
        payload: Prisma.$DiscountsPayload<ExtArgs>
        fields: Prisma.DiscountsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DiscountsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DiscountsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountsPayload>
          }
          findFirst: {
            args: Prisma.DiscountsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DiscountsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountsPayload>
          }
          findMany: {
            args: Prisma.DiscountsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountsPayload>[]
          }
          create: {
            args: Prisma.DiscountsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountsPayload>
          }
          createMany: {
            args: Prisma.DiscountsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DiscountsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountsPayload>[]
          }
          delete: {
            args: Prisma.DiscountsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountsPayload>
          }
          update: {
            args: Prisma.DiscountsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountsPayload>
          }
          deleteMany: {
            args: Prisma.DiscountsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DiscountsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DiscountsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountsPayload>
          }
          aggregate: {
            args: Prisma.DiscountsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiscounts>
          }
          groupBy: {
            args: Prisma.DiscountsGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiscountsGroupByOutputType>[]
          }
          count: {
            args: Prisma.DiscountsCountArgs<ExtArgs>
            result: $Utils.Optional<DiscountsCountAggregateOutputType> | number
          }
        }
      }
      Discount_Prices: {
        payload: Prisma.$Discount_PricesPayload<ExtArgs>
        fields: Prisma.Discount_PricesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Discount_PricesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Discount_PricesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Discount_PricesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Discount_PricesPayload>
          }
          findFirst: {
            args: Prisma.Discount_PricesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Discount_PricesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Discount_PricesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Discount_PricesPayload>
          }
          findMany: {
            args: Prisma.Discount_PricesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Discount_PricesPayload>[]
          }
          create: {
            args: Prisma.Discount_PricesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Discount_PricesPayload>
          }
          createMany: {
            args: Prisma.Discount_PricesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Discount_PricesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Discount_PricesPayload>[]
          }
          delete: {
            args: Prisma.Discount_PricesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Discount_PricesPayload>
          }
          update: {
            args: Prisma.Discount_PricesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Discount_PricesPayload>
          }
          deleteMany: {
            args: Prisma.Discount_PricesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Discount_PricesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Discount_PricesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Discount_PricesPayload>
          }
          aggregate: {
            args: Prisma.Discount_PricesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiscount_Prices>
          }
          groupBy: {
            args: Prisma.Discount_PricesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Discount_PricesGroupByOutputType>[]
          }
          count: {
            args: Prisma.Discount_PricesCountArgs<ExtArgs>
            result: $Utils.Optional<Discount_PricesCountAggregateOutputType> | number
          }
        }
      }
      Customers: {
        payload: Prisma.$CustomersPayload<ExtArgs>
        fields: Prisma.CustomersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomersPayload>
          }
          findFirst: {
            args: Prisma.CustomersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomersPayload>
          }
          findMany: {
            args: Prisma.CustomersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomersPayload>[]
          }
          create: {
            args: Prisma.CustomersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomersPayload>
          }
          createMany: {
            args: Prisma.CustomersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomersPayload>[]
          }
          delete: {
            args: Prisma.CustomersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomersPayload>
          }
          update: {
            args: Prisma.CustomersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomersPayload>
          }
          deleteMany: {
            args: Prisma.CustomersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CustomersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomersPayload>
          }
          aggregate: {
            args: Prisma.CustomersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomers>
          }
          groupBy: {
            args: Prisma.CustomersGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomersGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomersCountArgs<ExtArgs>
            result: $Utils.Optional<CustomersCountAggregateOutputType> | number
          }
        }
      }
      Addresses: {
        payload: Prisma.$AddressesPayload<ExtArgs>
        fields: Prisma.AddressesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AddressesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AddressesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressesPayload>
          }
          findFirst: {
            args: Prisma.AddressesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AddressesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressesPayload>
          }
          findMany: {
            args: Prisma.AddressesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressesPayload>[]
          }
          create: {
            args: Prisma.AddressesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressesPayload>
          }
          createMany: {
            args: Prisma.AddressesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AddressesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressesPayload>[]
          }
          delete: {
            args: Prisma.AddressesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressesPayload>
          }
          update: {
            args: Prisma.AddressesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressesPayload>
          }
          deleteMany: {
            args: Prisma.AddressesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AddressesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AddressesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressesPayload>
          }
          aggregate: {
            args: Prisma.AddressesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAddresses>
          }
          groupBy: {
            args: Prisma.AddressesGroupByArgs<ExtArgs>
            result: $Utils.Optional<AddressesGroupByOutputType>[]
          }
          count: {
            args: Prisma.AddressesCountArgs<ExtArgs>
            result: $Utils.Optional<AddressesCountAggregateOutputType> | number
          }
        }
      }
      SubscriptionItems: {
        payload: Prisma.$SubscriptionItemsPayload<ExtArgs>
        fields: Prisma.SubscriptionItemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubscriptionItemsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubscriptionItemsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemsPayload>
          }
          findFirst: {
            args: Prisma.SubscriptionItemsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubscriptionItemsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemsPayload>
          }
          findMany: {
            args: Prisma.SubscriptionItemsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemsPayload>[]
          }
          create: {
            args: Prisma.SubscriptionItemsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemsPayload>
          }
          createMany: {
            args: Prisma.SubscriptionItemsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SubscriptionItemsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemsPayload>[]
          }
          delete: {
            args: Prisma.SubscriptionItemsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemsPayload>
          }
          update: {
            args: Prisma.SubscriptionItemsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemsPayload>
          }
          deleteMany: {
            args: Prisma.SubscriptionItemsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubscriptionItemsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubscriptionItemsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemsPayload>
          }
          aggregate: {
            args: Prisma.SubscriptionItemsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscriptionItems>
          }
          groupBy: {
            args: Prisma.SubscriptionItemsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionItemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubscriptionItemsCountArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionItemsCountAggregateOutputType> | number
          }
        }
      }
      Subscription_Scheduled_Changes: {
        payload: Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>
        fields: Prisma.Subscription_Scheduled_ChangesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Subscription_Scheduled_ChangesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Subscription_Scheduled_ChangesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Subscription_Scheduled_ChangesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Subscription_Scheduled_ChangesPayload>
          }
          findFirst: {
            args: Prisma.Subscription_Scheduled_ChangesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Subscription_Scheduled_ChangesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Subscription_Scheduled_ChangesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Subscription_Scheduled_ChangesPayload>
          }
          findMany: {
            args: Prisma.Subscription_Scheduled_ChangesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Subscription_Scheduled_ChangesPayload>[]
          }
          create: {
            args: Prisma.Subscription_Scheduled_ChangesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Subscription_Scheduled_ChangesPayload>
          }
          createMany: {
            args: Prisma.Subscription_Scheduled_ChangesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Subscription_Scheduled_ChangesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Subscription_Scheduled_ChangesPayload>[]
          }
          delete: {
            args: Prisma.Subscription_Scheduled_ChangesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Subscription_Scheduled_ChangesPayload>
          }
          update: {
            args: Prisma.Subscription_Scheduled_ChangesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Subscription_Scheduled_ChangesPayload>
          }
          deleteMany: {
            args: Prisma.Subscription_Scheduled_ChangesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Subscription_Scheduled_ChangesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Subscription_Scheduled_ChangesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Subscription_Scheduled_ChangesPayload>
          }
          aggregate: {
            args: Prisma.Subscription_Scheduled_ChangesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscription_Scheduled_Changes>
          }
          groupBy: {
            args: Prisma.Subscription_Scheduled_ChangesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Subscription_Scheduled_ChangesGroupByOutputType>[]
          }
          count: {
            args: Prisma.Subscription_Scheduled_ChangesCountArgs<ExtArgs>
            result: $Utils.Optional<Subscription_Scheduled_ChangesCountAggregateOutputType> | number
          }
        }
      }
      BillingDetails: {
        payload: Prisma.$BillingDetailsPayload<ExtArgs>
        fields: Prisma.BillingDetailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BillingDetailsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingDetailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BillingDetailsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingDetailsPayload>
          }
          findFirst: {
            args: Prisma.BillingDetailsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingDetailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BillingDetailsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingDetailsPayload>
          }
          findMany: {
            args: Prisma.BillingDetailsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingDetailsPayload>[]
          }
          create: {
            args: Prisma.BillingDetailsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingDetailsPayload>
          }
          createMany: {
            args: Prisma.BillingDetailsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BillingDetailsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingDetailsPayload>[]
          }
          delete: {
            args: Prisma.BillingDetailsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingDetailsPayload>
          }
          update: {
            args: Prisma.BillingDetailsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingDetailsPayload>
          }
          deleteMany: {
            args: Prisma.BillingDetailsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BillingDetailsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BillingDetailsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BillingDetailsPayload>
          }
          aggregate: {
            args: Prisma.BillingDetailsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBillingDetails>
          }
          groupBy: {
            args: Prisma.BillingDetailsGroupByArgs<ExtArgs>
            result: $Utils.Optional<BillingDetailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.BillingDetailsCountArgs<ExtArgs>
            result: $Utils.Optional<BillingDetailsCountAggregateOutputType> | number
          }
        }
      }
      Subscriptions: {
        payload: Prisma.$SubscriptionsPayload<ExtArgs>
        fields: Prisma.SubscriptionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubscriptionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubscriptionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionsPayload>
          }
          findFirst: {
            args: Prisma.SubscriptionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubscriptionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionsPayload>
          }
          findMany: {
            args: Prisma.SubscriptionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionsPayload>[]
          }
          create: {
            args: Prisma.SubscriptionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionsPayload>
          }
          createMany: {
            args: Prisma.SubscriptionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SubscriptionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionsPayload>[]
          }
          delete: {
            args: Prisma.SubscriptionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionsPayload>
          }
          update: {
            args: Prisma.SubscriptionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionsPayload>
          }
          deleteMany: {
            args: Prisma.SubscriptionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubscriptionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubscriptionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionsPayload>
          }
          aggregate: {
            args: Prisma.SubscriptionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscriptions>
          }
          groupBy: {
            args: Prisma.SubscriptionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubscriptionsCountArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionsCountAggregateOutputType> | number
          }
        }
      }
      TransactionItems: {
        payload: Prisma.$TransactionItemsPayload<ExtArgs>
        fields: Prisma.TransactionItemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransactionItemsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionItemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransactionItemsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionItemsPayload>
          }
          findFirst: {
            args: Prisma.TransactionItemsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionItemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransactionItemsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionItemsPayload>
          }
          findMany: {
            args: Prisma.TransactionItemsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionItemsPayload>[]
          }
          create: {
            args: Prisma.TransactionItemsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionItemsPayload>
          }
          createMany: {
            args: Prisma.TransactionItemsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransactionItemsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionItemsPayload>[]
          }
          delete: {
            args: Prisma.TransactionItemsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionItemsPayload>
          }
          update: {
            args: Prisma.TransactionItemsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionItemsPayload>
          }
          deleteMany: {
            args: Prisma.TransactionItemsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransactionItemsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TransactionItemsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionItemsPayload>
          }
          aggregate: {
            args: Prisma.TransactionItemsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransactionItems>
          }
          groupBy: {
            args: Prisma.TransactionItemsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransactionItemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransactionItemsCountArgs<ExtArgs>
            result: $Utils.Optional<TransactionItemsCountAggregateOutputType> | number
          }
        }
      }
      TransactionPayment: {
        payload: Prisma.$TransactionPaymentPayload<ExtArgs>
        fields: Prisma.TransactionPaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransactionPaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransactionPaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPaymentPayload>
          }
          findFirst: {
            args: Prisma.TransactionPaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransactionPaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPaymentPayload>
          }
          findMany: {
            args: Prisma.TransactionPaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPaymentPayload>[]
          }
          create: {
            args: Prisma.TransactionPaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPaymentPayload>
          }
          createMany: {
            args: Prisma.TransactionPaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransactionPaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPaymentPayload>[]
          }
          delete: {
            args: Prisma.TransactionPaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPaymentPayload>
          }
          update: {
            args: Prisma.TransactionPaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPaymentPayload>
          }
          deleteMany: {
            args: Prisma.TransactionPaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransactionPaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TransactionPaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPaymentPayload>
          }
          aggregate: {
            args: Prisma.TransactionPaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransactionPayment>
          }
          groupBy: {
            args: Prisma.TransactionPaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransactionPaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransactionPaymentCountArgs<ExtArgs>
            result: $Utils.Optional<TransactionPaymentCountAggregateOutputType> | number
          }
        }
      }
      Transactions: {
        payload: Prisma.$TransactionsPayload<ExtArgs>
        fields: Prisma.TransactionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransactionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransactionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionsPayload>
          }
          findFirst: {
            args: Prisma.TransactionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransactionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionsPayload>
          }
          findMany: {
            args: Prisma.TransactionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionsPayload>[]
          }
          create: {
            args: Prisma.TransactionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionsPayload>
          }
          createMany: {
            args: Prisma.TransactionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransactionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionsPayload>[]
          }
          delete: {
            args: Prisma.TransactionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionsPayload>
          }
          update: {
            args: Prisma.TransactionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionsPayload>
          }
          deleteMany: {
            args: Prisma.TransactionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransactionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TransactionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionsPayload>
          }
          aggregate: {
            args: Prisma.TransactionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransactions>
          }
          groupBy: {
            args: Prisma.TransactionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransactionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransactionsCountArgs<ExtArgs>
            result: $Utils.Optional<TransactionsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    project?: ProjectOmit
    projectUsers?: ProjectUsersOmit
    projectInvite?: ProjectInviteOmit
    sentEmail?: SentEmailOmit
    user?: UserOmit
    account?: AccountOmit
    session?: SessionOmit
    verificationToken?: VerificationTokenOmit
    products?: ProductsOmit
    api_keys?: Api_keysOmit
    prices?: PricesOmit
    discounts?: DiscountsOmit
    discount_Prices?: Discount_PricesOmit
    customers?: CustomersOmit
    addresses?: AddressesOmit
    subscriptionItems?: SubscriptionItemsOmit
    subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesOmit
    billingDetails?: BillingDetailsOmit
    subscriptions?: SubscriptionsOmit
    transactionItems?: TransactionItemsOmit
    transactionPayment?: TransactionPaymentOmit
    transactions?: TransactionsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ProjectCountOutputType
   */

  export type ProjectCountOutputType = {
    users: number
    invites: number
    sentEmails: number
    products: number
    prices: number
    discounts: number
    customers: number
    Subscriptions: number
    Transactions: number
  }

  export type ProjectCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | ProjectCountOutputTypeCountUsersArgs
    invites?: boolean | ProjectCountOutputTypeCountInvitesArgs
    sentEmails?: boolean | ProjectCountOutputTypeCountSentEmailsArgs
    products?: boolean | ProjectCountOutputTypeCountProductsArgs
    prices?: boolean | ProjectCountOutputTypeCountPricesArgs
    discounts?: boolean | ProjectCountOutputTypeCountDiscountsArgs
    customers?: boolean | ProjectCountOutputTypeCountCustomersArgs
    Subscriptions?: boolean | ProjectCountOutputTypeCountSubscriptionsArgs
    Transactions?: boolean | ProjectCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectCountOutputType
     */
    select?: ProjectCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectUsersWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountInvitesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectInviteWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountSentEmailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SentEmailWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductsWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountPricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PricesWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountDiscountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscountsWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountCustomersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomersWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountSubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionsWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionsWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    accounts: number
    ProjectUsers: number
    sessions: number
    api_keys: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | UserCountOutputTypeCountAccountsArgs
    ProjectUsers?: boolean | UserCountOutputTypeCountProjectUsersArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    api_keys?: boolean | UserCountOutputTypeCountApi_keysArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProjectUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectUsersWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountApi_keysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Api_keysWhereInput
  }


  /**
   * Count Type ProductsCountOutputType
   */

  export type ProductsCountOutputType = {
    prices: number
    Transactions: number
  }

  export type ProductsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    prices?: boolean | ProductsCountOutputTypeCountPricesArgs
    Transactions?: boolean | ProductsCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductsCountOutputType
     */
    select?: ProductsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountPricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PricesWhereInput
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionsWhereInput
  }


  /**
   * Count Type PricesCountOutputType
   */

  export type PricesCountOutputType = {
    Discount_Prices: number
    Subscription_Items: number
    TransactionItems: number
  }

  export type PricesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Discount_Prices?: boolean | PricesCountOutputTypeCountDiscount_PricesArgs
    Subscription_Items?: boolean | PricesCountOutputTypeCountSubscription_ItemsArgs
    TransactionItems?: boolean | PricesCountOutputTypeCountTransactionItemsArgs
  }

  // Custom InputTypes
  /**
   * PricesCountOutputType without action
   */
  export type PricesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PricesCountOutputType
     */
    select?: PricesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PricesCountOutputType without action
   */
  export type PricesCountOutputTypeCountDiscount_PricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Discount_PricesWhereInput
  }

  /**
   * PricesCountOutputType without action
   */
  export type PricesCountOutputTypeCountSubscription_ItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionItemsWhereInput
  }

  /**
   * PricesCountOutputType without action
   */
  export type PricesCountOutputTypeCountTransactionItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionItemsWhereInput
  }


  /**
   * Count Type DiscountsCountOutputType
   */

  export type DiscountsCountOutputType = {
    discount_prices: number
    Subscriptions: number
    Transactions: number
  }

  export type DiscountsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    discount_prices?: boolean | DiscountsCountOutputTypeCountDiscount_pricesArgs
    Subscriptions?: boolean | DiscountsCountOutputTypeCountSubscriptionsArgs
    Transactions?: boolean | DiscountsCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * DiscountsCountOutputType without action
   */
  export type DiscountsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscountsCountOutputType
     */
    select?: DiscountsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DiscountsCountOutputType without action
   */
  export type DiscountsCountOutputTypeCountDiscount_pricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Discount_PricesWhereInput
  }

  /**
   * DiscountsCountOutputType without action
   */
  export type DiscountsCountOutputTypeCountSubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionsWhereInput
  }

  /**
   * DiscountsCountOutputType without action
   */
  export type DiscountsCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionsWhereInput
  }


  /**
   * Count Type CustomersCountOutputType
   */

  export type CustomersCountOutputType = {
    Addresses: number
    Subscriptions: number
    Transactions: number
  }

  export type CustomersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Addresses?: boolean | CustomersCountOutputTypeCountAddressesArgs
    Subscriptions?: boolean | CustomersCountOutputTypeCountSubscriptionsArgs
    Transactions?: boolean | CustomersCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * CustomersCountOutputType without action
   */
  export type CustomersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomersCountOutputType
     */
    select?: CustomersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomersCountOutputType without action
   */
  export type CustomersCountOutputTypeCountAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AddressesWhereInput
  }

  /**
   * CustomersCountOutputType without action
   */
  export type CustomersCountOutputTypeCountSubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionsWhereInput
  }

  /**
   * CustomersCountOutputType without action
   */
  export type CustomersCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionsWhereInput
  }


  /**
   * Count Type AddressesCountOutputType
   */

  export type AddressesCountOutputType = {
    Subscriptions: number
    Transactions: number
  }

  export type AddressesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Subscriptions?: boolean | AddressesCountOutputTypeCountSubscriptionsArgs
    Transactions?: boolean | AddressesCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * AddressesCountOutputType without action
   */
  export type AddressesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AddressesCountOutputType
     */
    select?: AddressesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AddressesCountOutputType without action
   */
  export type AddressesCountOutputTypeCountSubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionsWhereInput
  }

  /**
   * AddressesCountOutputType without action
   */
  export type AddressesCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionsWhereInput
  }


  /**
   * Count Type SubscriptionsCountOutputType
   */

  export type SubscriptionsCountOutputType = {
    Subscription_Items: number
    Subscription_Scheduled_Changes: number
    transaction: number
  }

  export type SubscriptionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Subscription_Items?: boolean | SubscriptionsCountOutputTypeCountSubscription_ItemsArgs
    Subscription_Scheduled_Changes?: boolean | SubscriptionsCountOutputTypeCountSubscription_Scheduled_ChangesArgs
    transaction?: boolean | SubscriptionsCountOutputTypeCountTransactionArgs
  }

  // Custom InputTypes
  /**
   * SubscriptionsCountOutputType without action
   */
  export type SubscriptionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionsCountOutputType
     */
    select?: SubscriptionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SubscriptionsCountOutputType without action
   */
  export type SubscriptionsCountOutputTypeCountSubscription_ItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionItemsWhereInput
  }

  /**
   * SubscriptionsCountOutputType without action
   */
  export type SubscriptionsCountOutputTypeCountSubscription_Scheduled_ChangesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Subscription_Scheduled_ChangesWhereInput
  }

  /**
   * SubscriptionsCountOutputType without action
   */
  export type SubscriptionsCountOutputTypeCountTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionsWhereInput
  }


  /**
   * Count Type TransactionsCountOutputType
   */

  export type TransactionsCountOutputType = {
    transactionItems: number
  }

  export type TransactionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transactionItems?: boolean | TransactionsCountOutputTypeCountTransactionItemsArgs
  }

  // Custom InputTypes
  /**
   * TransactionsCountOutputType without action
   */
  export type TransactionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionsCountOutputType
     */
    select?: TransactionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TransactionsCountOutputType without action
   */
  export type TransactionsCountOutputTypeCountTransactionItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionItemsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Project
   */

  export type AggregateProject = {
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  export type ProjectAvgAggregateOutputType = {
    billingCycleStart: number | null
  }

  export type ProjectSumAggregateOutputType = {
    billingCycleStart: number | null
  }

  export type ProjectMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    logo: string | null
    plan: string | null
    billingCycleStart: number | null
    inviteCode: string | null
    createdAt: Date | null
    updatedAt: Date | null
    usageLastChecked: Date | null
  }

  export type ProjectMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    logo: string | null
    plan: string | null
    billingCycleStart: number | null
    inviteCode: string | null
    createdAt: Date | null
    updatedAt: Date | null
    usageLastChecked: Date | null
  }

  export type ProjectCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    logo: number
    plan: number
    billingCycleStart: number
    inviteCode: number
    createdAt: number
    updatedAt: number
    usageLastChecked: number
    _all: number
  }


  export type ProjectAvgAggregateInputType = {
    billingCycleStart?: true
  }

  export type ProjectSumAggregateInputType = {
    billingCycleStart?: true
  }

  export type ProjectMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    plan?: true
    billingCycleStart?: true
    inviteCode?: true
    createdAt?: true
    updatedAt?: true
    usageLastChecked?: true
  }

  export type ProjectMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    plan?: true
    billingCycleStart?: true
    inviteCode?: true
    createdAt?: true
    updatedAt?: true
    usageLastChecked?: true
  }

  export type ProjectCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    plan?: true
    billingCycleStart?: true
    inviteCode?: true
    createdAt?: true
    updatedAt?: true
    usageLastChecked?: true
    _all?: true
  }

  export type ProjectAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Project to aggregate.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Projects
    **/
    _count?: true | ProjectCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProjectAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProjectSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectMaxAggregateInputType
  }

  export type GetProjectAggregateType<T extends ProjectAggregateArgs> = {
        [P in keyof T & keyof AggregateProject]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject[P]>
      : GetScalarType<T[P], AggregateProject[P]>
  }




  export type ProjectGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectWhereInput
    orderBy?: ProjectOrderByWithAggregationInput | ProjectOrderByWithAggregationInput[]
    by: ProjectScalarFieldEnum[] | ProjectScalarFieldEnum
    having?: ProjectScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectCountAggregateInputType | true
    _avg?: ProjectAvgAggregateInputType
    _sum?: ProjectSumAggregateInputType
    _min?: ProjectMinAggregateInputType
    _max?: ProjectMaxAggregateInputType
  }

  export type ProjectGroupByOutputType = {
    id: string
    name: string
    slug: string
    logo: string | null
    plan: string
    billingCycleStart: number
    inviteCode: string | null
    createdAt: Date
    updatedAt: Date
    usageLastChecked: Date
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  type GetProjectGroupByPayload<T extends ProjectGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectGroupByOutputType[P]>
        }
      >
    >


  export type ProjectSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    plan?: boolean
    billingCycleStart?: boolean
    inviteCode?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usageLastChecked?: boolean
    users?: boolean | Project$usersArgs<ExtArgs>
    invites?: boolean | Project$invitesArgs<ExtArgs>
    sentEmails?: boolean | Project$sentEmailsArgs<ExtArgs>
    products?: boolean | Project$productsArgs<ExtArgs>
    prices?: boolean | Project$pricesArgs<ExtArgs>
    discounts?: boolean | Project$discountsArgs<ExtArgs>
    customers?: boolean | Project$customersArgs<ExtArgs>
    Subscriptions?: boolean | Project$SubscriptionsArgs<ExtArgs>
    Transactions?: boolean | Project$TransactionsArgs<ExtArgs>
    _count?: boolean | ProjectCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type ProjectSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    plan?: boolean
    billingCycleStart?: boolean
    inviteCode?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usageLastChecked?: boolean
  }, ExtArgs["result"]["project"]>


  export type ProjectSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    plan?: boolean
    billingCycleStart?: boolean
    inviteCode?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usageLastChecked?: boolean
  }

  export type ProjectOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug" | "logo" | "plan" | "billingCycleStart" | "inviteCode" | "createdAt" | "updatedAt" | "usageLastChecked", ExtArgs["result"]["project"]>
  export type ProjectInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Project$usersArgs<ExtArgs>
    invites?: boolean | Project$invitesArgs<ExtArgs>
    sentEmails?: boolean | Project$sentEmailsArgs<ExtArgs>
    products?: boolean | Project$productsArgs<ExtArgs>
    prices?: boolean | Project$pricesArgs<ExtArgs>
    discounts?: boolean | Project$discountsArgs<ExtArgs>
    customers?: boolean | Project$customersArgs<ExtArgs>
    Subscriptions?: boolean | Project$SubscriptionsArgs<ExtArgs>
    Transactions?: boolean | Project$TransactionsArgs<ExtArgs>
    _count?: boolean | ProjectCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProjectIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ProjectPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Project"
    objects: {
      users: Prisma.$ProjectUsersPayload<ExtArgs>[]
      invites: Prisma.$ProjectInvitePayload<ExtArgs>[]
      sentEmails: Prisma.$SentEmailPayload<ExtArgs>[]
      products: Prisma.$ProductsPayload<ExtArgs>[]
      prices: Prisma.$PricesPayload<ExtArgs>[]
      discounts: Prisma.$DiscountsPayload<ExtArgs>[]
      customers: Prisma.$CustomersPayload<ExtArgs>[]
      Subscriptions: Prisma.$SubscriptionsPayload<ExtArgs>[]
      Transactions: Prisma.$TransactionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      logo: string | null
      plan: string
      billingCycleStart: number
      inviteCode: string | null
      createdAt: Date
      updatedAt: Date
      usageLastChecked: Date
    }, ExtArgs["result"]["project"]>
    composites: {}
  }

  type ProjectGetPayload<S extends boolean | null | undefined | ProjectDefaultArgs> = $Result.GetResult<Prisma.$ProjectPayload, S>

  type ProjectCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProjectFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProjectCountAggregateInputType | true
    }

  export interface ProjectDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Project'], meta: { name: 'Project' } }
    /**
     * Find zero or one Project that matches the filter.
     * @param {ProjectFindUniqueArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProjectFindUniqueArgs>(args: SelectSubset<T, ProjectFindUniqueArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Project that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProjectFindUniqueOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProjectFindUniqueOrThrowArgs>(args: SelectSubset<T, ProjectFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Project that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProjectFindFirstArgs>(args?: SelectSubset<T, ProjectFindFirstArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Project that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProjectFindFirstOrThrowArgs>(args?: SelectSubset<T, ProjectFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Projects
     * const projects = await prisma.project.findMany()
     * 
     * // Get first 10 Projects
     * const projects = await prisma.project.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectWithIdOnly = await prisma.project.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProjectFindManyArgs>(args?: SelectSubset<T, ProjectFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Project.
     * @param {ProjectCreateArgs} args - Arguments to create a Project.
     * @example
     * // Create one Project
     * const Project = await prisma.project.create({
     *   data: {
     *     // ... data to create a Project
     *   }
     * })
     * 
     */
    create<T extends ProjectCreateArgs>(args: SelectSubset<T, ProjectCreateArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Projects.
     * @param {ProjectCreateManyArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const project = await prisma.project.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProjectCreateManyArgs>(args?: SelectSubset<T, ProjectCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Projects and returns the data saved in the database.
     * @param {ProjectCreateManyAndReturnArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const project = await prisma.project.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Projects and only return the `id`
     * const projectWithIdOnly = await prisma.project.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProjectCreateManyAndReturnArgs>(args?: SelectSubset<T, ProjectCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Project.
     * @param {ProjectDeleteArgs} args - Arguments to delete one Project.
     * @example
     * // Delete one Project
     * const Project = await prisma.project.delete({
     *   where: {
     *     // ... filter to delete one Project
     *   }
     * })
     * 
     */
    delete<T extends ProjectDeleteArgs>(args: SelectSubset<T, ProjectDeleteArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Project.
     * @param {ProjectUpdateArgs} args - Arguments to update one Project.
     * @example
     * // Update one Project
     * const project = await prisma.project.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProjectUpdateArgs>(args: SelectSubset<T, ProjectUpdateArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Projects.
     * @param {ProjectDeleteManyArgs} args - Arguments to filter Projects to delete.
     * @example
     * // Delete a few Projects
     * const { count } = await prisma.project.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProjectDeleteManyArgs>(args?: SelectSubset<T, ProjectDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Projects
     * const project = await prisma.project.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProjectUpdateManyArgs>(args: SelectSubset<T, ProjectUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Project.
     * @param {ProjectUpsertArgs} args - Arguments to update or create a Project.
     * @example
     * // Update or create a Project
     * const project = await prisma.project.upsert({
     *   create: {
     *     // ... data to create a Project
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project we want to update
     *   }
     * })
     */
    upsert<T extends ProjectUpsertArgs>(args: SelectSubset<T, ProjectUpsertArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectCountArgs} args - Arguments to filter Projects to count.
     * @example
     * // Count the number of Projects
     * const count = await prisma.project.count({
     *   where: {
     *     // ... the filter for the Projects we want to count
     *   }
     * })
    **/
    count<T extends ProjectCountArgs>(
      args?: Subset<T, ProjectCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectAggregateArgs>(args: Subset<T, ProjectAggregateArgs>): Prisma.PrismaPromise<GetProjectAggregateType<T>>

    /**
     * Group by Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectGroupByArgs['orderBy'] }
        : { orderBy?: ProjectGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Project model
   */
  readonly fields: ProjectFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Project.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProjectClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Project$usersArgs<ExtArgs> = {}>(args?: Subset<T, Project$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    invites<T extends Project$invitesArgs<ExtArgs> = {}>(args?: Subset<T, Project$invitesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectInvitePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    sentEmails<T extends Project$sentEmailsArgs<ExtArgs> = {}>(args?: Subset<T, Project$sentEmailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SentEmailPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    products<T extends Project$productsArgs<ExtArgs> = {}>(args?: Subset<T, Project$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    prices<T extends Project$pricesArgs<ExtArgs> = {}>(args?: Subset<T, Project$pricesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    discounts<T extends Project$discountsArgs<ExtArgs> = {}>(args?: Subset<T, Project$discountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    customers<T extends Project$customersArgs<ExtArgs> = {}>(args?: Subset<T, Project$customersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    Subscriptions<T extends Project$SubscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, Project$SubscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    Transactions<T extends Project$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, Project$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Project model
   */ 
  interface ProjectFieldRefs {
    readonly id: FieldRef<"Project", 'String'>
    readonly name: FieldRef<"Project", 'String'>
    readonly slug: FieldRef<"Project", 'String'>
    readonly logo: FieldRef<"Project", 'String'>
    readonly plan: FieldRef<"Project", 'String'>
    readonly billingCycleStart: FieldRef<"Project", 'Int'>
    readonly inviteCode: FieldRef<"Project", 'String'>
    readonly createdAt: FieldRef<"Project", 'DateTime'>
    readonly updatedAt: FieldRef<"Project", 'DateTime'>
    readonly usageLastChecked: FieldRef<"Project", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Project findUnique
   */
  export type ProjectFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project findUniqueOrThrow
   */
  export type ProjectFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project findFirst
   */
  export type ProjectFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project findFirstOrThrow
   */
  export type ProjectFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Project to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project findMany
   */
  export type ProjectFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter, which Projects to fetch.
     */
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: ProjectOrderByWithRelationInput | ProjectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Projects.
     */
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * Project create
   */
  export type ProjectCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The data needed to create a Project.
     */
    data: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
  }

  /**
   * Project createMany
   */
  export type ProjectCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Projects.
     */
    data: ProjectCreateManyInput | ProjectCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Project createManyAndReturn
   */
  export type ProjectCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * The data used to create many Projects.
     */
    data: ProjectCreateManyInput | ProjectCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Project update
   */
  export type ProjectUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The data needed to update a Project.
     */
    data: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
    /**
     * Choose, which Project to update.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project updateMany
   */
  export type ProjectUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Projects.
     */
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyInput>
    /**
     * Filter which Projects to update
     */
    where?: ProjectWhereInput
  }

  /**
   * Project upsert
   */
  export type ProjectUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * The filter to search for the Project to update in case it exists.
     */
    where: ProjectWhereUniqueInput
    /**
     * In case the Project found by the `where` argument doesn't exist, create a new Project with this data.
     */
    create: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
    /**
     * In case the Project was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
  }

  /**
   * Project delete
   */
  export type ProjectDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    /**
     * Filter which Project to delete.
     */
    where: ProjectWhereUniqueInput
  }

  /**
   * Project deleteMany
   */
  export type ProjectDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Projects to delete
     */
    where?: ProjectWhereInput
  }

  /**
   * Project.users
   */
  export type Project$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
    where?: ProjectUsersWhereInput
    orderBy?: ProjectUsersOrderByWithRelationInput | ProjectUsersOrderByWithRelationInput[]
    cursor?: ProjectUsersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectUsersScalarFieldEnum | ProjectUsersScalarFieldEnum[]
  }

  /**
   * Project.invites
   */
  export type Project$invitesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteInclude<ExtArgs> | null
    where?: ProjectInviteWhereInput
    orderBy?: ProjectInviteOrderByWithRelationInput | ProjectInviteOrderByWithRelationInput[]
    cursor?: ProjectInviteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectInviteScalarFieldEnum | ProjectInviteScalarFieldEnum[]
  }

  /**
   * Project.sentEmails
   */
  export type Project$sentEmailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailInclude<ExtArgs> | null
    where?: SentEmailWhereInput
    orderBy?: SentEmailOrderByWithRelationInput | SentEmailOrderByWithRelationInput[]
    cursor?: SentEmailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SentEmailScalarFieldEnum | SentEmailScalarFieldEnum[]
  }

  /**
   * Project.products
   */
  export type Project$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
    where?: ProductsWhereInput
    orderBy?: ProductsOrderByWithRelationInput | ProductsOrderByWithRelationInput[]
    cursor?: ProductsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * Project.prices
   */
  export type Project$pricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
    where?: PricesWhereInput
    orderBy?: PricesOrderByWithRelationInput | PricesOrderByWithRelationInput[]
    cursor?: PricesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PricesScalarFieldEnum | PricesScalarFieldEnum[]
  }

  /**
   * Project.discounts
   */
  export type Project$discountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    where?: DiscountsWhereInput
    orderBy?: DiscountsOrderByWithRelationInput | DiscountsOrderByWithRelationInput[]
    cursor?: DiscountsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscountsScalarFieldEnum | DiscountsScalarFieldEnum[]
  }

  /**
   * Project.customers
   */
  export type Project$customersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
    where?: CustomersWhereInput
    orderBy?: CustomersOrderByWithRelationInput | CustomersOrderByWithRelationInput[]
    cursor?: CustomersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomersScalarFieldEnum | CustomersScalarFieldEnum[]
  }

  /**
   * Project.Subscriptions
   */
  export type Project$SubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    where?: SubscriptionsWhereInput
    orderBy?: SubscriptionsOrderByWithRelationInput | SubscriptionsOrderByWithRelationInput[]
    cursor?: SubscriptionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * Project.Transactions
   */
  export type Project$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    where?: TransactionsWhereInput
    orderBy?: TransactionsOrderByWithRelationInput | TransactionsOrderByWithRelationInput[]
    cursor?: TransactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * Project without action
   */
  export type ProjectDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
  }


  /**
   * Model ProjectUsers
   */

  export type AggregateProjectUsers = {
    _count: ProjectUsersCountAggregateOutputType | null
    _min: ProjectUsersMinAggregateOutputType | null
    _max: ProjectUsersMaxAggregateOutputType | null
  }

  export type ProjectUsersMinAggregateOutputType = {
    id: string | null
    role: $Enums.Role | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    projectId: string | null
  }

  export type ProjectUsersMaxAggregateOutputType = {
    id: string | null
    role: $Enums.Role | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    projectId: string | null
  }

  export type ProjectUsersCountAggregateOutputType = {
    id: number
    role: number
    createdAt: number
    updatedAt: number
    userId: number
    projectId: number
    _all: number
  }


  export type ProjectUsersMinAggregateInputType = {
    id?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    projectId?: true
  }

  export type ProjectUsersMaxAggregateInputType = {
    id?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    projectId?: true
  }

  export type ProjectUsersCountAggregateInputType = {
    id?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    projectId?: true
    _all?: true
  }

  export type ProjectUsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProjectUsers to aggregate.
     */
    where?: ProjectUsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectUsers to fetch.
     */
    orderBy?: ProjectUsersOrderByWithRelationInput | ProjectUsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProjectUsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProjectUsers
    **/
    _count?: true | ProjectUsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectUsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectUsersMaxAggregateInputType
  }

  export type GetProjectUsersAggregateType<T extends ProjectUsersAggregateArgs> = {
        [P in keyof T & keyof AggregateProjectUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProjectUsers[P]>
      : GetScalarType<T[P], AggregateProjectUsers[P]>
  }




  export type ProjectUsersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectUsersWhereInput
    orderBy?: ProjectUsersOrderByWithAggregationInput | ProjectUsersOrderByWithAggregationInput[]
    by: ProjectUsersScalarFieldEnum[] | ProjectUsersScalarFieldEnum
    having?: ProjectUsersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectUsersCountAggregateInputType | true
    _min?: ProjectUsersMinAggregateInputType
    _max?: ProjectUsersMaxAggregateInputType
  }

  export type ProjectUsersGroupByOutputType = {
    id: string
    role: $Enums.Role
    createdAt: Date
    updatedAt: Date
    userId: string
    projectId: string
    _count: ProjectUsersCountAggregateOutputType | null
    _min: ProjectUsersMinAggregateOutputType | null
    _max: ProjectUsersMaxAggregateOutputType | null
  }

  type GetProjectUsersGroupByPayload<T extends ProjectUsersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectUsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectUsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectUsersGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectUsersGroupByOutputType[P]>
        }
      >
    >


  export type ProjectUsersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    projectId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["projectUsers"]>

  export type ProjectUsersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    projectId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["projectUsers"]>


  export type ProjectUsersSelectScalar = {
    id?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    projectId?: boolean
  }

  export type ProjectUsersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "role" | "createdAt" | "updatedAt" | "userId" | "projectId", ExtArgs["result"]["projectUsers"]>
  export type ProjectUsersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }
  export type ProjectUsersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }

  export type $ProjectUsersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProjectUsers"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      project: Prisma.$ProjectPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      role: $Enums.Role
      createdAt: Date
      updatedAt: Date
      userId: string
      projectId: string
    }, ExtArgs["result"]["projectUsers"]>
    composites: {}
  }

  type ProjectUsersGetPayload<S extends boolean | null | undefined | ProjectUsersDefaultArgs> = $Result.GetResult<Prisma.$ProjectUsersPayload, S>

  type ProjectUsersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProjectUsersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProjectUsersCountAggregateInputType | true
    }

  export interface ProjectUsersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProjectUsers'], meta: { name: 'ProjectUsers' } }
    /**
     * Find zero or one ProjectUsers that matches the filter.
     * @param {ProjectUsersFindUniqueArgs} args - Arguments to find a ProjectUsers
     * @example
     * // Get one ProjectUsers
     * const projectUsers = await prisma.projectUsers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProjectUsersFindUniqueArgs>(args: SelectSubset<T, ProjectUsersFindUniqueArgs<ExtArgs>>): Prisma__ProjectUsersClient<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one ProjectUsers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProjectUsersFindUniqueOrThrowArgs} args - Arguments to find a ProjectUsers
     * @example
     * // Get one ProjectUsers
     * const projectUsers = await prisma.projectUsers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProjectUsersFindUniqueOrThrowArgs>(args: SelectSubset<T, ProjectUsersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProjectUsersClient<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first ProjectUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUsersFindFirstArgs} args - Arguments to find a ProjectUsers
     * @example
     * // Get one ProjectUsers
     * const projectUsers = await prisma.projectUsers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProjectUsersFindFirstArgs>(args?: SelectSubset<T, ProjectUsersFindFirstArgs<ExtArgs>>): Prisma__ProjectUsersClient<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first ProjectUsers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUsersFindFirstOrThrowArgs} args - Arguments to find a ProjectUsers
     * @example
     * // Get one ProjectUsers
     * const projectUsers = await prisma.projectUsers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProjectUsersFindFirstOrThrowArgs>(args?: SelectSubset<T, ProjectUsersFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProjectUsersClient<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more ProjectUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUsersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProjectUsers
     * const projectUsers = await prisma.projectUsers.findMany()
     * 
     * // Get first 10 ProjectUsers
     * const projectUsers = await prisma.projectUsers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectUsersWithIdOnly = await prisma.projectUsers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProjectUsersFindManyArgs>(args?: SelectSubset<T, ProjectUsersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a ProjectUsers.
     * @param {ProjectUsersCreateArgs} args - Arguments to create a ProjectUsers.
     * @example
     * // Create one ProjectUsers
     * const ProjectUsers = await prisma.projectUsers.create({
     *   data: {
     *     // ... data to create a ProjectUsers
     *   }
     * })
     * 
     */
    create<T extends ProjectUsersCreateArgs>(args: SelectSubset<T, ProjectUsersCreateArgs<ExtArgs>>): Prisma__ProjectUsersClient<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many ProjectUsers.
     * @param {ProjectUsersCreateManyArgs} args - Arguments to create many ProjectUsers.
     * @example
     * // Create many ProjectUsers
     * const projectUsers = await prisma.projectUsers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProjectUsersCreateManyArgs>(args?: SelectSubset<T, ProjectUsersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProjectUsers and returns the data saved in the database.
     * @param {ProjectUsersCreateManyAndReturnArgs} args - Arguments to create many ProjectUsers.
     * @example
     * // Create many ProjectUsers
     * const projectUsers = await prisma.projectUsers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProjectUsers and only return the `id`
     * const projectUsersWithIdOnly = await prisma.projectUsers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProjectUsersCreateManyAndReturnArgs>(args?: SelectSubset<T, ProjectUsersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a ProjectUsers.
     * @param {ProjectUsersDeleteArgs} args - Arguments to delete one ProjectUsers.
     * @example
     * // Delete one ProjectUsers
     * const ProjectUsers = await prisma.projectUsers.delete({
     *   where: {
     *     // ... filter to delete one ProjectUsers
     *   }
     * })
     * 
     */
    delete<T extends ProjectUsersDeleteArgs>(args: SelectSubset<T, ProjectUsersDeleteArgs<ExtArgs>>): Prisma__ProjectUsersClient<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one ProjectUsers.
     * @param {ProjectUsersUpdateArgs} args - Arguments to update one ProjectUsers.
     * @example
     * // Update one ProjectUsers
     * const projectUsers = await prisma.projectUsers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProjectUsersUpdateArgs>(args: SelectSubset<T, ProjectUsersUpdateArgs<ExtArgs>>): Prisma__ProjectUsersClient<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more ProjectUsers.
     * @param {ProjectUsersDeleteManyArgs} args - Arguments to filter ProjectUsers to delete.
     * @example
     * // Delete a few ProjectUsers
     * const { count } = await prisma.projectUsers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProjectUsersDeleteManyArgs>(args?: SelectSubset<T, ProjectUsersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProjectUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUsersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProjectUsers
     * const projectUsers = await prisma.projectUsers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProjectUsersUpdateManyArgs>(args: SelectSubset<T, ProjectUsersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProjectUsers.
     * @param {ProjectUsersUpsertArgs} args - Arguments to update or create a ProjectUsers.
     * @example
     * // Update or create a ProjectUsers
     * const projectUsers = await prisma.projectUsers.upsert({
     *   create: {
     *     // ... data to create a ProjectUsers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProjectUsers we want to update
     *   }
     * })
     */
    upsert<T extends ProjectUsersUpsertArgs>(args: SelectSubset<T, ProjectUsersUpsertArgs<ExtArgs>>): Prisma__ProjectUsersClient<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of ProjectUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUsersCountArgs} args - Arguments to filter ProjectUsers to count.
     * @example
     * // Count the number of ProjectUsers
     * const count = await prisma.projectUsers.count({
     *   where: {
     *     // ... the filter for the ProjectUsers we want to count
     *   }
     * })
    **/
    count<T extends ProjectUsersCountArgs>(
      args?: Subset<T, ProjectUsersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectUsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProjectUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectUsersAggregateArgs>(args: Subset<T, ProjectUsersAggregateArgs>): Prisma.PrismaPromise<GetProjectUsersAggregateType<T>>

    /**
     * Group by ProjectUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectUsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectUsersGroupByArgs['orderBy'] }
        : { orderBy?: ProjectUsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectUsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProjectUsers model
   */
  readonly fields: ProjectUsersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProjectUsers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProjectUsersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    project<T extends ProjectDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProjectDefaultArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProjectUsers model
   */ 
  interface ProjectUsersFieldRefs {
    readonly id: FieldRef<"ProjectUsers", 'String'>
    readonly role: FieldRef<"ProjectUsers", 'Role'>
    readonly createdAt: FieldRef<"ProjectUsers", 'DateTime'>
    readonly updatedAt: FieldRef<"ProjectUsers", 'DateTime'>
    readonly userId: FieldRef<"ProjectUsers", 'String'>
    readonly projectId: FieldRef<"ProjectUsers", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProjectUsers findUnique
   */
  export type ProjectUsersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
    /**
     * Filter, which ProjectUsers to fetch.
     */
    where: ProjectUsersWhereUniqueInput
  }

  /**
   * ProjectUsers findUniqueOrThrow
   */
  export type ProjectUsersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
    /**
     * Filter, which ProjectUsers to fetch.
     */
    where: ProjectUsersWhereUniqueInput
  }

  /**
   * ProjectUsers findFirst
   */
  export type ProjectUsersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
    /**
     * Filter, which ProjectUsers to fetch.
     */
    where?: ProjectUsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectUsers to fetch.
     */
    orderBy?: ProjectUsersOrderByWithRelationInput | ProjectUsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectUsers.
     */
    cursor?: ProjectUsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectUsers.
     */
    distinct?: ProjectUsersScalarFieldEnum | ProjectUsersScalarFieldEnum[]
  }

  /**
   * ProjectUsers findFirstOrThrow
   */
  export type ProjectUsersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
    /**
     * Filter, which ProjectUsers to fetch.
     */
    where?: ProjectUsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectUsers to fetch.
     */
    orderBy?: ProjectUsersOrderByWithRelationInput | ProjectUsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectUsers.
     */
    cursor?: ProjectUsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectUsers.
     */
    distinct?: ProjectUsersScalarFieldEnum | ProjectUsersScalarFieldEnum[]
  }

  /**
   * ProjectUsers findMany
   */
  export type ProjectUsersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
    /**
     * Filter, which ProjectUsers to fetch.
     */
    where?: ProjectUsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectUsers to fetch.
     */
    orderBy?: ProjectUsersOrderByWithRelationInput | ProjectUsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProjectUsers.
     */
    cursor?: ProjectUsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectUsers.
     */
    skip?: number
    distinct?: ProjectUsersScalarFieldEnum | ProjectUsersScalarFieldEnum[]
  }

  /**
   * ProjectUsers create
   */
  export type ProjectUsersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
    /**
     * The data needed to create a ProjectUsers.
     */
    data: XOR<ProjectUsersCreateInput, ProjectUsersUncheckedCreateInput>
  }

  /**
   * ProjectUsers createMany
   */
  export type ProjectUsersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProjectUsers.
     */
    data: ProjectUsersCreateManyInput | ProjectUsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProjectUsers createManyAndReturn
   */
  export type ProjectUsersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * The data used to create many ProjectUsers.
     */
    data: ProjectUsersCreateManyInput | ProjectUsersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProjectUsers update
   */
  export type ProjectUsersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
    /**
     * The data needed to update a ProjectUsers.
     */
    data: XOR<ProjectUsersUpdateInput, ProjectUsersUncheckedUpdateInput>
    /**
     * Choose, which ProjectUsers to update.
     */
    where: ProjectUsersWhereUniqueInput
  }

  /**
   * ProjectUsers updateMany
   */
  export type ProjectUsersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProjectUsers.
     */
    data: XOR<ProjectUsersUpdateManyMutationInput, ProjectUsersUncheckedUpdateManyInput>
    /**
     * Filter which ProjectUsers to update
     */
    where?: ProjectUsersWhereInput
  }

  /**
   * ProjectUsers upsert
   */
  export type ProjectUsersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
    /**
     * The filter to search for the ProjectUsers to update in case it exists.
     */
    where: ProjectUsersWhereUniqueInput
    /**
     * In case the ProjectUsers found by the `where` argument doesn't exist, create a new ProjectUsers with this data.
     */
    create: XOR<ProjectUsersCreateInput, ProjectUsersUncheckedCreateInput>
    /**
     * In case the ProjectUsers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProjectUsersUpdateInput, ProjectUsersUncheckedUpdateInput>
  }

  /**
   * ProjectUsers delete
   */
  export type ProjectUsersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
    /**
     * Filter which ProjectUsers to delete.
     */
    where: ProjectUsersWhereUniqueInput
  }

  /**
   * ProjectUsers deleteMany
   */
  export type ProjectUsersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProjectUsers to delete
     */
    where?: ProjectUsersWhereInput
  }

  /**
   * ProjectUsers without action
   */
  export type ProjectUsersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
  }


  /**
   * Model ProjectInvite
   */

  export type AggregateProjectInvite = {
    _count: ProjectInviteCountAggregateOutputType | null
    _min: ProjectInviteMinAggregateOutputType | null
    _max: ProjectInviteMaxAggregateOutputType | null
  }

  export type ProjectInviteMinAggregateOutputType = {
    email: string | null
    expires: Date | null
    projectId: string | null
    createdAt: Date | null
  }

  export type ProjectInviteMaxAggregateOutputType = {
    email: string | null
    expires: Date | null
    projectId: string | null
    createdAt: Date | null
  }

  export type ProjectInviteCountAggregateOutputType = {
    email: number
    expires: number
    projectId: number
    createdAt: number
    _all: number
  }


  export type ProjectInviteMinAggregateInputType = {
    email?: true
    expires?: true
    projectId?: true
    createdAt?: true
  }

  export type ProjectInviteMaxAggregateInputType = {
    email?: true
    expires?: true
    projectId?: true
    createdAt?: true
  }

  export type ProjectInviteCountAggregateInputType = {
    email?: true
    expires?: true
    projectId?: true
    createdAt?: true
    _all?: true
  }

  export type ProjectInviteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProjectInvite to aggregate.
     */
    where?: ProjectInviteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectInvites to fetch.
     */
    orderBy?: ProjectInviteOrderByWithRelationInput | ProjectInviteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProjectInviteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectInvites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectInvites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProjectInvites
    **/
    _count?: true | ProjectInviteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectInviteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectInviteMaxAggregateInputType
  }

  export type GetProjectInviteAggregateType<T extends ProjectInviteAggregateArgs> = {
        [P in keyof T & keyof AggregateProjectInvite]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProjectInvite[P]>
      : GetScalarType<T[P], AggregateProjectInvite[P]>
  }




  export type ProjectInviteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProjectInviteWhereInput
    orderBy?: ProjectInviteOrderByWithAggregationInput | ProjectInviteOrderByWithAggregationInput[]
    by: ProjectInviteScalarFieldEnum[] | ProjectInviteScalarFieldEnum
    having?: ProjectInviteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectInviteCountAggregateInputType | true
    _min?: ProjectInviteMinAggregateInputType
    _max?: ProjectInviteMaxAggregateInputType
  }

  export type ProjectInviteGroupByOutputType = {
    email: string
    expires: Date
    projectId: string
    createdAt: Date
    _count: ProjectInviteCountAggregateOutputType | null
    _min: ProjectInviteMinAggregateOutputType | null
    _max: ProjectInviteMaxAggregateOutputType | null
  }

  type GetProjectInviteGroupByPayload<T extends ProjectInviteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectInviteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectInviteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectInviteGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectInviteGroupByOutputType[P]>
        }
      >
    >


  export type ProjectInviteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    email?: boolean
    expires?: boolean
    projectId?: boolean
    createdAt?: boolean
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["projectInvite"]>

  export type ProjectInviteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    email?: boolean
    expires?: boolean
    projectId?: boolean
    createdAt?: boolean
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["projectInvite"]>


  export type ProjectInviteSelectScalar = {
    email?: boolean
    expires?: boolean
    projectId?: boolean
    createdAt?: boolean
  }

  export type ProjectInviteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"email" | "expires" | "projectId" | "createdAt", ExtArgs["result"]["projectInvite"]>
  export type ProjectInviteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }
  export type ProjectInviteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | ProjectDefaultArgs<ExtArgs>
  }

  export type $ProjectInvitePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProjectInvite"
    objects: {
      project: Prisma.$ProjectPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      email: string
      expires: Date
      projectId: string
      createdAt: Date
    }, ExtArgs["result"]["projectInvite"]>
    composites: {}
  }

  type ProjectInviteGetPayload<S extends boolean | null | undefined | ProjectInviteDefaultArgs> = $Result.GetResult<Prisma.$ProjectInvitePayload, S>

  type ProjectInviteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProjectInviteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProjectInviteCountAggregateInputType | true
    }

  export interface ProjectInviteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProjectInvite'], meta: { name: 'ProjectInvite' } }
    /**
     * Find zero or one ProjectInvite that matches the filter.
     * @param {ProjectInviteFindUniqueArgs} args - Arguments to find a ProjectInvite
     * @example
     * // Get one ProjectInvite
     * const projectInvite = await prisma.projectInvite.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProjectInviteFindUniqueArgs>(args: SelectSubset<T, ProjectInviteFindUniqueArgs<ExtArgs>>): Prisma__ProjectInviteClient<$Result.GetResult<Prisma.$ProjectInvitePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one ProjectInvite that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProjectInviteFindUniqueOrThrowArgs} args - Arguments to find a ProjectInvite
     * @example
     * // Get one ProjectInvite
     * const projectInvite = await prisma.projectInvite.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProjectInviteFindUniqueOrThrowArgs>(args: SelectSubset<T, ProjectInviteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProjectInviteClient<$Result.GetResult<Prisma.$ProjectInvitePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first ProjectInvite that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectInviteFindFirstArgs} args - Arguments to find a ProjectInvite
     * @example
     * // Get one ProjectInvite
     * const projectInvite = await prisma.projectInvite.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProjectInviteFindFirstArgs>(args?: SelectSubset<T, ProjectInviteFindFirstArgs<ExtArgs>>): Prisma__ProjectInviteClient<$Result.GetResult<Prisma.$ProjectInvitePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first ProjectInvite that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectInviteFindFirstOrThrowArgs} args - Arguments to find a ProjectInvite
     * @example
     * // Get one ProjectInvite
     * const projectInvite = await prisma.projectInvite.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProjectInviteFindFirstOrThrowArgs>(args?: SelectSubset<T, ProjectInviteFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProjectInviteClient<$Result.GetResult<Prisma.$ProjectInvitePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more ProjectInvites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectInviteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProjectInvites
     * const projectInvites = await prisma.projectInvite.findMany()
     * 
     * // Get first 10 ProjectInvites
     * const projectInvites = await prisma.projectInvite.findMany({ take: 10 })
     * 
     * // Only select the `email`
     * const projectInviteWithEmailOnly = await prisma.projectInvite.findMany({ select: { email: true } })
     * 
     */
    findMany<T extends ProjectInviteFindManyArgs>(args?: SelectSubset<T, ProjectInviteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectInvitePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a ProjectInvite.
     * @param {ProjectInviteCreateArgs} args - Arguments to create a ProjectInvite.
     * @example
     * // Create one ProjectInvite
     * const ProjectInvite = await prisma.projectInvite.create({
     *   data: {
     *     // ... data to create a ProjectInvite
     *   }
     * })
     * 
     */
    create<T extends ProjectInviteCreateArgs>(args: SelectSubset<T, ProjectInviteCreateArgs<ExtArgs>>): Prisma__ProjectInviteClient<$Result.GetResult<Prisma.$ProjectInvitePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many ProjectInvites.
     * @param {ProjectInviteCreateManyArgs} args - Arguments to create many ProjectInvites.
     * @example
     * // Create many ProjectInvites
     * const projectInvite = await prisma.projectInvite.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProjectInviteCreateManyArgs>(args?: SelectSubset<T, ProjectInviteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProjectInvites and returns the data saved in the database.
     * @param {ProjectInviteCreateManyAndReturnArgs} args - Arguments to create many ProjectInvites.
     * @example
     * // Create many ProjectInvites
     * const projectInvite = await prisma.projectInvite.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProjectInvites and only return the `email`
     * const projectInviteWithEmailOnly = await prisma.projectInvite.createManyAndReturn({
     *   select: { email: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProjectInviteCreateManyAndReturnArgs>(args?: SelectSubset<T, ProjectInviteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectInvitePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a ProjectInvite.
     * @param {ProjectInviteDeleteArgs} args - Arguments to delete one ProjectInvite.
     * @example
     * // Delete one ProjectInvite
     * const ProjectInvite = await prisma.projectInvite.delete({
     *   where: {
     *     // ... filter to delete one ProjectInvite
     *   }
     * })
     * 
     */
    delete<T extends ProjectInviteDeleteArgs>(args: SelectSubset<T, ProjectInviteDeleteArgs<ExtArgs>>): Prisma__ProjectInviteClient<$Result.GetResult<Prisma.$ProjectInvitePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one ProjectInvite.
     * @param {ProjectInviteUpdateArgs} args - Arguments to update one ProjectInvite.
     * @example
     * // Update one ProjectInvite
     * const projectInvite = await prisma.projectInvite.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProjectInviteUpdateArgs>(args: SelectSubset<T, ProjectInviteUpdateArgs<ExtArgs>>): Prisma__ProjectInviteClient<$Result.GetResult<Prisma.$ProjectInvitePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more ProjectInvites.
     * @param {ProjectInviteDeleteManyArgs} args - Arguments to filter ProjectInvites to delete.
     * @example
     * // Delete a few ProjectInvites
     * const { count } = await prisma.projectInvite.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProjectInviteDeleteManyArgs>(args?: SelectSubset<T, ProjectInviteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProjectInvites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectInviteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProjectInvites
     * const projectInvite = await prisma.projectInvite.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProjectInviteUpdateManyArgs>(args: SelectSubset<T, ProjectInviteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProjectInvite.
     * @param {ProjectInviteUpsertArgs} args - Arguments to update or create a ProjectInvite.
     * @example
     * // Update or create a ProjectInvite
     * const projectInvite = await prisma.projectInvite.upsert({
     *   create: {
     *     // ... data to create a ProjectInvite
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProjectInvite we want to update
     *   }
     * })
     */
    upsert<T extends ProjectInviteUpsertArgs>(args: SelectSubset<T, ProjectInviteUpsertArgs<ExtArgs>>): Prisma__ProjectInviteClient<$Result.GetResult<Prisma.$ProjectInvitePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of ProjectInvites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectInviteCountArgs} args - Arguments to filter ProjectInvites to count.
     * @example
     * // Count the number of ProjectInvites
     * const count = await prisma.projectInvite.count({
     *   where: {
     *     // ... the filter for the ProjectInvites we want to count
     *   }
     * })
    **/
    count<T extends ProjectInviteCountArgs>(
      args?: Subset<T, ProjectInviteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectInviteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProjectInvite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectInviteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectInviteAggregateArgs>(args: Subset<T, ProjectInviteAggregateArgs>): Prisma.PrismaPromise<GetProjectInviteAggregateType<T>>

    /**
     * Group by ProjectInvite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectInviteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectInviteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectInviteGroupByArgs['orderBy'] }
        : { orderBy?: ProjectInviteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectInviteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectInviteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProjectInvite model
   */
  readonly fields: ProjectInviteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProjectInvite.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProjectInviteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    project<T extends ProjectDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProjectDefaultArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProjectInvite model
   */ 
  interface ProjectInviteFieldRefs {
    readonly email: FieldRef<"ProjectInvite", 'String'>
    readonly expires: FieldRef<"ProjectInvite", 'DateTime'>
    readonly projectId: FieldRef<"ProjectInvite", 'String'>
    readonly createdAt: FieldRef<"ProjectInvite", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProjectInvite findUnique
   */
  export type ProjectInviteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteInclude<ExtArgs> | null
    /**
     * Filter, which ProjectInvite to fetch.
     */
    where: ProjectInviteWhereUniqueInput
  }

  /**
   * ProjectInvite findUniqueOrThrow
   */
  export type ProjectInviteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteInclude<ExtArgs> | null
    /**
     * Filter, which ProjectInvite to fetch.
     */
    where: ProjectInviteWhereUniqueInput
  }

  /**
   * ProjectInvite findFirst
   */
  export type ProjectInviteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteInclude<ExtArgs> | null
    /**
     * Filter, which ProjectInvite to fetch.
     */
    where?: ProjectInviteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectInvites to fetch.
     */
    orderBy?: ProjectInviteOrderByWithRelationInput | ProjectInviteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectInvites.
     */
    cursor?: ProjectInviteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectInvites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectInvites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectInvites.
     */
    distinct?: ProjectInviteScalarFieldEnum | ProjectInviteScalarFieldEnum[]
  }

  /**
   * ProjectInvite findFirstOrThrow
   */
  export type ProjectInviteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteInclude<ExtArgs> | null
    /**
     * Filter, which ProjectInvite to fetch.
     */
    where?: ProjectInviteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectInvites to fetch.
     */
    orderBy?: ProjectInviteOrderByWithRelationInput | ProjectInviteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectInvites.
     */
    cursor?: ProjectInviteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectInvites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectInvites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectInvites.
     */
    distinct?: ProjectInviteScalarFieldEnum | ProjectInviteScalarFieldEnum[]
  }

  /**
   * ProjectInvite findMany
   */
  export type ProjectInviteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteInclude<ExtArgs> | null
    /**
     * Filter, which ProjectInvites to fetch.
     */
    where?: ProjectInviteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectInvites to fetch.
     */
    orderBy?: ProjectInviteOrderByWithRelationInput | ProjectInviteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProjectInvites.
     */
    cursor?: ProjectInviteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectInvites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectInvites.
     */
    skip?: number
    distinct?: ProjectInviteScalarFieldEnum | ProjectInviteScalarFieldEnum[]
  }

  /**
   * ProjectInvite create
   */
  export type ProjectInviteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteInclude<ExtArgs> | null
    /**
     * The data needed to create a ProjectInvite.
     */
    data: XOR<ProjectInviteCreateInput, ProjectInviteUncheckedCreateInput>
  }

  /**
   * ProjectInvite createMany
   */
  export type ProjectInviteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProjectInvites.
     */
    data: ProjectInviteCreateManyInput | ProjectInviteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProjectInvite createManyAndReturn
   */
  export type ProjectInviteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * The data used to create many ProjectInvites.
     */
    data: ProjectInviteCreateManyInput | ProjectInviteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProjectInvite update
   */
  export type ProjectInviteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteInclude<ExtArgs> | null
    /**
     * The data needed to update a ProjectInvite.
     */
    data: XOR<ProjectInviteUpdateInput, ProjectInviteUncheckedUpdateInput>
    /**
     * Choose, which ProjectInvite to update.
     */
    where: ProjectInviteWhereUniqueInput
  }

  /**
   * ProjectInvite updateMany
   */
  export type ProjectInviteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProjectInvites.
     */
    data: XOR<ProjectInviteUpdateManyMutationInput, ProjectInviteUncheckedUpdateManyInput>
    /**
     * Filter which ProjectInvites to update
     */
    where?: ProjectInviteWhereInput
  }

  /**
   * ProjectInvite upsert
   */
  export type ProjectInviteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteInclude<ExtArgs> | null
    /**
     * The filter to search for the ProjectInvite to update in case it exists.
     */
    where: ProjectInviteWhereUniqueInput
    /**
     * In case the ProjectInvite found by the `where` argument doesn't exist, create a new ProjectInvite with this data.
     */
    create: XOR<ProjectInviteCreateInput, ProjectInviteUncheckedCreateInput>
    /**
     * In case the ProjectInvite was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProjectInviteUpdateInput, ProjectInviteUncheckedUpdateInput>
  }

  /**
   * ProjectInvite delete
   */
  export type ProjectInviteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteInclude<ExtArgs> | null
    /**
     * Filter which ProjectInvite to delete.
     */
    where: ProjectInviteWhereUniqueInput
  }

  /**
   * ProjectInvite deleteMany
   */
  export type ProjectInviteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProjectInvites to delete
     */
    where?: ProjectInviteWhereInput
  }

  /**
   * ProjectInvite without action
   */
  export type ProjectInviteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectInvite
     */
    select?: ProjectInviteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectInvite
     */
    omit?: ProjectInviteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInviteInclude<ExtArgs> | null
  }


  /**
   * Model SentEmail
   */

  export type AggregateSentEmail = {
    _count: SentEmailCountAggregateOutputType | null
    _min: SentEmailMinAggregateOutputType | null
    _max: SentEmailMaxAggregateOutputType | null
  }

  export type SentEmailMinAggregateOutputType = {
    id: string | null
    type: string | null
    createdAt: Date | null
    projectId: string | null
  }

  export type SentEmailMaxAggregateOutputType = {
    id: string | null
    type: string | null
    createdAt: Date | null
    projectId: string | null
  }

  export type SentEmailCountAggregateOutputType = {
    id: number
    type: number
    createdAt: number
    projectId: number
    _all: number
  }


  export type SentEmailMinAggregateInputType = {
    id?: true
    type?: true
    createdAt?: true
    projectId?: true
  }

  export type SentEmailMaxAggregateInputType = {
    id?: true
    type?: true
    createdAt?: true
    projectId?: true
  }

  export type SentEmailCountAggregateInputType = {
    id?: true
    type?: true
    createdAt?: true
    projectId?: true
    _all?: true
  }

  export type SentEmailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SentEmail to aggregate.
     */
    where?: SentEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SentEmails to fetch.
     */
    orderBy?: SentEmailOrderByWithRelationInput | SentEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SentEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SentEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SentEmails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SentEmails
    **/
    _count?: true | SentEmailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SentEmailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SentEmailMaxAggregateInputType
  }

  export type GetSentEmailAggregateType<T extends SentEmailAggregateArgs> = {
        [P in keyof T & keyof AggregateSentEmail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSentEmail[P]>
      : GetScalarType<T[P], AggregateSentEmail[P]>
  }




  export type SentEmailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SentEmailWhereInput
    orderBy?: SentEmailOrderByWithAggregationInput | SentEmailOrderByWithAggregationInput[]
    by: SentEmailScalarFieldEnum[] | SentEmailScalarFieldEnum
    having?: SentEmailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SentEmailCountAggregateInputType | true
    _min?: SentEmailMinAggregateInputType
    _max?: SentEmailMaxAggregateInputType
  }

  export type SentEmailGroupByOutputType = {
    id: string
    type: string
    createdAt: Date
    projectId: string | null
    _count: SentEmailCountAggregateOutputType | null
    _min: SentEmailMinAggregateOutputType | null
    _max: SentEmailMaxAggregateOutputType | null
  }

  type GetSentEmailGroupByPayload<T extends SentEmailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SentEmailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SentEmailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SentEmailGroupByOutputType[P]>
            : GetScalarType<T[P], SentEmailGroupByOutputType[P]>
        }
      >
    >


  export type SentEmailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    createdAt?: boolean
    projectId?: boolean
    project?: boolean | SentEmail$projectArgs<ExtArgs>
  }, ExtArgs["result"]["sentEmail"]>

  export type SentEmailSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    createdAt?: boolean
    projectId?: boolean
    project?: boolean | SentEmail$projectArgs<ExtArgs>
  }, ExtArgs["result"]["sentEmail"]>


  export type SentEmailSelectScalar = {
    id?: boolean
    type?: boolean
    createdAt?: boolean
    projectId?: boolean
  }

  export type SentEmailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "createdAt" | "projectId", ExtArgs["result"]["sentEmail"]>
  export type SentEmailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | SentEmail$projectArgs<ExtArgs>
  }
  export type SentEmailIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | SentEmail$projectArgs<ExtArgs>
  }

  export type $SentEmailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SentEmail"
    objects: {
      project: Prisma.$ProjectPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: string
      createdAt: Date
      projectId: string | null
    }, ExtArgs["result"]["sentEmail"]>
    composites: {}
  }

  type SentEmailGetPayload<S extends boolean | null | undefined | SentEmailDefaultArgs> = $Result.GetResult<Prisma.$SentEmailPayload, S>

  type SentEmailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SentEmailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SentEmailCountAggregateInputType | true
    }

  export interface SentEmailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SentEmail'], meta: { name: 'SentEmail' } }
    /**
     * Find zero or one SentEmail that matches the filter.
     * @param {SentEmailFindUniqueArgs} args - Arguments to find a SentEmail
     * @example
     * // Get one SentEmail
     * const sentEmail = await prisma.sentEmail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SentEmailFindUniqueArgs>(args: SelectSubset<T, SentEmailFindUniqueArgs<ExtArgs>>): Prisma__SentEmailClient<$Result.GetResult<Prisma.$SentEmailPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one SentEmail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SentEmailFindUniqueOrThrowArgs} args - Arguments to find a SentEmail
     * @example
     * // Get one SentEmail
     * const sentEmail = await prisma.sentEmail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SentEmailFindUniqueOrThrowArgs>(args: SelectSubset<T, SentEmailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SentEmailClient<$Result.GetResult<Prisma.$SentEmailPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first SentEmail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentEmailFindFirstArgs} args - Arguments to find a SentEmail
     * @example
     * // Get one SentEmail
     * const sentEmail = await prisma.sentEmail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SentEmailFindFirstArgs>(args?: SelectSubset<T, SentEmailFindFirstArgs<ExtArgs>>): Prisma__SentEmailClient<$Result.GetResult<Prisma.$SentEmailPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first SentEmail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentEmailFindFirstOrThrowArgs} args - Arguments to find a SentEmail
     * @example
     * // Get one SentEmail
     * const sentEmail = await prisma.sentEmail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SentEmailFindFirstOrThrowArgs>(args?: SelectSubset<T, SentEmailFindFirstOrThrowArgs<ExtArgs>>): Prisma__SentEmailClient<$Result.GetResult<Prisma.$SentEmailPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more SentEmails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentEmailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SentEmails
     * const sentEmails = await prisma.sentEmail.findMany()
     * 
     * // Get first 10 SentEmails
     * const sentEmails = await prisma.sentEmail.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sentEmailWithIdOnly = await prisma.sentEmail.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SentEmailFindManyArgs>(args?: SelectSubset<T, SentEmailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SentEmailPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a SentEmail.
     * @param {SentEmailCreateArgs} args - Arguments to create a SentEmail.
     * @example
     * // Create one SentEmail
     * const SentEmail = await prisma.sentEmail.create({
     *   data: {
     *     // ... data to create a SentEmail
     *   }
     * })
     * 
     */
    create<T extends SentEmailCreateArgs>(args: SelectSubset<T, SentEmailCreateArgs<ExtArgs>>): Prisma__SentEmailClient<$Result.GetResult<Prisma.$SentEmailPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many SentEmails.
     * @param {SentEmailCreateManyArgs} args - Arguments to create many SentEmails.
     * @example
     * // Create many SentEmails
     * const sentEmail = await prisma.sentEmail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SentEmailCreateManyArgs>(args?: SelectSubset<T, SentEmailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SentEmails and returns the data saved in the database.
     * @param {SentEmailCreateManyAndReturnArgs} args - Arguments to create many SentEmails.
     * @example
     * // Create many SentEmails
     * const sentEmail = await prisma.sentEmail.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SentEmails and only return the `id`
     * const sentEmailWithIdOnly = await prisma.sentEmail.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SentEmailCreateManyAndReturnArgs>(args?: SelectSubset<T, SentEmailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SentEmailPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a SentEmail.
     * @param {SentEmailDeleteArgs} args - Arguments to delete one SentEmail.
     * @example
     * // Delete one SentEmail
     * const SentEmail = await prisma.sentEmail.delete({
     *   where: {
     *     // ... filter to delete one SentEmail
     *   }
     * })
     * 
     */
    delete<T extends SentEmailDeleteArgs>(args: SelectSubset<T, SentEmailDeleteArgs<ExtArgs>>): Prisma__SentEmailClient<$Result.GetResult<Prisma.$SentEmailPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one SentEmail.
     * @param {SentEmailUpdateArgs} args - Arguments to update one SentEmail.
     * @example
     * // Update one SentEmail
     * const sentEmail = await prisma.sentEmail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SentEmailUpdateArgs>(args: SelectSubset<T, SentEmailUpdateArgs<ExtArgs>>): Prisma__SentEmailClient<$Result.GetResult<Prisma.$SentEmailPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more SentEmails.
     * @param {SentEmailDeleteManyArgs} args - Arguments to filter SentEmails to delete.
     * @example
     * // Delete a few SentEmails
     * const { count } = await prisma.sentEmail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SentEmailDeleteManyArgs>(args?: SelectSubset<T, SentEmailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SentEmails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentEmailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SentEmails
     * const sentEmail = await prisma.sentEmail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SentEmailUpdateManyArgs>(args: SelectSubset<T, SentEmailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SentEmail.
     * @param {SentEmailUpsertArgs} args - Arguments to update or create a SentEmail.
     * @example
     * // Update or create a SentEmail
     * const sentEmail = await prisma.sentEmail.upsert({
     *   create: {
     *     // ... data to create a SentEmail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SentEmail we want to update
     *   }
     * })
     */
    upsert<T extends SentEmailUpsertArgs>(args: SelectSubset<T, SentEmailUpsertArgs<ExtArgs>>): Prisma__SentEmailClient<$Result.GetResult<Prisma.$SentEmailPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of SentEmails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentEmailCountArgs} args - Arguments to filter SentEmails to count.
     * @example
     * // Count the number of SentEmails
     * const count = await prisma.sentEmail.count({
     *   where: {
     *     // ... the filter for the SentEmails we want to count
     *   }
     * })
    **/
    count<T extends SentEmailCountArgs>(
      args?: Subset<T, SentEmailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SentEmailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SentEmail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentEmailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SentEmailAggregateArgs>(args: Subset<T, SentEmailAggregateArgs>): Prisma.PrismaPromise<GetSentEmailAggregateType<T>>

    /**
     * Group by SentEmail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentEmailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SentEmailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SentEmailGroupByArgs['orderBy'] }
        : { orderBy?: SentEmailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SentEmailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSentEmailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SentEmail model
   */
  readonly fields: SentEmailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SentEmail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SentEmailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    project<T extends SentEmail$projectArgs<ExtArgs> = {}>(args?: Subset<T, SentEmail$projectArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SentEmail model
   */ 
  interface SentEmailFieldRefs {
    readonly id: FieldRef<"SentEmail", 'String'>
    readonly type: FieldRef<"SentEmail", 'String'>
    readonly createdAt: FieldRef<"SentEmail", 'DateTime'>
    readonly projectId: FieldRef<"SentEmail", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SentEmail findUnique
   */
  export type SentEmailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailInclude<ExtArgs> | null
    /**
     * Filter, which SentEmail to fetch.
     */
    where: SentEmailWhereUniqueInput
  }

  /**
   * SentEmail findUniqueOrThrow
   */
  export type SentEmailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailInclude<ExtArgs> | null
    /**
     * Filter, which SentEmail to fetch.
     */
    where: SentEmailWhereUniqueInput
  }

  /**
   * SentEmail findFirst
   */
  export type SentEmailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailInclude<ExtArgs> | null
    /**
     * Filter, which SentEmail to fetch.
     */
    where?: SentEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SentEmails to fetch.
     */
    orderBy?: SentEmailOrderByWithRelationInput | SentEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SentEmails.
     */
    cursor?: SentEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SentEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SentEmails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SentEmails.
     */
    distinct?: SentEmailScalarFieldEnum | SentEmailScalarFieldEnum[]
  }

  /**
   * SentEmail findFirstOrThrow
   */
  export type SentEmailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailInclude<ExtArgs> | null
    /**
     * Filter, which SentEmail to fetch.
     */
    where?: SentEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SentEmails to fetch.
     */
    orderBy?: SentEmailOrderByWithRelationInput | SentEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SentEmails.
     */
    cursor?: SentEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SentEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SentEmails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SentEmails.
     */
    distinct?: SentEmailScalarFieldEnum | SentEmailScalarFieldEnum[]
  }

  /**
   * SentEmail findMany
   */
  export type SentEmailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailInclude<ExtArgs> | null
    /**
     * Filter, which SentEmails to fetch.
     */
    where?: SentEmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SentEmails to fetch.
     */
    orderBy?: SentEmailOrderByWithRelationInput | SentEmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SentEmails.
     */
    cursor?: SentEmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SentEmails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SentEmails.
     */
    skip?: number
    distinct?: SentEmailScalarFieldEnum | SentEmailScalarFieldEnum[]
  }

  /**
   * SentEmail create
   */
  export type SentEmailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailInclude<ExtArgs> | null
    /**
     * The data needed to create a SentEmail.
     */
    data: XOR<SentEmailCreateInput, SentEmailUncheckedCreateInput>
  }

  /**
   * SentEmail createMany
   */
  export type SentEmailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SentEmails.
     */
    data: SentEmailCreateManyInput | SentEmailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SentEmail createManyAndReturn
   */
  export type SentEmailCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * The data used to create many SentEmails.
     */
    data: SentEmailCreateManyInput | SentEmailCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SentEmail update
   */
  export type SentEmailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailInclude<ExtArgs> | null
    /**
     * The data needed to update a SentEmail.
     */
    data: XOR<SentEmailUpdateInput, SentEmailUncheckedUpdateInput>
    /**
     * Choose, which SentEmail to update.
     */
    where: SentEmailWhereUniqueInput
  }

  /**
   * SentEmail updateMany
   */
  export type SentEmailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SentEmails.
     */
    data: XOR<SentEmailUpdateManyMutationInput, SentEmailUncheckedUpdateManyInput>
    /**
     * Filter which SentEmails to update
     */
    where?: SentEmailWhereInput
  }

  /**
   * SentEmail upsert
   */
  export type SentEmailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailInclude<ExtArgs> | null
    /**
     * The filter to search for the SentEmail to update in case it exists.
     */
    where: SentEmailWhereUniqueInput
    /**
     * In case the SentEmail found by the `where` argument doesn't exist, create a new SentEmail with this data.
     */
    create: XOR<SentEmailCreateInput, SentEmailUncheckedCreateInput>
    /**
     * In case the SentEmail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SentEmailUpdateInput, SentEmailUncheckedUpdateInput>
  }

  /**
   * SentEmail delete
   */
  export type SentEmailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailInclude<ExtArgs> | null
    /**
     * Filter which SentEmail to delete.
     */
    where: SentEmailWhereUniqueInput
  }

  /**
   * SentEmail deleteMany
   */
  export type SentEmailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SentEmails to delete
     */
    where?: SentEmailWhereInput
  }

  /**
   * SentEmail.project
   */
  export type SentEmail$projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
  }

  /**
   * SentEmail without action
   */
  export type SentEmailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentEmail
     */
    select?: SentEmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentEmail
     */
    omit?: SentEmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SentEmailInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    emailVerified: Date | null
    image: string | null
    source: string | null
    defaultWorkspace: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    emailVerified: Date | null
    image: string | null
    source: string | null
    defaultWorkspace: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    emailVerified: number
    image: number
    source: number
    defaultWorkspace: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    source?: true
    defaultWorkspace?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    source?: true
    defaultWorkspace?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    source?: true
    defaultWorkspace?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    name: string | null
    email: string | null
    emailVerified: Date | null
    image: string | null
    source: string | null
    defaultWorkspace: string | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    source?: boolean
    defaultWorkspace?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    accounts?: boolean | User$accountsArgs<ExtArgs>
    ProjectUsers?: boolean | User$ProjectUsersArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    api_keys?: boolean | User$api_keysArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    source?: boolean
    defaultWorkspace?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>


  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    source?: boolean
    defaultWorkspace?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "emailVerified" | "image" | "source" | "defaultWorkspace" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | User$accountsArgs<ExtArgs>
    ProjectUsers?: boolean | User$ProjectUsersArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    api_keys?: boolean | User$api_keysArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      accounts: Prisma.$AccountPayload<ExtArgs>[]
      ProjectUsers: Prisma.$ProjectUsersPayload<ExtArgs>[]
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      api_keys: Prisma.$Api_keysPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string | null
      email: string | null
      emailVerified: Date | null
      image: string | null
      source: string | null
      defaultWorkspace: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    accounts<T extends User$accountsArgs<ExtArgs> = {}>(args?: Subset<T, User$accountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    ProjectUsers<T extends User$ProjectUsersArgs<ExtArgs> = {}>(args?: Subset<T, User$ProjectUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProjectUsersPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    api_keys<T extends User$api_keysArgs<ExtArgs> = {}>(args?: Subset<T, User$api_keysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Api_keysPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'DateTime'>
    readonly image: FieldRef<"User", 'String'>
    readonly source: FieldRef<"User", 'String'>
    readonly defaultWorkspace: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.accounts
   */
  export type User$accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * User.ProjectUsers
   */
  export type User$ProjectUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectUsers
     */
    select?: ProjectUsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProjectUsers
     */
    omit?: ProjectUsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectUsersInclude<ExtArgs> | null
    where?: ProjectUsersWhereInput
    orderBy?: ProjectUsersOrderByWithRelationInput | ProjectUsersOrderByWithRelationInput[]
    cursor?: ProjectUsersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectUsersScalarFieldEnum | ProjectUsersScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.api_keys
   */
  export type User$api_keysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysInclude<ExtArgs> | null
    where?: Api_keysWhereInput
    orderBy?: Api_keysOrderByWithRelationInput | Api_keysOrderByWithRelationInput[]
    cursor?: Api_keysWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Api_keysScalarFieldEnum | Api_keysScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountSumAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountMinAggregateOutputType = {
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountMaxAggregateOutputType = {
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountCountAggregateOutputType = {
    userId: number
    type: number
    provider: number
    providerAccountId: number
    refresh_token: number
    access_token: number
    expires_at: number
    token_type: number
    scope: number
    id_token: number
    session_state: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    expires_at?: true
  }

  export type AccountSumAggregateInputType = {
    expires_at?: true
  }

  export type AccountMinAggregateInputType = {
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountMaxAggregateInputType = {
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountCountAggregateInputType = {
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    createdAt: Date
    updatedAt: Date
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>


  export type AccountSelectScalar = {
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"userId" | "type" | "provider" | "providerAccountId" | "refresh_token" | "access_token" | "expires_at" | "token_type" | "scope" | "id_token" | "session_state" | "createdAt" | "updatedAt", ExtArgs["result"]["account"]>
  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      userId: string
      type: string
      provider: string
      providerAccountId: string
      refresh_token: string | null
      access_token: string | null
      expires_at: number | null
      token_type: string | null
      scope: string | null
      id_token: string | null
      session_state: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `userId`
     * const accountWithUserIdOnly = await prisma.account.findMany({ select: { userId: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `userId`
     * const accountWithUserIdOnly = await prisma.account.createManyAndReturn({
     *   select: { userId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */ 
  interface AccountFieldRefs {
    readonly userId: FieldRef<"Account", 'String'>
    readonly type: FieldRef<"Account", 'String'>
    readonly provider: FieldRef<"Account", 'String'>
    readonly providerAccountId: FieldRef<"Account", 'String'>
    readonly refresh_token: FieldRef<"Account", 'String'>
    readonly access_token: FieldRef<"Account", 'String'>
    readonly expires_at: FieldRef<"Account", 'Int'>
    readonly token_type: FieldRef<"Account", 'String'>
    readonly scope: FieldRef<"Account", 'String'>
    readonly id_token: FieldRef<"Account", 'String'>
    readonly session_state: FieldRef<"Account", 'String'>
    readonly createdAt: FieldRef<"Account", 'DateTime'>
    readonly updatedAt: FieldRef<"Account", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    sessionToken: string | null
    userId: string | null
    expires: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessionMaxAggregateOutputType = {
    sessionToken: string | null
    userId: string | null
    expires: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessionCountAggregateOutputType = {
    sessionToken: number
    userId: number
    expires: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    sessionToken?: true
    userId?: true
    expires?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessionMaxAggregateInputType = {
    sessionToken?: true
    userId?: true
    expires?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessionCountAggregateInputType = {
    sessionToken?: true
    userId?: true
    expires?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    sessionToken: string
    userId: string
    expires: Date
    createdAt: Date
    updatedAt: Date
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>


  export type SessionSelectScalar = {
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"sessionToken" | "userId" | "expires" | "createdAt" | "updatedAt", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      sessionToken: string
      userId: string
      expires: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `sessionToken`
     * const sessionWithSessionTokenOnly = await prisma.session.findMany({ select: { sessionToken: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `sessionToken`
     * const sessionWithSessionTokenOnly = await prisma.session.createManyAndReturn({
     *   select: { sessionToken: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */ 
  interface SessionFieldRefs {
    readonly sessionToken: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'String'>
    readonly expires: FieldRef<"Session", 'DateTime'>
    readonly createdAt: FieldRef<"Session", 'DateTime'>
    readonly updatedAt: FieldRef<"Session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model VerificationToken
   */

  export type AggregateVerificationToken = {
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  export type VerificationTokenMinAggregateOutputType = {
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenMaxAggregateOutputType = {
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenCountAggregateOutputType = {
    identifier: number
    token: number
    expires: number
    _all: number
  }


  export type VerificationTokenMinAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenMaxAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenCountAggregateInputType = {
    identifier?: true
    token?: true
    expires?: true
    _all?: true
  }

  export type VerificationTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationToken to aggregate.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VerificationTokens
    **/
    _count?: true | VerificationTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type GetVerificationTokenAggregateType<T extends VerificationTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificationToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificationToken[P]>
      : GetScalarType<T[P], AggregateVerificationToken[P]>
  }




  export type VerificationTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationTokenWhereInput
    orderBy?: VerificationTokenOrderByWithAggregationInput | VerificationTokenOrderByWithAggregationInput[]
    by: VerificationTokenScalarFieldEnum[] | VerificationTokenScalarFieldEnum
    having?: VerificationTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationTokenCountAggregateInputType | true
    _min?: VerificationTokenMinAggregateInputType
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type VerificationTokenGroupByOutputType = {
    identifier: string
    token: string
    expires: Date
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  type GetVerificationTokenGroupByPayload<T extends VerificationTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
        }
      >
    >


  export type VerificationTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>


  export type VerificationTokenSelectScalar = {
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }

  export type VerificationTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"identifier" | "token" | "expires", ExtArgs["result"]["verificationToken"]>

  export type $VerificationTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VerificationToken"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      identifier: string
      token: string
      expires: Date
    }, ExtArgs["result"]["verificationToken"]>
    composites: {}
  }

  type VerificationTokenGetPayload<S extends boolean | null | undefined | VerificationTokenDefaultArgs> = $Result.GetResult<Prisma.$VerificationTokenPayload, S>

  type VerificationTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationTokenCountAggregateInputType | true
    }

  export interface VerificationTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VerificationToken'], meta: { name: 'VerificationToken' } }
    /**
     * Find zero or one VerificationToken that matches the filter.
     * @param {VerificationTokenFindUniqueArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationTokenFindUniqueArgs>(args: SelectSubset<T, VerificationTokenFindUniqueArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one VerificationToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationTokenFindUniqueOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first VerificationToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationTokenFindFirstArgs>(args?: SelectSubset<T, VerificationTokenFindFirstArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first VerificationToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more VerificationTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany()
     * 
     * // Get first 10 VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany({ take: 10 })
     * 
     * // Only select the `identifier`
     * const verificationTokenWithIdentifierOnly = await prisma.verificationToken.findMany({ select: { identifier: true } })
     * 
     */
    findMany<T extends VerificationTokenFindManyArgs>(args?: SelectSubset<T, VerificationTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a VerificationToken.
     * @param {VerificationTokenCreateArgs} args - Arguments to create a VerificationToken.
     * @example
     * // Create one VerificationToken
     * const VerificationToken = await prisma.verificationToken.create({
     *   data: {
     *     // ... data to create a VerificationToken
     *   }
     * })
     * 
     */
    create<T extends VerificationTokenCreateArgs>(args: SelectSubset<T, VerificationTokenCreateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many VerificationTokens.
     * @param {VerificationTokenCreateManyArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationTokenCreateManyArgs>(args?: SelectSubset<T, VerificationTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VerificationTokens and returns the data saved in the database.
     * @param {VerificationTokenCreateManyAndReturnArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VerificationTokens and only return the `identifier`
     * const verificationTokenWithIdentifierOnly = await prisma.verificationToken.createManyAndReturn({
     *   select: { identifier: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificationTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificationTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a VerificationToken.
     * @param {VerificationTokenDeleteArgs} args - Arguments to delete one VerificationToken.
     * @example
     * // Delete one VerificationToken
     * const VerificationToken = await prisma.verificationToken.delete({
     *   where: {
     *     // ... filter to delete one VerificationToken
     *   }
     * })
     * 
     */
    delete<T extends VerificationTokenDeleteArgs>(args: SelectSubset<T, VerificationTokenDeleteArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one VerificationToken.
     * @param {VerificationTokenUpdateArgs} args - Arguments to update one VerificationToken.
     * @example
     * // Update one VerificationToken
     * const verificationToken = await prisma.verificationToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationTokenUpdateArgs>(args: SelectSubset<T, VerificationTokenUpdateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more VerificationTokens.
     * @param {VerificationTokenDeleteManyArgs} args - Arguments to filter VerificationTokens to delete.
     * @example
     * // Delete a few VerificationTokens
     * const { count } = await prisma.verificationToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationTokenDeleteManyArgs>(args?: SelectSubset<T, VerificationTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VerificationTokens
     * const verificationToken = await prisma.verificationToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationTokenUpdateManyArgs>(args: SelectSubset<T, VerificationTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VerificationToken.
     * @param {VerificationTokenUpsertArgs} args - Arguments to update or create a VerificationToken.
     * @example
     * // Update or create a VerificationToken
     * const verificationToken = await prisma.verificationToken.upsert({
     *   create: {
     *     // ... data to create a VerificationToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VerificationToken we want to update
     *   }
     * })
     */
    upsert<T extends VerificationTokenUpsertArgs>(args: SelectSubset<T, VerificationTokenUpsertArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenCountArgs} args - Arguments to filter VerificationTokens to count.
     * @example
     * // Count the number of VerificationTokens
     * const count = await prisma.verificationToken.count({
     *   where: {
     *     // ... the filter for the VerificationTokens we want to count
     *   }
     * })
    **/
    count<T extends VerificationTokenCountArgs>(
      args?: Subset<T, VerificationTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationTokenAggregateArgs>(args: Subset<T, VerificationTokenAggregateArgs>): Prisma.PrismaPromise<GetVerificationTokenAggregateType<T>>

    /**
     * Group by VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationTokenGroupByArgs['orderBy'] }
        : { orderBy?: VerificationTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VerificationToken model
   */
  readonly fields: VerificationTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VerificationToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VerificationToken model
   */ 
  interface VerificationTokenFieldRefs {
    readonly identifier: FieldRef<"VerificationToken", 'String'>
    readonly token: FieldRef<"VerificationToken", 'String'>
    readonly expires: FieldRef<"VerificationToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VerificationToken findUnique
   */
  export type VerificationTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findUniqueOrThrow
   */
  export type VerificationTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findFirst
   */
  export type VerificationTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findFirstOrThrow
   */
  export type VerificationTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findMany
   */
  export type VerificationTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationTokens to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken create
   */
  export type VerificationTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to create a VerificationToken.
     */
    data: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
  }

  /**
   * VerificationToken createMany
   */
  export type VerificationTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken createManyAndReturn
   */
  export type VerificationTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken update
   */
  export type VerificationTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to update a VerificationToken.
     */
    data: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
    /**
     * Choose, which VerificationToken to update.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken updateMany
   */
  export type VerificationTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VerificationTokens.
     */
    data: XOR<VerificationTokenUpdateManyMutationInput, VerificationTokenUncheckedUpdateManyInput>
    /**
     * Filter which VerificationTokens to update
     */
    where?: VerificationTokenWhereInput
  }

  /**
   * VerificationToken upsert
   */
  export type VerificationTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The filter to search for the VerificationToken to update in case it exists.
     */
    where: VerificationTokenWhereUniqueInput
    /**
     * In case the VerificationToken found by the `where` argument doesn't exist, create a new VerificationToken with this data.
     */
    create: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
    /**
     * In case the VerificationToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
  }

  /**
   * VerificationToken delete
   */
  export type VerificationTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter which VerificationToken to delete.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken deleteMany
   */
  export type VerificationTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationTokens to delete
     */
    where?: VerificationTokenWhereInput
  }

  /**
   * VerificationToken without action
   */
  export type VerificationTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
  }


  /**
   * Model Products
   */

  export type AggregateProducts = {
    _count: ProductsCountAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  export type ProductsMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    status: $Enums.product_status | null
    createdAt: Date | null
    updatedAt: Date | null
    project_id: string | null
  }

  export type ProductsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    status: $Enums.product_status | null
    createdAt: Date | null
    updatedAt: Date | null
    project_id: string | null
  }

  export type ProductsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    status: number
    createdAt: number
    updatedAt: number
    custom_data: number
    project_id: number
    _all: number
  }


  export type ProductsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    project_id?: true
  }

  export type ProductsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    project_id?: true
  }

  export type ProductsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    custom_data?: true
    project_id?: true
    _all?: true
  }

  export type ProductsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to aggregate.
     */
    where?: ProductsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductsOrderByWithRelationInput | ProductsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductsMaxAggregateInputType
  }

  export type GetProductsAggregateType<T extends ProductsAggregateArgs> = {
        [P in keyof T & keyof AggregateProducts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducts[P]>
      : GetScalarType<T[P], AggregateProducts[P]>
  }




  export type ProductsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductsWhereInput
    orderBy?: ProductsOrderByWithAggregationInput | ProductsOrderByWithAggregationInput[]
    by: ProductsScalarFieldEnum[] | ProductsScalarFieldEnum
    having?: ProductsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductsCountAggregateInputType | true
    _min?: ProductsMinAggregateInputType
    _max?: ProductsMaxAggregateInputType
  }

  export type ProductsGroupByOutputType = {
    id: string
    name: string
    description: string
    status: $Enums.product_status
    createdAt: Date
    updatedAt: Date
    custom_data: JsonValue | null
    project_id: string
    _count: ProductsCountAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  type GetProductsGroupByPayload<T extends ProductsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductsGroupByOutputType[P]>
            : GetScalarType<T[P], ProductsGroupByOutputType[P]>
        }
      >
    >


  export type ProductsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    custom_data?: boolean
    project_id?: boolean
    Project?: boolean | ProjectDefaultArgs<ExtArgs>
    prices?: boolean | Products$pricesArgs<ExtArgs>
    Transactions?: boolean | Products$TransactionsArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>

  export type ProductsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    custom_data?: boolean
    project_id?: boolean
    Project?: boolean | ProjectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>


  export type ProductsSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    custom_data?: boolean
    project_id?: boolean
  }

  export type ProductsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "status" | "createdAt" | "updatedAt" | "custom_data" | "project_id", ExtArgs["result"]["products"]>
  export type ProductsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Project?: boolean | ProjectDefaultArgs<ExtArgs>
    prices?: boolean | Products$pricesArgs<ExtArgs>
    Transactions?: boolean | Products$TransactionsArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Project?: boolean | ProjectDefaultArgs<ExtArgs>
  }

  export type $ProductsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Products"
    objects: {
      Project: Prisma.$ProjectPayload<ExtArgs>
      prices: Prisma.$PricesPayload<ExtArgs>[]
      Transactions: Prisma.$TransactionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string
      status: $Enums.product_status
      createdAt: Date
      updatedAt: Date
      custom_data: Prisma.JsonValue | null
      project_id: string
    }, ExtArgs["result"]["products"]>
    composites: {}
  }

  type ProductsGetPayload<S extends boolean | null | undefined | ProductsDefaultArgs> = $Result.GetResult<Prisma.$ProductsPayload, S>

  type ProductsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductsCountAggregateInputType | true
    }

  export interface ProductsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Products'], meta: { name: 'Products' } }
    /**
     * Find zero or one Products that matches the filter.
     * @param {ProductsFindUniqueArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductsFindUniqueArgs>(args: SelectSubset<T, ProductsFindUniqueArgs<ExtArgs>>): Prisma__ProductsClient<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Products that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductsFindUniqueOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductsFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductsClient<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsFindFirstArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductsFindFirstArgs>(args?: SelectSubset<T, ProductsFindFirstArgs<ExtArgs>>): Prisma__ProductsClient<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Products that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsFindFirstOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductsFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductsClient<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.products.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productsWithIdOnly = await prisma.products.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductsFindManyArgs>(args?: SelectSubset<T, ProductsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Products.
     * @param {ProductsCreateArgs} args - Arguments to create a Products.
     * @example
     * // Create one Products
     * const Products = await prisma.products.create({
     *   data: {
     *     // ... data to create a Products
     *   }
     * })
     * 
     */
    create<T extends ProductsCreateArgs>(args: SelectSubset<T, ProductsCreateArgs<ExtArgs>>): Prisma__ProductsClient<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Products.
     * @param {ProductsCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const products = await prisma.products.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductsCreateManyArgs>(args?: SelectSubset<T, ProductsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductsCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const products = await prisma.products.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productsWithIdOnly = await prisma.products.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductsCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Products.
     * @param {ProductsDeleteArgs} args - Arguments to delete one Products.
     * @example
     * // Delete one Products
     * const Products = await prisma.products.delete({
     *   where: {
     *     // ... filter to delete one Products
     *   }
     * })
     * 
     */
    delete<T extends ProductsDeleteArgs>(args: SelectSubset<T, ProductsDeleteArgs<ExtArgs>>): Prisma__ProductsClient<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Products.
     * @param {ProductsUpdateArgs} args - Arguments to update one Products.
     * @example
     * // Update one Products
     * const products = await prisma.products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductsUpdateArgs>(args: SelectSubset<T, ProductsUpdateArgs<ExtArgs>>): Prisma__ProductsClient<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductsDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductsDeleteManyArgs>(args?: SelectSubset<T, ProductsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const products = await prisma.products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductsUpdateManyArgs>(args: SelectSubset<T, ProductsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Products.
     * @param {ProductsUpsertArgs} args - Arguments to update or create a Products.
     * @example
     * // Update or create a Products
     * const products = await prisma.products.upsert({
     *   create: {
     *     // ... data to create a Products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Products we want to update
     *   }
     * })
     */
    upsert<T extends ProductsUpsertArgs>(args: SelectSubset<T, ProductsUpsertArgs<ExtArgs>>): Prisma__ProductsClient<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.products.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductsCountArgs>(
      args?: Subset<T, ProductsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductsAggregateArgs>(args: Subset<T, ProductsAggregateArgs>): Prisma.PrismaPromise<GetProductsAggregateType<T>>

    /**
     * Group by Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductsGroupByArgs['orderBy'] }
        : { orderBy?: ProductsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Products model
   */
  readonly fields: ProductsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Project<T extends ProjectDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProjectDefaultArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    prices<T extends Products$pricesArgs<ExtArgs> = {}>(args?: Subset<T, Products$pricesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    Transactions<T extends Products$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, Products$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Products model
   */ 
  interface ProductsFieldRefs {
    readonly id: FieldRef<"Products", 'String'>
    readonly name: FieldRef<"Products", 'String'>
    readonly description: FieldRef<"Products", 'String'>
    readonly status: FieldRef<"Products", 'product_status'>
    readonly createdAt: FieldRef<"Products", 'DateTime'>
    readonly updatedAt: FieldRef<"Products", 'DateTime'>
    readonly custom_data: FieldRef<"Products", 'Json'>
    readonly project_id: FieldRef<"Products", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Products findUnique
   */
  export type ProductsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where: ProductsWhereUniqueInput
  }

  /**
   * Products findUniqueOrThrow
   */
  export type ProductsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where: ProductsWhereUniqueInput
  }

  /**
   * Products findFirst
   */
  export type ProductsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductsOrderByWithRelationInput | ProductsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * Products findFirstOrThrow
   */
  export type ProductsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductsOrderByWithRelationInput | ProductsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * Products findMany
   */
  export type ProductsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductsOrderByWithRelationInput | ProductsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * Products create
   */
  export type ProductsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
    /**
     * The data needed to create a Products.
     */
    data: XOR<ProductsCreateInput, ProductsUncheckedCreateInput>
  }

  /**
   * Products createMany
   */
  export type ProductsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductsCreateManyInput | ProductsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Products createManyAndReturn
   */
  export type ProductsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductsCreateManyInput | ProductsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Products update
   */
  export type ProductsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
    /**
     * The data needed to update a Products.
     */
    data: XOR<ProductsUpdateInput, ProductsUncheckedUpdateInput>
    /**
     * Choose, which Products to update.
     */
    where: ProductsWhereUniqueInput
  }

  /**
   * Products updateMany
   */
  export type ProductsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductsUpdateManyMutationInput, ProductsUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductsWhereInput
  }

  /**
   * Products upsert
   */
  export type ProductsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
    /**
     * The filter to search for the Products to update in case it exists.
     */
    where: ProductsWhereUniqueInput
    /**
     * In case the Products found by the `where` argument doesn't exist, create a new Products with this data.
     */
    create: XOR<ProductsCreateInput, ProductsUncheckedCreateInput>
    /**
     * In case the Products was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductsUpdateInput, ProductsUncheckedUpdateInput>
  }

  /**
   * Products delete
   */
  export type ProductsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
    /**
     * Filter which Products to delete.
     */
    where: ProductsWhereUniqueInput
  }

  /**
   * Products deleteMany
   */
  export type ProductsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductsWhereInput
  }

  /**
   * Products.prices
   */
  export type Products$pricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
    where?: PricesWhereInput
    orderBy?: PricesOrderByWithRelationInput | PricesOrderByWithRelationInput[]
    cursor?: PricesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PricesScalarFieldEnum | PricesScalarFieldEnum[]
  }

  /**
   * Products.Transactions
   */
  export type Products$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    where?: TransactionsWhereInput
    orderBy?: TransactionsOrderByWithRelationInput | TransactionsOrderByWithRelationInput[]
    cursor?: TransactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * Products without action
   */
  export type ProductsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
  }


  /**
   * Model Api_keys
   */

  export type AggregateApi_keys = {
    _count: Api_keysCountAggregateOutputType | null
    _min: Api_keysMinAggregateOutputType | null
    _max: Api_keysMaxAggregateOutputType | null
  }

  export type Api_keysMinAggregateOutputType = {
    id: string | null
    prefix: string | null
    description: string | null
    createdAt: Date | null
    key: string | null
    userId: string | null
  }

  export type Api_keysMaxAggregateOutputType = {
    id: string | null
    prefix: string | null
    description: string | null
    createdAt: Date | null
    key: string | null
    userId: string | null
  }

  export type Api_keysCountAggregateOutputType = {
    id: number
    prefix: number
    description: number
    createdAt: number
    key: number
    userId: number
    _all: number
  }


  export type Api_keysMinAggregateInputType = {
    id?: true
    prefix?: true
    description?: true
    createdAt?: true
    key?: true
    userId?: true
  }

  export type Api_keysMaxAggregateInputType = {
    id?: true
    prefix?: true
    description?: true
    createdAt?: true
    key?: true
    userId?: true
  }

  export type Api_keysCountAggregateInputType = {
    id?: true
    prefix?: true
    description?: true
    createdAt?: true
    key?: true
    userId?: true
    _all?: true
  }

  export type Api_keysAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Api_keys to aggregate.
     */
    where?: Api_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Api_keys to fetch.
     */
    orderBy?: Api_keysOrderByWithRelationInput | Api_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Api_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Api_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Api_keys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Api_keys
    **/
    _count?: true | Api_keysCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Api_keysMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Api_keysMaxAggregateInputType
  }

  export type GetApi_keysAggregateType<T extends Api_keysAggregateArgs> = {
        [P in keyof T & keyof AggregateApi_keys]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApi_keys[P]>
      : GetScalarType<T[P], AggregateApi_keys[P]>
  }




  export type Api_keysGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Api_keysWhereInput
    orderBy?: Api_keysOrderByWithAggregationInput | Api_keysOrderByWithAggregationInput[]
    by: Api_keysScalarFieldEnum[] | Api_keysScalarFieldEnum
    having?: Api_keysScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Api_keysCountAggregateInputType | true
    _min?: Api_keysMinAggregateInputType
    _max?: Api_keysMaxAggregateInputType
  }

  export type Api_keysGroupByOutputType = {
    id: string
    prefix: string | null
    description: string | null
    createdAt: Date
    key: string
    userId: string
    _count: Api_keysCountAggregateOutputType | null
    _min: Api_keysMinAggregateOutputType | null
    _max: Api_keysMaxAggregateOutputType | null
  }

  type GetApi_keysGroupByPayload<T extends Api_keysGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Api_keysGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Api_keysGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Api_keysGroupByOutputType[P]>
            : GetScalarType<T[P], Api_keysGroupByOutputType[P]>
        }
      >
    >


  export type Api_keysSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    prefix?: boolean
    description?: boolean
    createdAt?: boolean
    key?: boolean
    userId?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["api_keys"]>

  export type Api_keysSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    prefix?: boolean
    description?: boolean
    createdAt?: boolean
    key?: boolean
    userId?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["api_keys"]>


  export type Api_keysSelectScalar = {
    id?: boolean
    prefix?: boolean
    description?: boolean
    createdAt?: boolean
    key?: boolean
    userId?: boolean
  }

  export type Api_keysOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "prefix" | "description" | "createdAt" | "key" | "userId", ExtArgs["result"]["api_keys"]>
  export type Api_keysInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type Api_keysIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $Api_keysPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Api_keys"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      prefix: string | null
      description: string | null
      createdAt: Date
      key: string
      userId: string
    }, ExtArgs["result"]["api_keys"]>
    composites: {}
  }

  type Api_keysGetPayload<S extends boolean | null | undefined | Api_keysDefaultArgs> = $Result.GetResult<Prisma.$Api_keysPayload, S>

  type Api_keysCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Api_keysFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Api_keysCountAggregateInputType | true
    }

  export interface Api_keysDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Api_keys'], meta: { name: 'Api_keys' } }
    /**
     * Find zero or one Api_keys that matches the filter.
     * @param {Api_keysFindUniqueArgs} args - Arguments to find a Api_keys
     * @example
     * // Get one Api_keys
     * const api_keys = await prisma.api_keys.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Api_keysFindUniqueArgs>(args: SelectSubset<T, Api_keysFindUniqueArgs<ExtArgs>>): Prisma__Api_keysClient<$Result.GetResult<Prisma.$Api_keysPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Api_keys that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Api_keysFindUniqueOrThrowArgs} args - Arguments to find a Api_keys
     * @example
     * // Get one Api_keys
     * const api_keys = await prisma.api_keys.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Api_keysFindUniqueOrThrowArgs>(args: SelectSubset<T, Api_keysFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Api_keysClient<$Result.GetResult<Prisma.$Api_keysPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Api_keys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Api_keysFindFirstArgs} args - Arguments to find a Api_keys
     * @example
     * // Get one Api_keys
     * const api_keys = await prisma.api_keys.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Api_keysFindFirstArgs>(args?: SelectSubset<T, Api_keysFindFirstArgs<ExtArgs>>): Prisma__Api_keysClient<$Result.GetResult<Prisma.$Api_keysPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Api_keys that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Api_keysFindFirstOrThrowArgs} args - Arguments to find a Api_keys
     * @example
     * // Get one Api_keys
     * const api_keys = await prisma.api_keys.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Api_keysFindFirstOrThrowArgs>(args?: SelectSubset<T, Api_keysFindFirstOrThrowArgs<ExtArgs>>): Prisma__Api_keysClient<$Result.GetResult<Prisma.$Api_keysPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Api_keys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Api_keysFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Api_keys
     * const api_keys = await prisma.api_keys.findMany()
     * 
     * // Get first 10 Api_keys
     * const api_keys = await prisma.api_keys.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const api_keysWithIdOnly = await prisma.api_keys.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Api_keysFindManyArgs>(args?: SelectSubset<T, Api_keysFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Api_keysPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Api_keys.
     * @param {Api_keysCreateArgs} args - Arguments to create a Api_keys.
     * @example
     * // Create one Api_keys
     * const Api_keys = await prisma.api_keys.create({
     *   data: {
     *     // ... data to create a Api_keys
     *   }
     * })
     * 
     */
    create<T extends Api_keysCreateArgs>(args: SelectSubset<T, Api_keysCreateArgs<ExtArgs>>): Prisma__Api_keysClient<$Result.GetResult<Prisma.$Api_keysPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Api_keys.
     * @param {Api_keysCreateManyArgs} args - Arguments to create many Api_keys.
     * @example
     * // Create many Api_keys
     * const api_keys = await prisma.api_keys.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Api_keysCreateManyArgs>(args?: SelectSubset<T, Api_keysCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Api_keys and returns the data saved in the database.
     * @param {Api_keysCreateManyAndReturnArgs} args - Arguments to create many Api_keys.
     * @example
     * // Create many Api_keys
     * const api_keys = await prisma.api_keys.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Api_keys and only return the `id`
     * const api_keysWithIdOnly = await prisma.api_keys.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Api_keysCreateManyAndReturnArgs>(args?: SelectSubset<T, Api_keysCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Api_keysPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Api_keys.
     * @param {Api_keysDeleteArgs} args - Arguments to delete one Api_keys.
     * @example
     * // Delete one Api_keys
     * const Api_keys = await prisma.api_keys.delete({
     *   where: {
     *     // ... filter to delete one Api_keys
     *   }
     * })
     * 
     */
    delete<T extends Api_keysDeleteArgs>(args: SelectSubset<T, Api_keysDeleteArgs<ExtArgs>>): Prisma__Api_keysClient<$Result.GetResult<Prisma.$Api_keysPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Api_keys.
     * @param {Api_keysUpdateArgs} args - Arguments to update one Api_keys.
     * @example
     * // Update one Api_keys
     * const api_keys = await prisma.api_keys.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Api_keysUpdateArgs>(args: SelectSubset<T, Api_keysUpdateArgs<ExtArgs>>): Prisma__Api_keysClient<$Result.GetResult<Prisma.$Api_keysPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Api_keys.
     * @param {Api_keysDeleteManyArgs} args - Arguments to filter Api_keys to delete.
     * @example
     * // Delete a few Api_keys
     * const { count } = await prisma.api_keys.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Api_keysDeleteManyArgs>(args?: SelectSubset<T, Api_keysDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Api_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Api_keysUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Api_keys
     * const api_keys = await prisma.api_keys.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Api_keysUpdateManyArgs>(args: SelectSubset<T, Api_keysUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Api_keys.
     * @param {Api_keysUpsertArgs} args - Arguments to update or create a Api_keys.
     * @example
     * // Update or create a Api_keys
     * const api_keys = await prisma.api_keys.upsert({
     *   create: {
     *     // ... data to create a Api_keys
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Api_keys we want to update
     *   }
     * })
     */
    upsert<T extends Api_keysUpsertArgs>(args: SelectSubset<T, Api_keysUpsertArgs<ExtArgs>>): Prisma__Api_keysClient<$Result.GetResult<Prisma.$Api_keysPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Api_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Api_keysCountArgs} args - Arguments to filter Api_keys to count.
     * @example
     * // Count the number of Api_keys
     * const count = await prisma.api_keys.count({
     *   where: {
     *     // ... the filter for the Api_keys we want to count
     *   }
     * })
    **/
    count<T extends Api_keysCountArgs>(
      args?: Subset<T, Api_keysCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Api_keysCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Api_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Api_keysAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Api_keysAggregateArgs>(args: Subset<T, Api_keysAggregateArgs>): Prisma.PrismaPromise<GetApi_keysAggregateType<T>>

    /**
     * Group by Api_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Api_keysGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Api_keysGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Api_keysGroupByArgs['orderBy'] }
        : { orderBy?: Api_keysGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Api_keysGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApi_keysGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Api_keys model
   */
  readonly fields: Api_keysFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Api_keys.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Api_keysClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Api_keys model
   */ 
  interface Api_keysFieldRefs {
    readonly id: FieldRef<"Api_keys", 'String'>
    readonly prefix: FieldRef<"Api_keys", 'String'>
    readonly description: FieldRef<"Api_keys", 'String'>
    readonly createdAt: FieldRef<"Api_keys", 'DateTime'>
    readonly key: FieldRef<"Api_keys", 'String'>
    readonly userId: FieldRef<"Api_keys", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Api_keys findUnique
   */
  export type Api_keysFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysInclude<ExtArgs> | null
    /**
     * Filter, which Api_keys to fetch.
     */
    where: Api_keysWhereUniqueInput
  }

  /**
   * Api_keys findUniqueOrThrow
   */
  export type Api_keysFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysInclude<ExtArgs> | null
    /**
     * Filter, which Api_keys to fetch.
     */
    where: Api_keysWhereUniqueInput
  }

  /**
   * Api_keys findFirst
   */
  export type Api_keysFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysInclude<ExtArgs> | null
    /**
     * Filter, which Api_keys to fetch.
     */
    where?: Api_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Api_keys to fetch.
     */
    orderBy?: Api_keysOrderByWithRelationInput | Api_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Api_keys.
     */
    cursor?: Api_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Api_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Api_keys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Api_keys.
     */
    distinct?: Api_keysScalarFieldEnum | Api_keysScalarFieldEnum[]
  }

  /**
   * Api_keys findFirstOrThrow
   */
  export type Api_keysFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysInclude<ExtArgs> | null
    /**
     * Filter, which Api_keys to fetch.
     */
    where?: Api_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Api_keys to fetch.
     */
    orderBy?: Api_keysOrderByWithRelationInput | Api_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Api_keys.
     */
    cursor?: Api_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Api_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Api_keys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Api_keys.
     */
    distinct?: Api_keysScalarFieldEnum | Api_keysScalarFieldEnum[]
  }

  /**
   * Api_keys findMany
   */
  export type Api_keysFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysInclude<ExtArgs> | null
    /**
     * Filter, which Api_keys to fetch.
     */
    where?: Api_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Api_keys to fetch.
     */
    orderBy?: Api_keysOrderByWithRelationInput | Api_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Api_keys.
     */
    cursor?: Api_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Api_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Api_keys.
     */
    skip?: number
    distinct?: Api_keysScalarFieldEnum | Api_keysScalarFieldEnum[]
  }

  /**
   * Api_keys create
   */
  export type Api_keysCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysInclude<ExtArgs> | null
    /**
     * The data needed to create a Api_keys.
     */
    data: XOR<Api_keysCreateInput, Api_keysUncheckedCreateInput>
  }

  /**
   * Api_keys createMany
   */
  export type Api_keysCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Api_keys.
     */
    data: Api_keysCreateManyInput | Api_keysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Api_keys createManyAndReturn
   */
  export type Api_keysCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * The data used to create many Api_keys.
     */
    data: Api_keysCreateManyInput | Api_keysCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Api_keys update
   */
  export type Api_keysUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysInclude<ExtArgs> | null
    /**
     * The data needed to update a Api_keys.
     */
    data: XOR<Api_keysUpdateInput, Api_keysUncheckedUpdateInput>
    /**
     * Choose, which Api_keys to update.
     */
    where: Api_keysWhereUniqueInput
  }

  /**
   * Api_keys updateMany
   */
  export type Api_keysUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Api_keys.
     */
    data: XOR<Api_keysUpdateManyMutationInput, Api_keysUncheckedUpdateManyInput>
    /**
     * Filter which Api_keys to update
     */
    where?: Api_keysWhereInput
  }

  /**
   * Api_keys upsert
   */
  export type Api_keysUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysInclude<ExtArgs> | null
    /**
     * The filter to search for the Api_keys to update in case it exists.
     */
    where: Api_keysWhereUniqueInput
    /**
     * In case the Api_keys found by the `where` argument doesn't exist, create a new Api_keys with this data.
     */
    create: XOR<Api_keysCreateInput, Api_keysUncheckedCreateInput>
    /**
     * In case the Api_keys was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Api_keysUpdateInput, Api_keysUncheckedUpdateInput>
  }

  /**
   * Api_keys delete
   */
  export type Api_keysDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysInclude<ExtArgs> | null
    /**
     * Filter which Api_keys to delete.
     */
    where: Api_keysWhereUniqueInput
  }

  /**
   * Api_keys deleteMany
   */
  export type Api_keysDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Api_keys to delete
     */
    where?: Api_keysWhereInput
  }

  /**
   * Api_keys without action
   */
  export type Api_keysDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_keys
     */
    select?: Api_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Api_keys
     */
    omit?: Api_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Api_keysInclude<ExtArgs> | null
  }


  /**
   * Model Prices
   */

  export type AggregatePrices = {
    _count: PricesCountAggregateOutputType | null
    _avg: PricesAvgAggregateOutputType | null
    _sum: PricesSumAggregateOutputType | null
    _min: PricesMinAggregateOutputType | null
    _max: PricesMaxAggregateOutputType | null
  }

  export type PricesAvgAggregateOutputType = {
    billing_cycle_frequency: number | null
    trial_period_frequency: number | null
    amount: Decimal | null
  }

  export type PricesSumAggregateOutputType = {
    billing_cycle_frequency: number | null
    trial_period_frequency: number | null
    amount: Decimal | null
  }

  export type PricesMinAggregateOutputType = {
    id: string | null
    type: $Enums.PriceType | null
    description: string | null
    name: string | null
    billing_cycle_frequency: number | null
    billing_cycle_interval: $Enums.BillingInterval | null
    trial_period_frequency: number | null
    trial_period_interval: $Enums.BillingInterval | null
    amount: Decimal | null
    currency_code: string | null
    status: $Enums.Entity_Status | null
    created_at: Date | null
    updated_at: Date | null
    product_id: string | null
    projectId: string | null
  }

  export type PricesMaxAggregateOutputType = {
    id: string | null
    type: $Enums.PriceType | null
    description: string | null
    name: string | null
    billing_cycle_frequency: number | null
    billing_cycle_interval: $Enums.BillingInterval | null
    trial_period_frequency: number | null
    trial_period_interval: $Enums.BillingInterval | null
    amount: Decimal | null
    currency_code: string | null
    status: $Enums.Entity_Status | null
    created_at: Date | null
    updated_at: Date | null
    product_id: string | null
    projectId: string | null
  }

  export type PricesCountAggregateOutputType = {
    id: number
    type: number
    description: number
    name: number
    billing_cycle_frequency: number
    billing_cycle_interval: number
    trial_period_frequency: number
    trial_period_interval: number
    amount: number
    currency_code: number
    custom_data: number
    status: number
    created_at: number
    updated_at: number
    product_id: number
    projectId: number
    _all: number
  }


  export type PricesAvgAggregateInputType = {
    billing_cycle_frequency?: true
    trial_period_frequency?: true
    amount?: true
  }

  export type PricesSumAggregateInputType = {
    billing_cycle_frequency?: true
    trial_period_frequency?: true
    amount?: true
  }

  export type PricesMinAggregateInputType = {
    id?: true
    type?: true
    description?: true
    name?: true
    billing_cycle_frequency?: true
    billing_cycle_interval?: true
    trial_period_frequency?: true
    trial_period_interval?: true
    amount?: true
    currency_code?: true
    status?: true
    created_at?: true
    updated_at?: true
    product_id?: true
    projectId?: true
  }

  export type PricesMaxAggregateInputType = {
    id?: true
    type?: true
    description?: true
    name?: true
    billing_cycle_frequency?: true
    billing_cycle_interval?: true
    trial_period_frequency?: true
    trial_period_interval?: true
    amount?: true
    currency_code?: true
    status?: true
    created_at?: true
    updated_at?: true
    product_id?: true
    projectId?: true
  }

  export type PricesCountAggregateInputType = {
    id?: true
    type?: true
    description?: true
    name?: true
    billing_cycle_frequency?: true
    billing_cycle_interval?: true
    trial_period_frequency?: true
    trial_period_interval?: true
    amount?: true
    currency_code?: true
    custom_data?: true
    status?: true
    created_at?: true
    updated_at?: true
    product_id?: true
    projectId?: true
    _all?: true
  }

  export type PricesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Prices to aggregate.
     */
    where?: PricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PricesOrderByWithRelationInput | PricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Prices
    **/
    _count?: true | PricesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PricesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PricesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PricesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PricesMaxAggregateInputType
  }

  export type GetPricesAggregateType<T extends PricesAggregateArgs> = {
        [P in keyof T & keyof AggregatePrices]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrices[P]>
      : GetScalarType<T[P], AggregatePrices[P]>
  }




  export type PricesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PricesWhereInput
    orderBy?: PricesOrderByWithAggregationInput | PricesOrderByWithAggregationInput[]
    by: PricesScalarFieldEnum[] | PricesScalarFieldEnum
    having?: PricesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PricesCountAggregateInputType | true
    _avg?: PricesAvgAggregateInputType
    _sum?: PricesSumAggregateInputType
    _min?: PricesMinAggregateInputType
    _max?: PricesMaxAggregateInputType
  }

  export type PricesGroupByOutputType = {
    id: string
    type: $Enums.PriceType
    description: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal
    currency_code: string
    custom_data: JsonValue | null
    status: $Enums.Entity_Status
    created_at: Date
    updated_at: Date
    product_id: string
    projectId: string
    _count: PricesCountAggregateOutputType | null
    _avg: PricesAvgAggregateOutputType | null
    _sum: PricesSumAggregateOutputType | null
    _min: PricesMinAggregateOutputType | null
    _max: PricesMaxAggregateOutputType | null
  }

  type GetPricesGroupByPayload<T extends PricesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PricesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PricesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PricesGroupByOutputType[P]>
            : GetScalarType<T[P], PricesGroupByOutputType[P]>
        }
      >
    >


  export type PricesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    description?: boolean
    name?: boolean
    billing_cycle_frequency?: boolean
    billing_cycle_interval?: boolean
    trial_period_frequency?: boolean
    trial_period_interval?: boolean
    amount?: boolean
    currency_code?: boolean
    custom_data?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    product_id?: boolean
    projectId?: boolean
    Products?: boolean | Prices$ProductsArgs<ExtArgs>
    Project?: boolean | ProjectDefaultArgs<ExtArgs>
    Discount_Prices?: boolean | Prices$Discount_PricesArgs<ExtArgs>
    Subscription_Items?: boolean | Prices$Subscription_ItemsArgs<ExtArgs>
    TransactionItems?: boolean | Prices$TransactionItemsArgs<ExtArgs>
    _count?: boolean | PricesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["prices"]>

  export type PricesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    description?: boolean
    name?: boolean
    billing_cycle_frequency?: boolean
    billing_cycle_interval?: boolean
    trial_period_frequency?: boolean
    trial_period_interval?: boolean
    amount?: boolean
    currency_code?: boolean
    custom_data?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    product_id?: boolean
    projectId?: boolean
    Products?: boolean | Prices$ProductsArgs<ExtArgs>
    Project?: boolean | ProjectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["prices"]>


  export type PricesSelectScalar = {
    id?: boolean
    type?: boolean
    description?: boolean
    name?: boolean
    billing_cycle_frequency?: boolean
    billing_cycle_interval?: boolean
    trial_period_frequency?: boolean
    trial_period_interval?: boolean
    amount?: boolean
    currency_code?: boolean
    custom_data?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    product_id?: boolean
    projectId?: boolean
  }

  export type PricesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "description" | "name" | "billing_cycle_frequency" | "billing_cycle_interval" | "trial_period_frequency" | "trial_period_interval" | "amount" | "currency_code" | "custom_data" | "status" | "created_at" | "updated_at" | "product_id" | "projectId", ExtArgs["result"]["prices"]>
  export type PricesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Products?: boolean | Prices$ProductsArgs<ExtArgs>
    Project?: boolean | ProjectDefaultArgs<ExtArgs>
    Discount_Prices?: boolean | Prices$Discount_PricesArgs<ExtArgs>
    Subscription_Items?: boolean | Prices$Subscription_ItemsArgs<ExtArgs>
    TransactionItems?: boolean | Prices$TransactionItemsArgs<ExtArgs>
    _count?: boolean | PricesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PricesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Products?: boolean | Prices$ProductsArgs<ExtArgs>
    Project?: boolean | ProjectDefaultArgs<ExtArgs>
  }

  export type $PricesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Prices"
    objects: {
      Products: Prisma.$ProductsPayload<ExtArgs> | null
      Project: Prisma.$ProjectPayload<ExtArgs>
      Discount_Prices: Prisma.$Discount_PricesPayload<ExtArgs>[]
      Subscription_Items: Prisma.$SubscriptionItemsPayload<ExtArgs>[]
      TransactionItems: Prisma.$TransactionItemsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: $Enums.PriceType
      description: string | null
      name: string
      billing_cycle_frequency: number
      billing_cycle_interval: $Enums.BillingInterval
      trial_period_frequency: number
      trial_period_interval: $Enums.BillingInterval
      amount: Prisma.Decimal
      currency_code: string
      custom_data: Prisma.JsonValue | null
      status: $Enums.Entity_Status
      created_at: Date
      updated_at: Date
      product_id: string
      projectId: string
    }, ExtArgs["result"]["prices"]>
    composites: {}
  }

  type PricesGetPayload<S extends boolean | null | undefined | PricesDefaultArgs> = $Result.GetResult<Prisma.$PricesPayload, S>

  type PricesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PricesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PricesCountAggregateInputType | true
    }

  export interface PricesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Prices'], meta: { name: 'Prices' } }
    /**
     * Find zero or one Prices that matches the filter.
     * @param {PricesFindUniqueArgs} args - Arguments to find a Prices
     * @example
     * // Get one Prices
     * const prices = await prisma.prices.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PricesFindUniqueArgs>(args: SelectSubset<T, PricesFindUniqueArgs<ExtArgs>>): Prisma__PricesClient<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Prices that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PricesFindUniqueOrThrowArgs} args - Arguments to find a Prices
     * @example
     * // Get one Prices
     * const prices = await prisma.prices.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PricesFindUniqueOrThrowArgs>(args: SelectSubset<T, PricesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PricesClient<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Prices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricesFindFirstArgs} args - Arguments to find a Prices
     * @example
     * // Get one Prices
     * const prices = await prisma.prices.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PricesFindFirstArgs>(args?: SelectSubset<T, PricesFindFirstArgs<ExtArgs>>): Prisma__PricesClient<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Prices that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricesFindFirstOrThrowArgs} args - Arguments to find a Prices
     * @example
     * // Get one Prices
     * const prices = await prisma.prices.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PricesFindFirstOrThrowArgs>(args?: SelectSubset<T, PricesFindFirstOrThrowArgs<ExtArgs>>): Prisma__PricesClient<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Prices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Prices
     * const prices = await prisma.prices.findMany()
     * 
     * // Get first 10 Prices
     * const prices = await prisma.prices.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pricesWithIdOnly = await prisma.prices.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PricesFindManyArgs>(args?: SelectSubset<T, PricesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Prices.
     * @param {PricesCreateArgs} args - Arguments to create a Prices.
     * @example
     * // Create one Prices
     * const Prices = await prisma.prices.create({
     *   data: {
     *     // ... data to create a Prices
     *   }
     * })
     * 
     */
    create<T extends PricesCreateArgs>(args: SelectSubset<T, PricesCreateArgs<ExtArgs>>): Prisma__PricesClient<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Prices.
     * @param {PricesCreateManyArgs} args - Arguments to create many Prices.
     * @example
     * // Create many Prices
     * const prices = await prisma.prices.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PricesCreateManyArgs>(args?: SelectSubset<T, PricesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Prices and returns the data saved in the database.
     * @param {PricesCreateManyAndReturnArgs} args - Arguments to create many Prices.
     * @example
     * // Create many Prices
     * const prices = await prisma.prices.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Prices and only return the `id`
     * const pricesWithIdOnly = await prisma.prices.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PricesCreateManyAndReturnArgs>(args?: SelectSubset<T, PricesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Prices.
     * @param {PricesDeleteArgs} args - Arguments to delete one Prices.
     * @example
     * // Delete one Prices
     * const Prices = await prisma.prices.delete({
     *   where: {
     *     // ... filter to delete one Prices
     *   }
     * })
     * 
     */
    delete<T extends PricesDeleteArgs>(args: SelectSubset<T, PricesDeleteArgs<ExtArgs>>): Prisma__PricesClient<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Prices.
     * @param {PricesUpdateArgs} args - Arguments to update one Prices.
     * @example
     * // Update one Prices
     * const prices = await prisma.prices.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PricesUpdateArgs>(args: SelectSubset<T, PricesUpdateArgs<ExtArgs>>): Prisma__PricesClient<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Prices.
     * @param {PricesDeleteManyArgs} args - Arguments to filter Prices to delete.
     * @example
     * // Delete a few Prices
     * const { count } = await prisma.prices.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PricesDeleteManyArgs>(args?: SelectSubset<T, PricesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Prices
     * const prices = await prisma.prices.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PricesUpdateManyArgs>(args: SelectSubset<T, PricesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Prices.
     * @param {PricesUpsertArgs} args - Arguments to update or create a Prices.
     * @example
     * // Update or create a Prices
     * const prices = await prisma.prices.upsert({
     *   create: {
     *     // ... data to create a Prices
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Prices we want to update
     *   }
     * })
     */
    upsert<T extends PricesUpsertArgs>(args: SelectSubset<T, PricesUpsertArgs<ExtArgs>>): Prisma__PricesClient<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricesCountArgs} args - Arguments to filter Prices to count.
     * @example
     * // Count the number of Prices
     * const count = await prisma.prices.count({
     *   where: {
     *     // ... the filter for the Prices we want to count
     *   }
     * })
    **/
    count<T extends PricesCountArgs>(
      args?: Subset<T, PricesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PricesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PricesAggregateArgs>(args: Subset<T, PricesAggregateArgs>): Prisma.PrismaPromise<GetPricesAggregateType<T>>

    /**
     * Group by Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PricesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PricesGroupByArgs['orderBy'] }
        : { orderBy?: PricesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PricesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPricesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Prices model
   */
  readonly fields: PricesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Prices.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PricesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Products<T extends Prices$ProductsArgs<ExtArgs> = {}>(args?: Subset<T, Prices$ProductsArgs<ExtArgs>>): Prisma__ProductsClient<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    Project<T extends ProjectDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProjectDefaultArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    Discount_Prices<T extends Prices$Discount_PricesArgs<ExtArgs> = {}>(args?: Subset<T, Prices$Discount_PricesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    Subscription_Items<T extends Prices$Subscription_ItemsArgs<ExtArgs> = {}>(args?: Subset<T, Prices$Subscription_ItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    TransactionItems<T extends Prices$TransactionItemsArgs<ExtArgs> = {}>(args?: Subset<T, Prices$TransactionItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Prices model
   */ 
  interface PricesFieldRefs {
    readonly id: FieldRef<"Prices", 'String'>
    readonly type: FieldRef<"Prices", 'PriceType'>
    readonly description: FieldRef<"Prices", 'String'>
    readonly name: FieldRef<"Prices", 'String'>
    readonly billing_cycle_frequency: FieldRef<"Prices", 'Int'>
    readonly billing_cycle_interval: FieldRef<"Prices", 'BillingInterval'>
    readonly trial_period_frequency: FieldRef<"Prices", 'Int'>
    readonly trial_period_interval: FieldRef<"Prices", 'BillingInterval'>
    readonly amount: FieldRef<"Prices", 'Decimal'>
    readonly currency_code: FieldRef<"Prices", 'String'>
    readonly custom_data: FieldRef<"Prices", 'Json'>
    readonly status: FieldRef<"Prices", 'Entity_Status'>
    readonly created_at: FieldRef<"Prices", 'DateTime'>
    readonly updated_at: FieldRef<"Prices", 'DateTime'>
    readonly product_id: FieldRef<"Prices", 'String'>
    readonly projectId: FieldRef<"Prices", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Prices findUnique
   */
  export type PricesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
    /**
     * Filter, which Prices to fetch.
     */
    where: PricesWhereUniqueInput
  }

  /**
   * Prices findUniqueOrThrow
   */
  export type PricesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
    /**
     * Filter, which Prices to fetch.
     */
    where: PricesWhereUniqueInput
  }

  /**
   * Prices findFirst
   */
  export type PricesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
    /**
     * Filter, which Prices to fetch.
     */
    where?: PricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PricesOrderByWithRelationInput | PricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prices.
     */
    cursor?: PricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prices.
     */
    distinct?: PricesScalarFieldEnum | PricesScalarFieldEnum[]
  }

  /**
   * Prices findFirstOrThrow
   */
  export type PricesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
    /**
     * Filter, which Prices to fetch.
     */
    where?: PricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PricesOrderByWithRelationInput | PricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prices.
     */
    cursor?: PricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prices.
     */
    distinct?: PricesScalarFieldEnum | PricesScalarFieldEnum[]
  }

  /**
   * Prices findMany
   */
  export type PricesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
    /**
     * Filter, which Prices to fetch.
     */
    where?: PricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PricesOrderByWithRelationInput | PricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Prices.
     */
    cursor?: PricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    distinct?: PricesScalarFieldEnum | PricesScalarFieldEnum[]
  }

  /**
   * Prices create
   */
  export type PricesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
    /**
     * The data needed to create a Prices.
     */
    data: XOR<PricesCreateInput, PricesUncheckedCreateInput>
  }

  /**
   * Prices createMany
   */
  export type PricesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Prices.
     */
    data: PricesCreateManyInput | PricesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Prices createManyAndReturn
   */
  export type PricesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * The data used to create many Prices.
     */
    data: PricesCreateManyInput | PricesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Prices update
   */
  export type PricesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
    /**
     * The data needed to update a Prices.
     */
    data: XOR<PricesUpdateInput, PricesUncheckedUpdateInput>
    /**
     * Choose, which Prices to update.
     */
    where: PricesWhereUniqueInput
  }

  /**
   * Prices updateMany
   */
  export type PricesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Prices.
     */
    data: XOR<PricesUpdateManyMutationInput, PricesUncheckedUpdateManyInput>
    /**
     * Filter which Prices to update
     */
    where?: PricesWhereInput
  }

  /**
   * Prices upsert
   */
  export type PricesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
    /**
     * The filter to search for the Prices to update in case it exists.
     */
    where: PricesWhereUniqueInput
    /**
     * In case the Prices found by the `where` argument doesn't exist, create a new Prices with this data.
     */
    create: XOR<PricesCreateInput, PricesUncheckedCreateInput>
    /**
     * In case the Prices was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PricesUpdateInput, PricesUncheckedUpdateInput>
  }

  /**
   * Prices delete
   */
  export type PricesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
    /**
     * Filter which Prices to delete.
     */
    where: PricesWhereUniqueInput
  }

  /**
   * Prices deleteMany
   */
  export type PricesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Prices to delete
     */
    where?: PricesWhereInput
  }

  /**
   * Prices.Products
   */
  export type Prices$ProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Products
     */
    select?: ProductsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Products
     */
    omit?: ProductsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductsInclude<ExtArgs> | null
    where?: ProductsWhereInput
  }

  /**
   * Prices.Discount_Prices
   */
  export type Prices$Discount_PricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
    where?: Discount_PricesWhereInput
    orderBy?: Discount_PricesOrderByWithRelationInput | Discount_PricesOrderByWithRelationInput[]
    cursor?: Discount_PricesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Discount_PricesScalarFieldEnum | Discount_PricesScalarFieldEnum[]
  }

  /**
   * Prices.Subscription_Items
   */
  export type Prices$Subscription_ItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
    where?: SubscriptionItemsWhereInput
    orderBy?: SubscriptionItemsOrderByWithRelationInput | SubscriptionItemsOrderByWithRelationInput[]
    cursor?: SubscriptionItemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionItemsScalarFieldEnum | SubscriptionItemsScalarFieldEnum[]
  }

  /**
   * Prices.TransactionItems
   */
  export type Prices$TransactionItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
    where?: TransactionItemsWhereInput
    orderBy?: TransactionItemsOrderByWithRelationInput | TransactionItemsOrderByWithRelationInput[]
    cursor?: TransactionItemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionItemsScalarFieldEnum | TransactionItemsScalarFieldEnum[]
  }

  /**
   * Prices without action
   */
  export type PricesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Prices
     */
    select?: PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Prices
     */
    omit?: PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricesInclude<ExtArgs> | null
  }


  /**
   * Model Discounts
   */

  export type AggregateDiscounts = {
    _count: DiscountsCountAggregateOutputType | null
    _avg: DiscountsAvgAggregateOutputType | null
    _sum: DiscountsSumAggregateOutputType | null
    _min: DiscountsMinAggregateOutputType | null
    _max: DiscountsMaxAggregateOutputType | null
  }

  export type DiscountsAvgAggregateOutputType = {
    amount: Decimal | null
    max_recurring_intervals: Decimal | null
    usage_limit: number | null
    times_used: number | null
  }

  export type DiscountsSumAggregateOutputType = {
    amount: Decimal | null
    max_recurring_intervals: Decimal | null
    usage_limit: number | null
    times_used: number | null
  }

  export type DiscountsMinAggregateOutputType = {
    id: string | null
    status: $Enums.Entity_Status | null
    description: string | null
    enabled_for_checkout: boolean | null
    amount: Decimal | null
    currency_code: string | null
    type: $Enums.Discount_type | null
    recur: boolean | null
    max_recurring_intervals: Decimal | null
    usage_limit: number | null
    expires_at: Date | null
    times_used: number | null
    created_at: Date | null
    updated_at: Date | null
    projectId: string | null
  }

  export type DiscountsMaxAggregateOutputType = {
    id: string | null
    status: $Enums.Entity_Status | null
    description: string | null
    enabled_for_checkout: boolean | null
    amount: Decimal | null
    currency_code: string | null
    type: $Enums.Discount_type | null
    recur: boolean | null
    max_recurring_intervals: Decimal | null
    usage_limit: number | null
    expires_at: Date | null
    times_used: number | null
    created_at: Date | null
    updated_at: Date | null
    projectId: string | null
  }

  export type DiscountsCountAggregateOutputType = {
    id: number
    status: number
    description: number
    enabled_for_checkout: number
    amount: number
    currency_code: number
    type: number
    recur: number
    max_recurring_intervals: number
    usage_limit: number
    expires_at: number
    custom_data: number
    times_used: number
    created_at: number
    updated_at: number
    projectId: number
    _all: number
  }


  export type DiscountsAvgAggregateInputType = {
    amount?: true
    max_recurring_intervals?: true
    usage_limit?: true
    times_used?: true
  }

  export type DiscountsSumAggregateInputType = {
    amount?: true
    max_recurring_intervals?: true
    usage_limit?: true
    times_used?: true
  }

  export type DiscountsMinAggregateInputType = {
    id?: true
    status?: true
    description?: true
    enabled_for_checkout?: true
    amount?: true
    currency_code?: true
    type?: true
    recur?: true
    max_recurring_intervals?: true
    usage_limit?: true
    expires_at?: true
    times_used?: true
    created_at?: true
    updated_at?: true
    projectId?: true
  }

  export type DiscountsMaxAggregateInputType = {
    id?: true
    status?: true
    description?: true
    enabled_for_checkout?: true
    amount?: true
    currency_code?: true
    type?: true
    recur?: true
    max_recurring_intervals?: true
    usage_limit?: true
    expires_at?: true
    times_used?: true
    created_at?: true
    updated_at?: true
    projectId?: true
  }

  export type DiscountsCountAggregateInputType = {
    id?: true
    status?: true
    description?: true
    enabled_for_checkout?: true
    amount?: true
    currency_code?: true
    type?: true
    recur?: true
    max_recurring_intervals?: true
    usage_limit?: true
    expires_at?: true
    custom_data?: true
    times_used?: true
    created_at?: true
    updated_at?: true
    projectId?: true
    _all?: true
  }

  export type DiscountsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Discounts to aggregate.
     */
    where?: DiscountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discounts to fetch.
     */
    orderBy?: DiscountsOrderByWithRelationInput | DiscountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DiscountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Discounts
    **/
    _count?: true | DiscountsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DiscountsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DiscountsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscountsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscountsMaxAggregateInputType
  }

  export type GetDiscountsAggregateType<T extends DiscountsAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscounts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscounts[P]>
      : GetScalarType<T[P], AggregateDiscounts[P]>
  }




  export type DiscountsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscountsWhereInput
    orderBy?: DiscountsOrderByWithAggregationInput | DiscountsOrderByWithAggregationInput[]
    by: DiscountsScalarFieldEnum[] | DiscountsScalarFieldEnum
    having?: DiscountsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscountsCountAggregateInputType | true
    _avg?: DiscountsAvgAggregateInputType
    _sum?: DiscountsSumAggregateInputType
    _min?: DiscountsMinAggregateInputType
    _max?: DiscountsMaxAggregateInputType
  }

  export type DiscountsGroupByOutputType = {
    id: string
    status: $Enums.Entity_Status | null
    description: string | null
    enabled_for_checkout: boolean | null
    amount: Decimal
    currency_code: string
    type: $Enums.Discount_type
    recur: boolean | null
    max_recurring_intervals: Decimal | null
    usage_limit: number | null
    expires_at: Date | null
    custom_data: JsonValue | null
    times_used: number | null
    created_at: Date
    updated_at: Date
    projectId: string | null
    _count: DiscountsCountAggregateOutputType | null
    _avg: DiscountsAvgAggregateOutputType | null
    _sum: DiscountsSumAggregateOutputType | null
    _min: DiscountsMinAggregateOutputType | null
    _max: DiscountsMaxAggregateOutputType | null
  }

  type GetDiscountsGroupByPayload<T extends DiscountsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiscountsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiscountsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiscountsGroupByOutputType[P]>
            : GetScalarType<T[P], DiscountsGroupByOutputType[P]>
        }
      >
    >


  export type DiscountsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    description?: boolean
    enabled_for_checkout?: boolean
    amount?: boolean
    currency_code?: boolean
    type?: boolean
    recur?: boolean
    max_recurring_intervals?: boolean
    usage_limit?: boolean
    expires_at?: boolean
    custom_data?: boolean
    times_used?: boolean
    created_at?: boolean
    updated_at?: boolean
    projectId?: boolean
    discount_prices?: boolean | Discounts$discount_pricesArgs<ExtArgs>
    Project?: boolean | Discounts$ProjectArgs<ExtArgs>
    Subscriptions?: boolean | Discounts$SubscriptionsArgs<ExtArgs>
    Transactions?: boolean | Discounts$TransactionsArgs<ExtArgs>
    _count?: boolean | DiscountsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discounts"]>

  export type DiscountsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    description?: boolean
    enabled_for_checkout?: boolean
    amount?: boolean
    currency_code?: boolean
    type?: boolean
    recur?: boolean
    max_recurring_intervals?: boolean
    usage_limit?: boolean
    expires_at?: boolean
    custom_data?: boolean
    times_used?: boolean
    created_at?: boolean
    updated_at?: boolean
    projectId?: boolean
    Project?: boolean | Discounts$ProjectArgs<ExtArgs>
  }, ExtArgs["result"]["discounts"]>


  export type DiscountsSelectScalar = {
    id?: boolean
    status?: boolean
    description?: boolean
    enabled_for_checkout?: boolean
    amount?: boolean
    currency_code?: boolean
    type?: boolean
    recur?: boolean
    max_recurring_intervals?: boolean
    usage_limit?: boolean
    expires_at?: boolean
    custom_data?: boolean
    times_used?: boolean
    created_at?: boolean
    updated_at?: boolean
    projectId?: boolean
  }

  export type DiscountsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "description" | "enabled_for_checkout" | "amount" | "currency_code" | "type" | "recur" | "max_recurring_intervals" | "usage_limit" | "expires_at" | "custom_data" | "times_used" | "created_at" | "updated_at" | "projectId", ExtArgs["result"]["discounts"]>
  export type DiscountsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    discount_prices?: boolean | Discounts$discount_pricesArgs<ExtArgs>
    Project?: boolean | Discounts$ProjectArgs<ExtArgs>
    Subscriptions?: boolean | Discounts$SubscriptionsArgs<ExtArgs>
    Transactions?: boolean | Discounts$TransactionsArgs<ExtArgs>
    _count?: boolean | DiscountsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DiscountsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Project?: boolean | Discounts$ProjectArgs<ExtArgs>
  }

  export type $DiscountsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Discounts"
    objects: {
      discount_prices: Prisma.$Discount_PricesPayload<ExtArgs>[]
      Project: Prisma.$ProjectPayload<ExtArgs> | null
      Subscriptions: Prisma.$SubscriptionsPayload<ExtArgs>[]
      Transactions: Prisma.$TransactionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: $Enums.Entity_Status | null
      description: string | null
      enabled_for_checkout: boolean | null
      amount: Prisma.Decimal
      currency_code: string
      type: $Enums.Discount_type
      recur: boolean | null
      max_recurring_intervals: Prisma.Decimal | null
      usage_limit: number | null
      expires_at: Date | null
      custom_data: Prisma.JsonValue | null
      times_used: number | null
      created_at: Date
      updated_at: Date
      projectId: string | null
    }, ExtArgs["result"]["discounts"]>
    composites: {}
  }

  type DiscountsGetPayload<S extends boolean | null | undefined | DiscountsDefaultArgs> = $Result.GetResult<Prisma.$DiscountsPayload, S>

  type DiscountsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DiscountsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DiscountsCountAggregateInputType | true
    }

  export interface DiscountsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Discounts'], meta: { name: 'Discounts' } }
    /**
     * Find zero or one Discounts that matches the filter.
     * @param {DiscountsFindUniqueArgs} args - Arguments to find a Discounts
     * @example
     * // Get one Discounts
     * const discounts = await prisma.discounts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DiscountsFindUniqueArgs>(args: SelectSubset<T, DiscountsFindUniqueArgs<ExtArgs>>): Prisma__DiscountsClient<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Discounts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DiscountsFindUniqueOrThrowArgs} args - Arguments to find a Discounts
     * @example
     * // Get one Discounts
     * const discounts = await prisma.discounts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DiscountsFindUniqueOrThrowArgs>(args: SelectSubset<T, DiscountsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DiscountsClient<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Discounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountsFindFirstArgs} args - Arguments to find a Discounts
     * @example
     * // Get one Discounts
     * const discounts = await prisma.discounts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DiscountsFindFirstArgs>(args?: SelectSubset<T, DiscountsFindFirstArgs<ExtArgs>>): Prisma__DiscountsClient<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Discounts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountsFindFirstOrThrowArgs} args - Arguments to find a Discounts
     * @example
     * // Get one Discounts
     * const discounts = await prisma.discounts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DiscountsFindFirstOrThrowArgs>(args?: SelectSubset<T, DiscountsFindFirstOrThrowArgs<ExtArgs>>): Prisma__DiscountsClient<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Discounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Discounts
     * const discounts = await prisma.discounts.findMany()
     * 
     * // Get first 10 Discounts
     * const discounts = await prisma.discounts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discountsWithIdOnly = await prisma.discounts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DiscountsFindManyArgs>(args?: SelectSubset<T, DiscountsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Discounts.
     * @param {DiscountsCreateArgs} args - Arguments to create a Discounts.
     * @example
     * // Create one Discounts
     * const Discounts = await prisma.discounts.create({
     *   data: {
     *     // ... data to create a Discounts
     *   }
     * })
     * 
     */
    create<T extends DiscountsCreateArgs>(args: SelectSubset<T, DiscountsCreateArgs<ExtArgs>>): Prisma__DiscountsClient<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Discounts.
     * @param {DiscountsCreateManyArgs} args - Arguments to create many Discounts.
     * @example
     * // Create many Discounts
     * const discounts = await prisma.discounts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DiscountsCreateManyArgs>(args?: SelectSubset<T, DiscountsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Discounts and returns the data saved in the database.
     * @param {DiscountsCreateManyAndReturnArgs} args - Arguments to create many Discounts.
     * @example
     * // Create many Discounts
     * const discounts = await prisma.discounts.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Discounts and only return the `id`
     * const discountsWithIdOnly = await prisma.discounts.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DiscountsCreateManyAndReturnArgs>(args?: SelectSubset<T, DiscountsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Discounts.
     * @param {DiscountsDeleteArgs} args - Arguments to delete one Discounts.
     * @example
     * // Delete one Discounts
     * const Discounts = await prisma.discounts.delete({
     *   where: {
     *     // ... filter to delete one Discounts
     *   }
     * })
     * 
     */
    delete<T extends DiscountsDeleteArgs>(args: SelectSubset<T, DiscountsDeleteArgs<ExtArgs>>): Prisma__DiscountsClient<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Discounts.
     * @param {DiscountsUpdateArgs} args - Arguments to update one Discounts.
     * @example
     * // Update one Discounts
     * const discounts = await prisma.discounts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DiscountsUpdateArgs>(args: SelectSubset<T, DiscountsUpdateArgs<ExtArgs>>): Prisma__DiscountsClient<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Discounts.
     * @param {DiscountsDeleteManyArgs} args - Arguments to filter Discounts to delete.
     * @example
     * // Delete a few Discounts
     * const { count } = await prisma.discounts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DiscountsDeleteManyArgs>(args?: SelectSubset<T, DiscountsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Discounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Discounts
     * const discounts = await prisma.discounts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DiscountsUpdateManyArgs>(args: SelectSubset<T, DiscountsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Discounts.
     * @param {DiscountsUpsertArgs} args - Arguments to update or create a Discounts.
     * @example
     * // Update or create a Discounts
     * const discounts = await prisma.discounts.upsert({
     *   create: {
     *     // ... data to create a Discounts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Discounts we want to update
     *   }
     * })
     */
    upsert<T extends DiscountsUpsertArgs>(args: SelectSubset<T, DiscountsUpsertArgs<ExtArgs>>): Prisma__DiscountsClient<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Discounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountsCountArgs} args - Arguments to filter Discounts to count.
     * @example
     * // Count the number of Discounts
     * const count = await prisma.discounts.count({
     *   where: {
     *     // ... the filter for the Discounts we want to count
     *   }
     * })
    **/
    count<T extends DiscountsCountArgs>(
      args?: Subset<T, DiscountsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscountsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Discounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscountsAggregateArgs>(args: Subset<T, DiscountsAggregateArgs>): Prisma.PrismaPromise<GetDiscountsAggregateType<T>>

    /**
     * Group by Discounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscountsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscountsGroupByArgs['orderBy'] }
        : { orderBy?: DiscountsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscountsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscountsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Discounts model
   */
  readonly fields: DiscountsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Discounts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DiscountsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    discount_prices<T extends Discounts$discount_pricesArgs<ExtArgs> = {}>(args?: Subset<T, Discounts$discount_pricesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    Project<T extends Discounts$ProjectArgs<ExtArgs> = {}>(args?: Subset<T, Discounts$ProjectArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    Subscriptions<T extends Discounts$SubscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, Discounts$SubscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    Transactions<T extends Discounts$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, Discounts$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Discounts model
   */ 
  interface DiscountsFieldRefs {
    readonly id: FieldRef<"Discounts", 'String'>
    readonly status: FieldRef<"Discounts", 'Entity_Status'>
    readonly description: FieldRef<"Discounts", 'String'>
    readonly enabled_for_checkout: FieldRef<"Discounts", 'Boolean'>
    readonly amount: FieldRef<"Discounts", 'Decimal'>
    readonly currency_code: FieldRef<"Discounts", 'String'>
    readonly type: FieldRef<"Discounts", 'Discount_type'>
    readonly recur: FieldRef<"Discounts", 'Boolean'>
    readonly max_recurring_intervals: FieldRef<"Discounts", 'Decimal'>
    readonly usage_limit: FieldRef<"Discounts", 'Int'>
    readonly expires_at: FieldRef<"Discounts", 'DateTime'>
    readonly custom_data: FieldRef<"Discounts", 'Json'>
    readonly times_used: FieldRef<"Discounts", 'Int'>
    readonly created_at: FieldRef<"Discounts", 'DateTime'>
    readonly updated_at: FieldRef<"Discounts", 'DateTime'>
    readonly projectId: FieldRef<"Discounts", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Discounts findUnique
   */
  export type DiscountsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    /**
     * Filter, which Discounts to fetch.
     */
    where: DiscountsWhereUniqueInput
  }

  /**
   * Discounts findUniqueOrThrow
   */
  export type DiscountsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    /**
     * Filter, which Discounts to fetch.
     */
    where: DiscountsWhereUniqueInput
  }

  /**
   * Discounts findFirst
   */
  export type DiscountsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    /**
     * Filter, which Discounts to fetch.
     */
    where?: DiscountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discounts to fetch.
     */
    orderBy?: DiscountsOrderByWithRelationInput | DiscountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Discounts.
     */
    cursor?: DiscountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Discounts.
     */
    distinct?: DiscountsScalarFieldEnum | DiscountsScalarFieldEnum[]
  }

  /**
   * Discounts findFirstOrThrow
   */
  export type DiscountsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    /**
     * Filter, which Discounts to fetch.
     */
    where?: DiscountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discounts to fetch.
     */
    orderBy?: DiscountsOrderByWithRelationInput | DiscountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Discounts.
     */
    cursor?: DiscountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Discounts.
     */
    distinct?: DiscountsScalarFieldEnum | DiscountsScalarFieldEnum[]
  }

  /**
   * Discounts findMany
   */
  export type DiscountsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    /**
     * Filter, which Discounts to fetch.
     */
    where?: DiscountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discounts to fetch.
     */
    orderBy?: DiscountsOrderByWithRelationInput | DiscountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Discounts.
     */
    cursor?: DiscountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discounts.
     */
    skip?: number
    distinct?: DiscountsScalarFieldEnum | DiscountsScalarFieldEnum[]
  }

  /**
   * Discounts create
   */
  export type DiscountsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    /**
     * The data needed to create a Discounts.
     */
    data: XOR<DiscountsCreateInput, DiscountsUncheckedCreateInput>
  }

  /**
   * Discounts createMany
   */
  export type DiscountsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Discounts.
     */
    data: DiscountsCreateManyInput | DiscountsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Discounts createManyAndReturn
   */
  export type DiscountsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * The data used to create many Discounts.
     */
    data: DiscountsCreateManyInput | DiscountsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Discounts update
   */
  export type DiscountsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    /**
     * The data needed to update a Discounts.
     */
    data: XOR<DiscountsUpdateInput, DiscountsUncheckedUpdateInput>
    /**
     * Choose, which Discounts to update.
     */
    where: DiscountsWhereUniqueInput
  }

  /**
   * Discounts updateMany
   */
  export type DiscountsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Discounts.
     */
    data: XOR<DiscountsUpdateManyMutationInput, DiscountsUncheckedUpdateManyInput>
    /**
     * Filter which Discounts to update
     */
    where?: DiscountsWhereInput
  }

  /**
   * Discounts upsert
   */
  export type DiscountsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    /**
     * The filter to search for the Discounts to update in case it exists.
     */
    where: DiscountsWhereUniqueInput
    /**
     * In case the Discounts found by the `where` argument doesn't exist, create a new Discounts with this data.
     */
    create: XOR<DiscountsCreateInput, DiscountsUncheckedCreateInput>
    /**
     * In case the Discounts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DiscountsUpdateInput, DiscountsUncheckedUpdateInput>
  }

  /**
   * Discounts delete
   */
  export type DiscountsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    /**
     * Filter which Discounts to delete.
     */
    where: DiscountsWhereUniqueInput
  }

  /**
   * Discounts deleteMany
   */
  export type DiscountsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Discounts to delete
     */
    where?: DiscountsWhereInput
  }

  /**
   * Discounts.discount_prices
   */
  export type Discounts$discount_pricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
    where?: Discount_PricesWhereInput
    orderBy?: Discount_PricesOrderByWithRelationInput | Discount_PricesOrderByWithRelationInput[]
    cursor?: Discount_PricesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Discount_PricesScalarFieldEnum | Discount_PricesScalarFieldEnum[]
  }

  /**
   * Discounts.Project
   */
  export type Discounts$ProjectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
  }

  /**
   * Discounts.Subscriptions
   */
  export type Discounts$SubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    where?: SubscriptionsWhereInput
    orderBy?: SubscriptionsOrderByWithRelationInput | SubscriptionsOrderByWithRelationInput[]
    cursor?: SubscriptionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * Discounts.Transactions
   */
  export type Discounts$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    where?: TransactionsWhereInput
    orderBy?: TransactionsOrderByWithRelationInput | TransactionsOrderByWithRelationInput[]
    cursor?: TransactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * Discounts without action
   */
  export type DiscountsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
  }


  /**
   * Model Discount_Prices
   */

  export type AggregateDiscount_Prices = {
    _count: Discount_PricesCountAggregateOutputType | null
    _min: Discount_PricesMinAggregateOutputType | null
    _max: Discount_PricesMaxAggregateOutputType | null
  }

  export type Discount_PricesMinAggregateOutputType = {
    discount_Id: string | null
    price_id: string | null
  }

  export type Discount_PricesMaxAggregateOutputType = {
    discount_Id: string | null
    price_id: string | null
  }

  export type Discount_PricesCountAggregateOutputType = {
    discount_Id: number
    price_id: number
    _all: number
  }


  export type Discount_PricesMinAggregateInputType = {
    discount_Id?: true
    price_id?: true
  }

  export type Discount_PricesMaxAggregateInputType = {
    discount_Id?: true
    price_id?: true
  }

  export type Discount_PricesCountAggregateInputType = {
    discount_Id?: true
    price_id?: true
    _all?: true
  }

  export type Discount_PricesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Discount_Prices to aggregate.
     */
    where?: Discount_PricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discount_Prices to fetch.
     */
    orderBy?: Discount_PricesOrderByWithRelationInput | Discount_PricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Discount_PricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discount_Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discount_Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Discount_Prices
    **/
    _count?: true | Discount_PricesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Discount_PricesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Discount_PricesMaxAggregateInputType
  }

  export type GetDiscount_PricesAggregateType<T extends Discount_PricesAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscount_Prices]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscount_Prices[P]>
      : GetScalarType<T[P], AggregateDiscount_Prices[P]>
  }




  export type Discount_PricesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Discount_PricesWhereInput
    orderBy?: Discount_PricesOrderByWithAggregationInput | Discount_PricesOrderByWithAggregationInput[]
    by: Discount_PricesScalarFieldEnum[] | Discount_PricesScalarFieldEnum
    having?: Discount_PricesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Discount_PricesCountAggregateInputType | true
    _min?: Discount_PricesMinAggregateInputType
    _max?: Discount_PricesMaxAggregateInputType
  }

  export type Discount_PricesGroupByOutputType = {
    discount_Id: string
    price_id: string
    _count: Discount_PricesCountAggregateOutputType | null
    _min: Discount_PricesMinAggregateOutputType | null
    _max: Discount_PricesMaxAggregateOutputType | null
  }

  type GetDiscount_PricesGroupByPayload<T extends Discount_PricesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Discount_PricesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Discount_PricesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Discount_PricesGroupByOutputType[P]>
            : GetScalarType<T[P], Discount_PricesGroupByOutputType[P]>
        }
      >
    >


  export type Discount_PricesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    discount_Id?: boolean
    price_id?: boolean
    discount?: boolean | Discount_Prices$discountArgs<ExtArgs>
    price?: boolean | PricesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discount_Prices"]>

  export type Discount_PricesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    discount_Id?: boolean
    price_id?: boolean
    discount?: boolean | Discount_Prices$discountArgs<ExtArgs>
    price?: boolean | PricesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discount_Prices"]>


  export type Discount_PricesSelectScalar = {
    discount_Id?: boolean
    price_id?: boolean
  }

  export type Discount_PricesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"discount_Id" | "price_id", ExtArgs["result"]["discount_Prices"]>
  export type Discount_PricesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    discount?: boolean | Discount_Prices$discountArgs<ExtArgs>
    price?: boolean | PricesDefaultArgs<ExtArgs>
  }
  export type Discount_PricesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    discount?: boolean | Discount_Prices$discountArgs<ExtArgs>
    price?: boolean | PricesDefaultArgs<ExtArgs>
  }

  export type $Discount_PricesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Discount_Prices"
    objects: {
      discount: Prisma.$DiscountsPayload<ExtArgs> | null
      price: Prisma.$PricesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      discount_Id: string
      price_id: string
    }, ExtArgs["result"]["discount_Prices"]>
    composites: {}
  }

  type Discount_PricesGetPayload<S extends boolean | null | undefined | Discount_PricesDefaultArgs> = $Result.GetResult<Prisma.$Discount_PricesPayload, S>

  type Discount_PricesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Discount_PricesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Discount_PricesCountAggregateInputType | true
    }

  export interface Discount_PricesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Discount_Prices'], meta: { name: 'Discount_Prices' } }
    /**
     * Find zero or one Discount_Prices that matches the filter.
     * @param {Discount_PricesFindUniqueArgs} args - Arguments to find a Discount_Prices
     * @example
     * // Get one Discount_Prices
     * const discount_Prices = await prisma.discount_Prices.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Discount_PricesFindUniqueArgs>(args: SelectSubset<T, Discount_PricesFindUniqueArgs<ExtArgs>>): Prisma__Discount_PricesClient<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Discount_Prices that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Discount_PricesFindUniqueOrThrowArgs} args - Arguments to find a Discount_Prices
     * @example
     * // Get one Discount_Prices
     * const discount_Prices = await prisma.discount_Prices.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Discount_PricesFindUniqueOrThrowArgs>(args: SelectSubset<T, Discount_PricesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Discount_PricesClient<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Discount_Prices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Discount_PricesFindFirstArgs} args - Arguments to find a Discount_Prices
     * @example
     * // Get one Discount_Prices
     * const discount_Prices = await prisma.discount_Prices.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Discount_PricesFindFirstArgs>(args?: SelectSubset<T, Discount_PricesFindFirstArgs<ExtArgs>>): Prisma__Discount_PricesClient<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Discount_Prices that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Discount_PricesFindFirstOrThrowArgs} args - Arguments to find a Discount_Prices
     * @example
     * // Get one Discount_Prices
     * const discount_Prices = await prisma.discount_Prices.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Discount_PricesFindFirstOrThrowArgs>(args?: SelectSubset<T, Discount_PricesFindFirstOrThrowArgs<ExtArgs>>): Prisma__Discount_PricesClient<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Discount_Prices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Discount_PricesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Discount_Prices
     * const discount_Prices = await prisma.discount_Prices.findMany()
     * 
     * // Get first 10 Discount_Prices
     * const discount_Prices = await prisma.discount_Prices.findMany({ take: 10 })
     * 
     * // Only select the `discount_Id`
     * const discount_PricesWithDiscount_IdOnly = await prisma.discount_Prices.findMany({ select: { discount_Id: true } })
     * 
     */
    findMany<T extends Discount_PricesFindManyArgs>(args?: SelectSubset<T, Discount_PricesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Discount_Prices.
     * @param {Discount_PricesCreateArgs} args - Arguments to create a Discount_Prices.
     * @example
     * // Create one Discount_Prices
     * const Discount_Prices = await prisma.discount_Prices.create({
     *   data: {
     *     // ... data to create a Discount_Prices
     *   }
     * })
     * 
     */
    create<T extends Discount_PricesCreateArgs>(args: SelectSubset<T, Discount_PricesCreateArgs<ExtArgs>>): Prisma__Discount_PricesClient<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Discount_Prices.
     * @param {Discount_PricesCreateManyArgs} args - Arguments to create many Discount_Prices.
     * @example
     * // Create many Discount_Prices
     * const discount_Prices = await prisma.discount_Prices.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Discount_PricesCreateManyArgs>(args?: SelectSubset<T, Discount_PricesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Discount_Prices and returns the data saved in the database.
     * @param {Discount_PricesCreateManyAndReturnArgs} args - Arguments to create many Discount_Prices.
     * @example
     * // Create many Discount_Prices
     * const discount_Prices = await prisma.discount_Prices.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Discount_Prices and only return the `discount_Id`
     * const discount_PricesWithDiscount_IdOnly = await prisma.discount_Prices.createManyAndReturn({
     *   select: { discount_Id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Discount_PricesCreateManyAndReturnArgs>(args?: SelectSubset<T, Discount_PricesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Discount_Prices.
     * @param {Discount_PricesDeleteArgs} args - Arguments to delete one Discount_Prices.
     * @example
     * // Delete one Discount_Prices
     * const Discount_Prices = await prisma.discount_Prices.delete({
     *   where: {
     *     // ... filter to delete one Discount_Prices
     *   }
     * })
     * 
     */
    delete<T extends Discount_PricesDeleteArgs>(args: SelectSubset<T, Discount_PricesDeleteArgs<ExtArgs>>): Prisma__Discount_PricesClient<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Discount_Prices.
     * @param {Discount_PricesUpdateArgs} args - Arguments to update one Discount_Prices.
     * @example
     * // Update one Discount_Prices
     * const discount_Prices = await prisma.discount_Prices.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Discount_PricesUpdateArgs>(args: SelectSubset<T, Discount_PricesUpdateArgs<ExtArgs>>): Prisma__Discount_PricesClient<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Discount_Prices.
     * @param {Discount_PricesDeleteManyArgs} args - Arguments to filter Discount_Prices to delete.
     * @example
     * // Delete a few Discount_Prices
     * const { count } = await prisma.discount_Prices.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Discount_PricesDeleteManyArgs>(args?: SelectSubset<T, Discount_PricesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Discount_Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Discount_PricesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Discount_Prices
     * const discount_Prices = await prisma.discount_Prices.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Discount_PricesUpdateManyArgs>(args: SelectSubset<T, Discount_PricesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Discount_Prices.
     * @param {Discount_PricesUpsertArgs} args - Arguments to update or create a Discount_Prices.
     * @example
     * // Update or create a Discount_Prices
     * const discount_Prices = await prisma.discount_Prices.upsert({
     *   create: {
     *     // ... data to create a Discount_Prices
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Discount_Prices we want to update
     *   }
     * })
     */
    upsert<T extends Discount_PricesUpsertArgs>(args: SelectSubset<T, Discount_PricesUpsertArgs<ExtArgs>>): Prisma__Discount_PricesClient<$Result.GetResult<Prisma.$Discount_PricesPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Discount_Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Discount_PricesCountArgs} args - Arguments to filter Discount_Prices to count.
     * @example
     * // Count the number of Discount_Prices
     * const count = await prisma.discount_Prices.count({
     *   where: {
     *     // ... the filter for the Discount_Prices we want to count
     *   }
     * })
    **/
    count<T extends Discount_PricesCountArgs>(
      args?: Subset<T, Discount_PricesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Discount_PricesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Discount_Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Discount_PricesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Discount_PricesAggregateArgs>(args: Subset<T, Discount_PricesAggregateArgs>): Prisma.PrismaPromise<GetDiscount_PricesAggregateType<T>>

    /**
     * Group by Discount_Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Discount_PricesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Discount_PricesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Discount_PricesGroupByArgs['orderBy'] }
        : { orderBy?: Discount_PricesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Discount_PricesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscount_PricesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Discount_Prices model
   */
  readonly fields: Discount_PricesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Discount_Prices.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Discount_PricesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    discount<T extends Discount_Prices$discountArgs<ExtArgs> = {}>(args?: Subset<T, Discount_Prices$discountArgs<ExtArgs>>): Prisma__DiscountsClient<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    price<T extends PricesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PricesDefaultArgs<ExtArgs>>): Prisma__PricesClient<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Discount_Prices model
   */ 
  interface Discount_PricesFieldRefs {
    readonly discount_Id: FieldRef<"Discount_Prices", 'String'>
    readonly price_id: FieldRef<"Discount_Prices", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Discount_Prices findUnique
   */
  export type Discount_PricesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
    /**
     * Filter, which Discount_Prices to fetch.
     */
    where: Discount_PricesWhereUniqueInput
  }

  /**
   * Discount_Prices findUniqueOrThrow
   */
  export type Discount_PricesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
    /**
     * Filter, which Discount_Prices to fetch.
     */
    where: Discount_PricesWhereUniqueInput
  }

  /**
   * Discount_Prices findFirst
   */
  export type Discount_PricesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
    /**
     * Filter, which Discount_Prices to fetch.
     */
    where?: Discount_PricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discount_Prices to fetch.
     */
    orderBy?: Discount_PricesOrderByWithRelationInput | Discount_PricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Discount_Prices.
     */
    cursor?: Discount_PricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discount_Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discount_Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Discount_Prices.
     */
    distinct?: Discount_PricesScalarFieldEnum | Discount_PricesScalarFieldEnum[]
  }

  /**
   * Discount_Prices findFirstOrThrow
   */
  export type Discount_PricesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
    /**
     * Filter, which Discount_Prices to fetch.
     */
    where?: Discount_PricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discount_Prices to fetch.
     */
    orderBy?: Discount_PricesOrderByWithRelationInput | Discount_PricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Discount_Prices.
     */
    cursor?: Discount_PricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discount_Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discount_Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Discount_Prices.
     */
    distinct?: Discount_PricesScalarFieldEnum | Discount_PricesScalarFieldEnum[]
  }

  /**
   * Discount_Prices findMany
   */
  export type Discount_PricesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
    /**
     * Filter, which Discount_Prices to fetch.
     */
    where?: Discount_PricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discount_Prices to fetch.
     */
    orderBy?: Discount_PricesOrderByWithRelationInput | Discount_PricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Discount_Prices.
     */
    cursor?: Discount_PricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discount_Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discount_Prices.
     */
    skip?: number
    distinct?: Discount_PricesScalarFieldEnum | Discount_PricesScalarFieldEnum[]
  }

  /**
   * Discount_Prices create
   */
  export type Discount_PricesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
    /**
     * The data needed to create a Discount_Prices.
     */
    data: XOR<Discount_PricesCreateInput, Discount_PricesUncheckedCreateInput>
  }

  /**
   * Discount_Prices createMany
   */
  export type Discount_PricesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Discount_Prices.
     */
    data: Discount_PricesCreateManyInput | Discount_PricesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Discount_Prices createManyAndReturn
   */
  export type Discount_PricesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * The data used to create many Discount_Prices.
     */
    data: Discount_PricesCreateManyInput | Discount_PricesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Discount_Prices update
   */
  export type Discount_PricesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
    /**
     * The data needed to update a Discount_Prices.
     */
    data: XOR<Discount_PricesUpdateInput, Discount_PricesUncheckedUpdateInput>
    /**
     * Choose, which Discount_Prices to update.
     */
    where: Discount_PricesWhereUniqueInput
  }

  /**
   * Discount_Prices updateMany
   */
  export type Discount_PricesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Discount_Prices.
     */
    data: XOR<Discount_PricesUpdateManyMutationInput, Discount_PricesUncheckedUpdateManyInput>
    /**
     * Filter which Discount_Prices to update
     */
    where?: Discount_PricesWhereInput
  }

  /**
   * Discount_Prices upsert
   */
  export type Discount_PricesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
    /**
     * The filter to search for the Discount_Prices to update in case it exists.
     */
    where: Discount_PricesWhereUniqueInput
    /**
     * In case the Discount_Prices found by the `where` argument doesn't exist, create a new Discount_Prices with this data.
     */
    create: XOR<Discount_PricesCreateInput, Discount_PricesUncheckedCreateInput>
    /**
     * In case the Discount_Prices was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Discount_PricesUpdateInput, Discount_PricesUncheckedUpdateInput>
  }

  /**
   * Discount_Prices delete
   */
  export type Discount_PricesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
    /**
     * Filter which Discount_Prices to delete.
     */
    where: Discount_PricesWhereUniqueInput
  }

  /**
   * Discount_Prices deleteMany
   */
  export type Discount_PricesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Discount_Prices to delete
     */
    where?: Discount_PricesWhereInput
  }

  /**
   * Discount_Prices.discount
   */
  export type Discount_Prices$discountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    where?: DiscountsWhereInput
  }

  /**
   * Discount_Prices without action
   */
  export type Discount_PricesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount_Prices
     */
    select?: Discount_PricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount_Prices
     */
    omit?: Discount_PricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Discount_PricesInclude<ExtArgs> | null
  }


  /**
   * Model Customers
   */

  export type AggregateCustomers = {
    _count: CustomersCountAggregateOutputType | null
    _min: CustomersMinAggregateOutputType | null
    _max: CustomersMaxAggregateOutputType | null
  }

  export type CustomersMinAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    status: $Enums.Entity_Status | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    projectId: string | null
  }

  export type CustomersMaxAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    status: $Enums.Entity_Status | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    projectId: string | null
  }

  export type CustomersCountAggregateOutputType = {
    id: number
    email: number
    name: number
    status: number
    description: number
    custom_data: number
    created_at: number
    updated_at: number
    projectId: number
    _all: number
  }


  export type CustomersMinAggregateInputType = {
    id?: true
    email?: true
    name?: true
    status?: true
    description?: true
    created_at?: true
    updated_at?: true
    projectId?: true
  }

  export type CustomersMaxAggregateInputType = {
    id?: true
    email?: true
    name?: true
    status?: true
    description?: true
    created_at?: true
    updated_at?: true
    projectId?: true
  }

  export type CustomersCountAggregateInputType = {
    id?: true
    email?: true
    name?: true
    status?: true
    description?: true
    custom_data?: true
    created_at?: true
    updated_at?: true
    projectId?: true
    _all?: true
  }

  export type CustomersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customers to aggregate.
     */
    where?: CustomersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomersOrderByWithRelationInput | CustomersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Customers
    **/
    _count?: true | CustomersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomersMaxAggregateInputType
  }

  export type GetCustomersAggregateType<T extends CustomersAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomers[P]>
      : GetScalarType<T[P], AggregateCustomers[P]>
  }




  export type CustomersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomersWhereInput
    orderBy?: CustomersOrderByWithAggregationInput | CustomersOrderByWithAggregationInput[]
    by: CustomersScalarFieldEnum[] | CustomersScalarFieldEnum
    having?: CustomersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomersCountAggregateInputType | true
    _min?: CustomersMinAggregateInputType
    _max?: CustomersMaxAggregateInputType
  }

  export type CustomersGroupByOutputType = {
    id: string
    email: string
    name: string
    status: $Enums.Entity_Status | null
    description: string | null
    custom_data: JsonValue | null
    created_at: Date
    updated_at: Date
    projectId: string | null
    _count: CustomersCountAggregateOutputType | null
    _min: CustomersMinAggregateOutputType | null
    _max: CustomersMaxAggregateOutputType | null
  }

  type GetCustomersGroupByPayload<T extends CustomersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomersGroupByOutputType[P]>
            : GetScalarType<T[P], CustomersGroupByOutputType[P]>
        }
      >
    >


  export type CustomersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    status?: boolean
    description?: boolean
    custom_data?: boolean
    created_at?: boolean
    updated_at?: boolean
    projectId?: boolean
    Project?: boolean | Customers$ProjectArgs<ExtArgs>
    Addresses?: boolean | Customers$AddressesArgs<ExtArgs>
    Subscriptions?: boolean | Customers$SubscriptionsArgs<ExtArgs>
    Transactions?: boolean | Customers$TransactionsArgs<ExtArgs>
    _count?: boolean | CustomersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customers"]>

  export type CustomersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    status?: boolean
    description?: boolean
    custom_data?: boolean
    created_at?: boolean
    updated_at?: boolean
    projectId?: boolean
    Project?: boolean | Customers$ProjectArgs<ExtArgs>
  }, ExtArgs["result"]["customers"]>


  export type CustomersSelectScalar = {
    id?: boolean
    email?: boolean
    name?: boolean
    status?: boolean
    description?: boolean
    custom_data?: boolean
    created_at?: boolean
    updated_at?: boolean
    projectId?: boolean
  }

  export type CustomersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "name" | "status" | "description" | "custom_data" | "created_at" | "updated_at" | "projectId", ExtArgs["result"]["customers"]>
  export type CustomersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Project?: boolean | Customers$ProjectArgs<ExtArgs>
    Addresses?: boolean | Customers$AddressesArgs<ExtArgs>
    Subscriptions?: boolean | Customers$SubscriptionsArgs<ExtArgs>
    Transactions?: boolean | Customers$TransactionsArgs<ExtArgs>
    _count?: boolean | CustomersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CustomersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Project?: boolean | Customers$ProjectArgs<ExtArgs>
  }

  export type $CustomersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Customers"
    objects: {
      Project: Prisma.$ProjectPayload<ExtArgs> | null
      Addresses: Prisma.$AddressesPayload<ExtArgs>[]
      Subscriptions: Prisma.$SubscriptionsPayload<ExtArgs>[]
      Transactions: Prisma.$TransactionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      name: string
      status: $Enums.Entity_Status | null
      description: string | null
      custom_data: Prisma.JsonValue | null
      created_at: Date
      updated_at: Date
      projectId: string | null
    }, ExtArgs["result"]["customers"]>
    composites: {}
  }

  type CustomersGetPayload<S extends boolean | null | undefined | CustomersDefaultArgs> = $Result.GetResult<Prisma.$CustomersPayload, S>

  type CustomersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CustomersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CustomersCountAggregateInputType | true
    }

  export interface CustomersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Customers'], meta: { name: 'Customers' } }
    /**
     * Find zero or one Customers that matches the filter.
     * @param {CustomersFindUniqueArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomersFindUniqueArgs>(args: SelectSubset<T, CustomersFindUniqueArgs<ExtArgs>>): Prisma__CustomersClient<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Customers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CustomersFindUniqueOrThrowArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomersFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomersClient<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomersFindFirstArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomersFindFirstArgs>(args?: SelectSubset<T, CustomersFindFirstArgs<ExtArgs>>): Prisma__CustomersClient<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Customers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomersFindFirstOrThrowArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomersFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomersFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomersClient<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customers
     * const customers = await prisma.customers.findMany()
     * 
     * // Get first 10 Customers
     * const customers = await prisma.customers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customersWithIdOnly = await prisma.customers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomersFindManyArgs>(args?: SelectSubset<T, CustomersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Customers.
     * @param {CustomersCreateArgs} args - Arguments to create a Customers.
     * @example
     * // Create one Customers
     * const Customers = await prisma.customers.create({
     *   data: {
     *     // ... data to create a Customers
     *   }
     * })
     * 
     */
    create<T extends CustomersCreateArgs>(args: SelectSubset<T, CustomersCreateArgs<ExtArgs>>): Prisma__CustomersClient<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Customers.
     * @param {CustomersCreateManyArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customers = await prisma.customers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomersCreateManyArgs>(args?: SelectSubset<T, CustomersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Customers and returns the data saved in the database.
     * @param {CustomersCreateManyAndReturnArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customers = await prisma.customers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Customers and only return the `id`
     * const customersWithIdOnly = await prisma.customers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomersCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Customers.
     * @param {CustomersDeleteArgs} args - Arguments to delete one Customers.
     * @example
     * // Delete one Customers
     * const Customers = await prisma.customers.delete({
     *   where: {
     *     // ... filter to delete one Customers
     *   }
     * })
     * 
     */
    delete<T extends CustomersDeleteArgs>(args: SelectSubset<T, CustomersDeleteArgs<ExtArgs>>): Prisma__CustomersClient<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Customers.
     * @param {CustomersUpdateArgs} args - Arguments to update one Customers.
     * @example
     * // Update one Customers
     * const customers = await prisma.customers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomersUpdateArgs>(args: SelectSubset<T, CustomersUpdateArgs<ExtArgs>>): Prisma__CustomersClient<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Customers.
     * @param {CustomersDeleteManyArgs} args - Arguments to filter Customers to delete.
     * @example
     * // Delete a few Customers
     * const { count } = await prisma.customers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomersDeleteManyArgs>(args?: SelectSubset<T, CustomersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customers
     * const customers = await prisma.customers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomersUpdateManyArgs>(args: SelectSubset<T, CustomersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Customers.
     * @param {CustomersUpsertArgs} args - Arguments to update or create a Customers.
     * @example
     * // Update or create a Customers
     * const customers = await prisma.customers.upsert({
     *   create: {
     *     // ... data to create a Customers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customers we want to update
     *   }
     * })
     */
    upsert<T extends CustomersUpsertArgs>(args: SelectSubset<T, CustomersUpsertArgs<ExtArgs>>): Prisma__CustomersClient<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomersCountArgs} args - Arguments to filter Customers to count.
     * @example
     * // Count the number of Customers
     * const count = await prisma.customers.count({
     *   where: {
     *     // ... the filter for the Customers we want to count
     *   }
     * })
    **/
    count<T extends CustomersCountArgs>(
      args?: Subset<T, CustomersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomersAggregateArgs>(args: Subset<T, CustomersAggregateArgs>): Prisma.PrismaPromise<GetCustomersAggregateType<T>>

    /**
     * Group by Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomersGroupByArgs['orderBy'] }
        : { orderBy?: CustomersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Customers model
   */
  readonly fields: CustomersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Customers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Project<T extends Customers$ProjectArgs<ExtArgs> = {}>(args?: Subset<T, Customers$ProjectArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    Addresses<T extends Customers$AddressesArgs<ExtArgs> = {}>(args?: Subset<T, Customers$AddressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    Subscriptions<T extends Customers$SubscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, Customers$SubscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    Transactions<T extends Customers$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, Customers$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Customers model
   */ 
  interface CustomersFieldRefs {
    readonly id: FieldRef<"Customers", 'String'>
    readonly email: FieldRef<"Customers", 'String'>
    readonly name: FieldRef<"Customers", 'String'>
    readonly status: FieldRef<"Customers", 'Entity_Status'>
    readonly description: FieldRef<"Customers", 'String'>
    readonly custom_data: FieldRef<"Customers", 'Json'>
    readonly created_at: FieldRef<"Customers", 'DateTime'>
    readonly updated_at: FieldRef<"Customers", 'DateTime'>
    readonly projectId: FieldRef<"Customers", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Customers findUnique
   */
  export type CustomersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where: CustomersWhereUniqueInput
  }

  /**
   * Customers findUniqueOrThrow
   */
  export type CustomersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where: CustomersWhereUniqueInput
  }

  /**
   * Customers findFirst
   */
  export type CustomersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where?: CustomersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomersOrderByWithRelationInput | CustomersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomersScalarFieldEnum | CustomersScalarFieldEnum[]
  }

  /**
   * Customers findFirstOrThrow
   */
  export type CustomersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where?: CustomersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomersOrderByWithRelationInput | CustomersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomersScalarFieldEnum | CustomersScalarFieldEnum[]
  }

  /**
   * Customers findMany
   */
  export type CustomersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where?: CustomersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomersOrderByWithRelationInput | CustomersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Customers.
     */
    cursor?: CustomersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    distinct?: CustomersScalarFieldEnum | CustomersScalarFieldEnum[]
  }

  /**
   * Customers create
   */
  export type CustomersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
    /**
     * The data needed to create a Customers.
     */
    data: XOR<CustomersCreateInput, CustomersUncheckedCreateInput>
  }

  /**
   * Customers createMany
   */
  export type CustomersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Customers.
     */
    data: CustomersCreateManyInput | CustomersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Customers createManyAndReturn
   */
  export type CustomersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * The data used to create many Customers.
     */
    data: CustomersCreateManyInput | CustomersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Customers update
   */
  export type CustomersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
    /**
     * The data needed to update a Customers.
     */
    data: XOR<CustomersUpdateInput, CustomersUncheckedUpdateInput>
    /**
     * Choose, which Customers to update.
     */
    where: CustomersWhereUniqueInput
  }

  /**
   * Customers updateMany
   */
  export type CustomersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Customers.
     */
    data: XOR<CustomersUpdateManyMutationInput, CustomersUncheckedUpdateManyInput>
    /**
     * Filter which Customers to update
     */
    where?: CustomersWhereInput
  }

  /**
   * Customers upsert
   */
  export type CustomersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
    /**
     * The filter to search for the Customers to update in case it exists.
     */
    where: CustomersWhereUniqueInput
    /**
     * In case the Customers found by the `where` argument doesn't exist, create a new Customers with this data.
     */
    create: XOR<CustomersCreateInput, CustomersUncheckedCreateInput>
    /**
     * In case the Customers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomersUpdateInput, CustomersUncheckedUpdateInput>
  }

  /**
   * Customers delete
   */
  export type CustomersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
    /**
     * Filter which Customers to delete.
     */
    where: CustomersWhereUniqueInput
  }

  /**
   * Customers deleteMany
   */
  export type CustomersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customers to delete
     */
    where?: CustomersWhereInput
  }

  /**
   * Customers.Project
   */
  export type Customers$ProjectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Project
     */
    select?: ProjectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Project
     */
    omit?: ProjectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProjectInclude<ExtArgs> | null
    where?: ProjectWhereInput
  }

  /**
   * Customers.Addresses
   */
  export type Customers$AddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesInclude<ExtArgs> | null
    where?: AddressesWhereInput
    orderBy?: AddressesOrderByWithRelationInput | AddressesOrderByWithRelationInput[]
    cursor?: AddressesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * Customers.Subscriptions
   */
  export type Customers$SubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    where?: SubscriptionsWhereInput
    orderBy?: SubscriptionsOrderByWithRelationInput | SubscriptionsOrderByWithRelationInput[]
    cursor?: SubscriptionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * Customers.Transactions
   */
  export type Customers$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    where?: TransactionsWhereInput
    orderBy?: TransactionsOrderByWithRelationInput | TransactionsOrderByWithRelationInput[]
    cursor?: TransactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * Customers without action
   */
  export type CustomersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
  }


  /**
   * Model Addresses
   */

  export type AggregateAddresses = {
    _count: AddressesCountAggregateOutputType | null
    _min: AddressesMinAggregateOutputType | null
    _max: AddressesMaxAggregateOutputType | null
  }

  export type AddressesMinAggregateOutputType = {
    id: string | null
    description: string | null
    first_line: string | null
    city: string | null
    status: $Enums.Entity_Status | null
    created_at: Date | null
    updated_at: Date | null
    customer_id: string | null
  }

  export type AddressesMaxAggregateOutputType = {
    id: string | null
    description: string | null
    first_line: string | null
    city: string | null
    status: $Enums.Entity_Status | null
    created_at: Date | null
    updated_at: Date | null
    customer_id: string | null
  }

  export type AddressesCountAggregateOutputType = {
    id: number
    description: number
    first_line: number
    custom_data: number
    city: number
    status: number
    created_at: number
    updated_at: number
    customer_id: number
    _all: number
  }


  export type AddressesMinAggregateInputType = {
    id?: true
    description?: true
    first_line?: true
    city?: true
    status?: true
    created_at?: true
    updated_at?: true
    customer_id?: true
  }

  export type AddressesMaxAggregateInputType = {
    id?: true
    description?: true
    first_line?: true
    city?: true
    status?: true
    created_at?: true
    updated_at?: true
    customer_id?: true
  }

  export type AddressesCountAggregateInputType = {
    id?: true
    description?: true
    first_line?: true
    custom_data?: true
    city?: true
    status?: true
    created_at?: true
    updated_at?: true
    customer_id?: true
    _all?: true
  }

  export type AddressesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Addresses to aggregate.
     */
    where?: AddressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressesOrderByWithRelationInput | AddressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AddressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Addresses
    **/
    _count?: true | AddressesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AddressesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AddressesMaxAggregateInputType
  }

  export type GetAddressesAggregateType<T extends AddressesAggregateArgs> = {
        [P in keyof T & keyof AggregateAddresses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAddresses[P]>
      : GetScalarType<T[P], AggregateAddresses[P]>
  }




  export type AddressesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AddressesWhereInput
    orderBy?: AddressesOrderByWithAggregationInput | AddressesOrderByWithAggregationInput[]
    by: AddressesScalarFieldEnum[] | AddressesScalarFieldEnum
    having?: AddressesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AddressesCountAggregateInputType | true
    _min?: AddressesMinAggregateInputType
    _max?: AddressesMaxAggregateInputType
  }

  export type AddressesGroupByOutputType = {
    id: string
    description: string | null
    first_line: string | null
    custom_data: JsonValue | null
    city: string | null
    status: $Enums.Entity_Status | null
    created_at: Date
    updated_at: Date
    customer_id: string | null
    _count: AddressesCountAggregateOutputType | null
    _min: AddressesMinAggregateOutputType | null
    _max: AddressesMaxAggregateOutputType | null
  }

  type GetAddressesGroupByPayload<T extends AddressesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AddressesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AddressesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AddressesGroupByOutputType[P]>
            : GetScalarType<T[P], AddressesGroupByOutputType[P]>
        }
      >
    >


  export type AddressesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    first_line?: boolean
    custom_data?: boolean
    city?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    customer_id?: boolean
    Customers?: boolean | Addresses$CustomersArgs<ExtArgs>
    Subscriptions?: boolean | Addresses$SubscriptionsArgs<ExtArgs>
    Transactions?: boolean | Addresses$TransactionsArgs<ExtArgs>
    _count?: boolean | AddressesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["addresses"]>

  export type AddressesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    first_line?: boolean
    custom_data?: boolean
    city?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    customer_id?: boolean
    Customers?: boolean | Addresses$CustomersArgs<ExtArgs>
  }, ExtArgs["result"]["addresses"]>


  export type AddressesSelectScalar = {
    id?: boolean
    description?: boolean
    first_line?: boolean
    custom_data?: boolean
    city?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    customer_id?: boolean
  }

  export type AddressesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "description" | "first_line" | "custom_data" | "city" | "status" | "created_at" | "updated_at" | "customer_id", ExtArgs["result"]["addresses"]>
  export type AddressesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Customers?: boolean | Addresses$CustomersArgs<ExtArgs>
    Subscriptions?: boolean | Addresses$SubscriptionsArgs<ExtArgs>
    Transactions?: boolean | Addresses$TransactionsArgs<ExtArgs>
    _count?: boolean | AddressesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AddressesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Customers?: boolean | Addresses$CustomersArgs<ExtArgs>
  }

  export type $AddressesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Addresses"
    objects: {
      Customers: Prisma.$CustomersPayload<ExtArgs> | null
      Subscriptions: Prisma.$SubscriptionsPayload<ExtArgs>[]
      Transactions: Prisma.$TransactionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      description: string | null
      first_line: string | null
      custom_data: Prisma.JsonValue | null
      city: string | null
      status: $Enums.Entity_Status | null
      created_at: Date
      updated_at: Date
      customer_id: string | null
    }, ExtArgs["result"]["addresses"]>
    composites: {}
  }

  type AddressesGetPayload<S extends boolean | null | undefined | AddressesDefaultArgs> = $Result.GetResult<Prisma.$AddressesPayload, S>

  type AddressesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AddressesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AddressesCountAggregateInputType | true
    }

  export interface AddressesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Addresses'], meta: { name: 'Addresses' } }
    /**
     * Find zero or one Addresses that matches the filter.
     * @param {AddressesFindUniqueArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AddressesFindUniqueArgs>(args: SelectSubset<T, AddressesFindUniqueArgs<ExtArgs>>): Prisma__AddressesClient<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Addresses that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AddressesFindUniqueOrThrowArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AddressesFindUniqueOrThrowArgs>(args: SelectSubset<T, AddressesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AddressesClient<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressesFindFirstArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AddressesFindFirstArgs>(args?: SelectSubset<T, AddressesFindFirstArgs<ExtArgs>>): Prisma__AddressesClient<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Addresses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressesFindFirstOrThrowArgs} args - Arguments to find a Addresses
     * @example
     * // Get one Addresses
     * const addresses = await prisma.addresses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AddressesFindFirstOrThrowArgs>(args?: SelectSubset<T, AddressesFindFirstOrThrowArgs<ExtArgs>>): Prisma__AddressesClient<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Addresses
     * const addresses = await prisma.addresses.findMany()
     * 
     * // Get first 10 Addresses
     * const addresses = await prisma.addresses.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const addressesWithIdOnly = await prisma.addresses.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AddressesFindManyArgs>(args?: SelectSubset<T, AddressesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Addresses.
     * @param {AddressesCreateArgs} args - Arguments to create a Addresses.
     * @example
     * // Create one Addresses
     * const Addresses = await prisma.addresses.create({
     *   data: {
     *     // ... data to create a Addresses
     *   }
     * })
     * 
     */
    create<T extends AddressesCreateArgs>(args: SelectSubset<T, AddressesCreateArgs<ExtArgs>>): Prisma__AddressesClient<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Addresses.
     * @param {AddressesCreateManyArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const addresses = await prisma.addresses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AddressesCreateManyArgs>(args?: SelectSubset<T, AddressesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Addresses and returns the data saved in the database.
     * @param {AddressesCreateManyAndReturnArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const addresses = await prisma.addresses.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Addresses and only return the `id`
     * const addressesWithIdOnly = await prisma.addresses.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AddressesCreateManyAndReturnArgs>(args?: SelectSubset<T, AddressesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Addresses.
     * @param {AddressesDeleteArgs} args - Arguments to delete one Addresses.
     * @example
     * // Delete one Addresses
     * const Addresses = await prisma.addresses.delete({
     *   where: {
     *     // ... filter to delete one Addresses
     *   }
     * })
     * 
     */
    delete<T extends AddressesDeleteArgs>(args: SelectSubset<T, AddressesDeleteArgs<ExtArgs>>): Prisma__AddressesClient<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Addresses.
     * @param {AddressesUpdateArgs} args - Arguments to update one Addresses.
     * @example
     * // Update one Addresses
     * const addresses = await prisma.addresses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AddressesUpdateArgs>(args: SelectSubset<T, AddressesUpdateArgs<ExtArgs>>): Prisma__AddressesClient<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Addresses.
     * @param {AddressesDeleteManyArgs} args - Arguments to filter Addresses to delete.
     * @example
     * // Delete a few Addresses
     * const { count } = await prisma.addresses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AddressesDeleteManyArgs>(args?: SelectSubset<T, AddressesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Addresses
     * const addresses = await prisma.addresses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AddressesUpdateManyArgs>(args: SelectSubset<T, AddressesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Addresses.
     * @param {AddressesUpsertArgs} args - Arguments to update or create a Addresses.
     * @example
     * // Update or create a Addresses
     * const addresses = await prisma.addresses.upsert({
     *   create: {
     *     // ... data to create a Addresses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Addresses we want to update
     *   }
     * })
     */
    upsert<T extends AddressesUpsertArgs>(args: SelectSubset<T, AddressesUpsertArgs<ExtArgs>>): Prisma__AddressesClient<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressesCountArgs} args - Arguments to filter Addresses to count.
     * @example
     * // Count the number of Addresses
     * const count = await prisma.addresses.count({
     *   where: {
     *     // ... the filter for the Addresses we want to count
     *   }
     * })
    **/
    count<T extends AddressesCountArgs>(
      args?: Subset<T, AddressesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AddressesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AddressesAggregateArgs>(args: Subset<T, AddressesAggregateArgs>): Prisma.PrismaPromise<GetAddressesAggregateType<T>>

    /**
     * Group by Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AddressesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AddressesGroupByArgs['orderBy'] }
        : { orderBy?: AddressesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AddressesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAddressesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Addresses model
   */
  readonly fields: AddressesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Addresses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AddressesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Customers<T extends Addresses$CustomersArgs<ExtArgs> = {}>(args?: Subset<T, Addresses$CustomersArgs<ExtArgs>>): Prisma__CustomersClient<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    Subscriptions<T extends Addresses$SubscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, Addresses$SubscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    Transactions<T extends Addresses$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, Addresses$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Addresses model
   */ 
  interface AddressesFieldRefs {
    readonly id: FieldRef<"Addresses", 'String'>
    readonly description: FieldRef<"Addresses", 'String'>
    readonly first_line: FieldRef<"Addresses", 'String'>
    readonly custom_data: FieldRef<"Addresses", 'Json'>
    readonly city: FieldRef<"Addresses", 'String'>
    readonly status: FieldRef<"Addresses", 'Entity_Status'>
    readonly created_at: FieldRef<"Addresses", 'DateTime'>
    readonly updated_at: FieldRef<"Addresses", 'DateTime'>
    readonly customer_id: FieldRef<"Addresses", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Addresses findUnique
   */
  export type AddressesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesInclude<ExtArgs> | null
    /**
     * Filter, which Addresses to fetch.
     */
    where: AddressesWhereUniqueInput
  }

  /**
   * Addresses findUniqueOrThrow
   */
  export type AddressesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesInclude<ExtArgs> | null
    /**
     * Filter, which Addresses to fetch.
     */
    where: AddressesWhereUniqueInput
  }

  /**
   * Addresses findFirst
   */
  export type AddressesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesInclude<ExtArgs> | null
    /**
     * Filter, which Addresses to fetch.
     */
    where?: AddressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressesOrderByWithRelationInput | AddressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Addresses.
     */
    cursor?: AddressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Addresses.
     */
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * Addresses findFirstOrThrow
   */
  export type AddressesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesInclude<ExtArgs> | null
    /**
     * Filter, which Addresses to fetch.
     */
    where?: AddressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressesOrderByWithRelationInput | AddressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Addresses.
     */
    cursor?: AddressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Addresses.
     */
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * Addresses findMany
   */
  export type AddressesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesInclude<ExtArgs> | null
    /**
     * Filter, which Addresses to fetch.
     */
    where?: AddressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressesOrderByWithRelationInput | AddressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Addresses.
     */
    cursor?: AddressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    distinct?: AddressesScalarFieldEnum | AddressesScalarFieldEnum[]
  }

  /**
   * Addresses create
   */
  export type AddressesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesInclude<ExtArgs> | null
    /**
     * The data needed to create a Addresses.
     */
    data: XOR<AddressesCreateInput, AddressesUncheckedCreateInput>
  }

  /**
   * Addresses createMany
   */
  export type AddressesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Addresses.
     */
    data: AddressesCreateManyInput | AddressesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Addresses createManyAndReturn
   */
  export type AddressesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * The data used to create many Addresses.
     */
    data: AddressesCreateManyInput | AddressesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Addresses update
   */
  export type AddressesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesInclude<ExtArgs> | null
    /**
     * The data needed to update a Addresses.
     */
    data: XOR<AddressesUpdateInput, AddressesUncheckedUpdateInput>
    /**
     * Choose, which Addresses to update.
     */
    where: AddressesWhereUniqueInput
  }

  /**
   * Addresses updateMany
   */
  export type AddressesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Addresses.
     */
    data: XOR<AddressesUpdateManyMutationInput, AddressesUncheckedUpdateManyInput>
    /**
     * Filter which Addresses to update
     */
    where?: AddressesWhereInput
  }

  /**
   * Addresses upsert
   */
  export type AddressesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesInclude<ExtArgs> | null
    /**
     * The filter to search for the Addresses to update in case it exists.
     */
    where: AddressesWhereUniqueInput
    /**
     * In case the Addresses found by the `where` argument doesn't exist, create a new Addresses with this data.
     */
    create: XOR<AddressesCreateInput, AddressesUncheckedCreateInput>
    /**
     * In case the Addresses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AddressesUpdateInput, AddressesUncheckedUpdateInput>
  }

  /**
   * Addresses delete
   */
  export type AddressesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesInclude<ExtArgs> | null
    /**
     * Filter which Addresses to delete.
     */
    where: AddressesWhereUniqueInput
  }

  /**
   * Addresses deleteMany
   */
  export type AddressesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Addresses to delete
     */
    where?: AddressesWhereInput
  }

  /**
   * Addresses.Customers
   */
  export type Addresses$CustomersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customers
     */
    select?: CustomersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customers
     */
    omit?: CustomersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomersInclude<ExtArgs> | null
    where?: CustomersWhereInput
  }

  /**
   * Addresses.Subscriptions
   */
  export type Addresses$SubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    where?: SubscriptionsWhereInput
    orderBy?: SubscriptionsOrderByWithRelationInput | SubscriptionsOrderByWithRelationInput[]
    cursor?: SubscriptionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * Addresses.Transactions
   */
  export type Addresses$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    where?: TransactionsWhereInput
    orderBy?: TransactionsOrderByWithRelationInput | TransactionsOrderByWithRelationInput[]
    cursor?: TransactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * Addresses without action
   */
  export type AddressesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Addresses
     */
    select?: AddressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Addresses
     */
    omit?: AddressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressesInclude<ExtArgs> | null
  }


  /**
   * Model SubscriptionItems
   */

  export type AggregateSubscriptionItems = {
    _count: SubscriptionItemsCountAggregateOutputType | null
    _avg: SubscriptionItemsAvgAggregateOutputType | null
    _sum: SubscriptionItemsSumAggregateOutputType | null
    _min: SubscriptionItemsMinAggregateOutputType | null
    _max: SubscriptionItemsMaxAggregateOutputType | null
  }

  export type SubscriptionItemsAvgAggregateOutputType = {
    quantity: number | null
  }

  export type SubscriptionItemsSumAggregateOutputType = {
    quantity: number | null
  }

  export type SubscriptionItemsMinAggregateOutputType = {
    id: string | null
    subscription_id: string | null
    price_id: string | null
    quantity: number | null
    status: $Enums.SubscriptionItemsStatus | null
    recurring: boolean | null
    created_at: Date | null
    updated_at: Date | null
    previously_billed_at: Date | null
    next_billed_at: Date | null
    trial_started_at: Date | null
    trial_ended_at: Date | null
  }

  export type SubscriptionItemsMaxAggregateOutputType = {
    id: string | null
    subscription_id: string | null
    price_id: string | null
    quantity: number | null
    status: $Enums.SubscriptionItemsStatus | null
    recurring: boolean | null
    created_at: Date | null
    updated_at: Date | null
    previously_billed_at: Date | null
    next_billed_at: Date | null
    trial_started_at: Date | null
    trial_ended_at: Date | null
  }

  export type SubscriptionItemsCountAggregateOutputType = {
    id: number
    subscription_id: number
    price_id: number
    quantity: number
    status: number
    recurring: number
    created_at: number
    updated_at: number
    previously_billed_at: number
    next_billed_at: number
    trial_started_at: number
    trial_ended_at: number
    custom_data: number
    _all: number
  }


  export type SubscriptionItemsAvgAggregateInputType = {
    quantity?: true
  }

  export type SubscriptionItemsSumAggregateInputType = {
    quantity?: true
  }

  export type SubscriptionItemsMinAggregateInputType = {
    id?: true
    subscription_id?: true
    price_id?: true
    quantity?: true
    status?: true
    recurring?: true
    created_at?: true
    updated_at?: true
    previously_billed_at?: true
    next_billed_at?: true
    trial_started_at?: true
    trial_ended_at?: true
  }

  export type SubscriptionItemsMaxAggregateInputType = {
    id?: true
    subscription_id?: true
    price_id?: true
    quantity?: true
    status?: true
    recurring?: true
    created_at?: true
    updated_at?: true
    previously_billed_at?: true
    next_billed_at?: true
    trial_started_at?: true
    trial_ended_at?: true
  }

  export type SubscriptionItemsCountAggregateInputType = {
    id?: true
    subscription_id?: true
    price_id?: true
    quantity?: true
    status?: true
    recurring?: true
    created_at?: true
    updated_at?: true
    previously_billed_at?: true
    next_billed_at?: true
    trial_started_at?: true
    trial_ended_at?: true
    custom_data?: true
    _all?: true
  }

  export type SubscriptionItemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubscriptionItems to aggregate.
     */
    where?: SubscriptionItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionItems to fetch.
     */
    orderBy?: SubscriptionItemsOrderByWithRelationInput | SubscriptionItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubscriptionItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SubscriptionItems
    **/
    _count?: true | SubscriptionItemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubscriptionItemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubscriptionItemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscriptionItemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscriptionItemsMaxAggregateInputType
  }

  export type GetSubscriptionItemsAggregateType<T extends SubscriptionItemsAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscriptionItems]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscriptionItems[P]>
      : GetScalarType<T[P], AggregateSubscriptionItems[P]>
  }




  export type SubscriptionItemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionItemsWhereInput
    orderBy?: SubscriptionItemsOrderByWithAggregationInput | SubscriptionItemsOrderByWithAggregationInput[]
    by: SubscriptionItemsScalarFieldEnum[] | SubscriptionItemsScalarFieldEnum
    having?: SubscriptionItemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscriptionItemsCountAggregateInputType | true
    _avg?: SubscriptionItemsAvgAggregateInputType
    _sum?: SubscriptionItemsSumAggregateInputType
    _min?: SubscriptionItemsMinAggregateInputType
    _max?: SubscriptionItemsMaxAggregateInputType
  }

  export type SubscriptionItemsGroupByOutputType = {
    id: string
    subscription_id: string
    price_id: string
    quantity: number
    status: $Enums.SubscriptionItemsStatus
    recurring: boolean
    created_at: Date
    updated_at: Date
    previously_billed_at: Date | null
    next_billed_at: Date | null
    trial_started_at: Date | null
    trial_ended_at: Date | null
    custom_data: JsonValue | null
    _count: SubscriptionItemsCountAggregateOutputType | null
    _avg: SubscriptionItemsAvgAggregateOutputType | null
    _sum: SubscriptionItemsSumAggregateOutputType | null
    _min: SubscriptionItemsMinAggregateOutputType | null
    _max: SubscriptionItemsMaxAggregateOutputType | null
  }

  type GetSubscriptionItemsGroupByPayload<T extends SubscriptionItemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscriptionItemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscriptionItemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscriptionItemsGroupByOutputType[P]>
            : GetScalarType<T[P], SubscriptionItemsGroupByOutputType[P]>
        }
      >
    >


  export type SubscriptionItemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscription_id?: boolean
    price_id?: boolean
    quantity?: boolean
    status?: boolean
    recurring?: boolean
    created_at?: boolean
    updated_at?: boolean
    previously_billed_at?: boolean
    next_billed_at?: boolean
    trial_started_at?: boolean
    trial_ended_at?: boolean
    custom_data?: boolean
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
    price?: boolean | PricesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscriptionItems"]>

  export type SubscriptionItemsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscription_id?: boolean
    price_id?: boolean
    quantity?: boolean
    status?: boolean
    recurring?: boolean
    created_at?: boolean
    updated_at?: boolean
    previously_billed_at?: boolean
    next_billed_at?: boolean
    trial_started_at?: boolean
    trial_ended_at?: boolean
    custom_data?: boolean
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
    price?: boolean | PricesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscriptionItems"]>


  export type SubscriptionItemsSelectScalar = {
    id?: boolean
    subscription_id?: boolean
    price_id?: boolean
    quantity?: boolean
    status?: boolean
    recurring?: boolean
    created_at?: boolean
    updated_at?: boolean
    previously_billed_at?: boolean
    next_billed_at?: boolean
    trial_started_at?: boolean
    trial_ended_at?: boolean
    custom_data?: boolean
  }

  export type SubscriptionItemsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "subscription_id" | "price_id" | "quantity" | "status" | "recurring" | "created_at" | "updated_at" | "previously_billed_at" | "next_billed_at" | "trial_started_at" | "trial_ended_at" | "custom_data", ExtArgs["result"]["subscriptionItems"]>
  export type SubscriptionItemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
    price?: boolean | PricesDefaultArgs<ExtArgs>
  }
  export type SubscriptionItemsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
    price?: boolean | PricesDefaultArgs<ExtArgs>
  }

  export type $SubscriptionItemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SubscriptionItems"
    objects: {
      subscription: Prisma.$SubscriptionsPayload<ExtArgs>
      price: Prisma.$PricesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      subscription_id: string
      price_id: string
      quantity: number
      status: $Enums.SubscriptionItemsStatus
      recurring: boolean
      created_at: Date
      updated_at: Date
      previously_billed_at: Date | null
      next_billed_at: Date | null
      trial_started_at: Date | null
      trial_ended_at: Date | null
      custom_data: Prisma.JsonValue | null
    }, ExtArgs["result"]["subscriptionItems"]>
    composites: {}
  }

  type SubscriptionItemsGetPayload<S extends boolean | null | undefined | SubscriptionItemsDefaultArgs> = $Result.GetResult<Prisma.$SubscriptionItemsPayload, S>

  type SubscriptionItemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SubscriptionItemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SubscriptionItemsCountAggregateInputType | true
    }

  export interface SubscriptionItemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SubscriptionItems'], meta: { name: 'SubscriptionItems' } }
    /**
     * Find zero or one SubscriptionItems that matches the filter.
     * @param {SubscriptionItemsFindUniqueArgs} args - Arguments to find a SubscriptionItems
     * @example
     * // Get one SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItems.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubscriptionItemsFindUniqueArgs>(args: SelectSubset<T, SubscriptionItemsFindUniqueArgs<ExtArgs>>): Prisma__SubscriptionItemsClient<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one SubscriptionItems that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SubscriptionItemsFindUniqueOrThrowArgs} args - Arguments to find a SubscriptionItems
     * @example
     * // Get one SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItems.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubscriptionItemsFindUniqueOrThrowArgs>(args: SelectSubset<T, SubscriptionItemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubscriptionItemsClient<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first SubscriptionItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemsFindFirstArgs} args - Arguments to find a SubscriptionItems
     * @example
     * // Get one SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItems.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubscriptionItemsFindFirstArgs>(args?: SelectSubset<T, SubscriptionItemsFindFirstArgs<ExtArgs>>): Prisma__SubscriptionItemsClient<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first SubscriptionItems that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemsFindFirstOrThrowArgs} args - Arguments to find a SubscriptionItems
     * @example
     * // Get one SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItems.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubscriptionItemsFindFirstOrThrowArgs>(args?: SelectSubset<T, SubscriptionItemsFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubscriptionItemsClient<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more SubscriptionItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItems.findMany()
     * 
     * // Get first 10 SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItems.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscriptionItemsWithIdOnly = await prisma.subscriptionItems.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubscriptionItemsFindManyArgs>(args?: SelectSubset<T, SubscriptionItemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a SubscriptionItems.
     * @param {SubscriptionItemsCreateArgs} args - Arguments to create a SubscriptionItems.
     * @example
     * // Create one SubscriptionItems
     * const SubscriptionItems = await prisma.subscriptionItems.create({
     *   data: {
     *     // ... data to create a SubscriptionItems
     *   }
     * })
     * 
     */
    create<T extends SubscriptionItemsCreateArgs>(args: SelectSubset<T, SubscriptionItemsCreateArgs<ExtArgs>>): Prisma__SubscriptionItemsClient<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many SubscriptionItems.
     * @param {SubscriptionItemsCreateManyArgs} args - Arguments to create many SubscriptionItems.
     * @example
     * // Create many SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItems.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubscriptionItemsCreateManyArgs>(args?: SelectSubset<T, SubscriptionItemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SubscriptionItems and returns the data saved in the database.
     * @param {SubscriptionItemsCreateManyAndReturnArgs} args - Arguments to create many SubscriptionItems.
     * @example
     * // Create many SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItems.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SubscriptionItems and only return the `id`
     * const subscriptionItemsWithIdOnly = await prisma.subscriptionItems.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SubscriptionItemsCreateManyAndReturnArgs>(args?: SelectSubset<T, SubscriptionItemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a SubscriptionItems.
     * @param {SubscriptionItemsDeleteArgs} args - Arguments to delete one SubscriptionItems.
     * @example
     * // Delete one SubscriptionItems
     * const SubscriptionItems = await prisma.subscriptionItems.delete({
     *   where: {
     *     // ... filter to delete one SubscriptionItems
     *   }
     * })
     * 
     */
    delete<T extends SubscriptionItemsDeleteArgs>(args: SelectSubset<T, SubscriptionItemsDeleteArgs<ExtArgs>>): Prisma__SubscriptionItemsClient<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one SubscriptionItems.
     * @param {SubscriptionItemsUpdateArgs} args - Arguments to update one SubscriptionItems.
     * @example
     * // Update one SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItems.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubscriptionItemsUpdateArgs>(args: SelectSubset<T, SubscriptionItemsUpdateArgs<ExtArgs>>): Prisma__SubscriptionItemsClient<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more SubscriptionItems.
     * @param {SubscriptionItemsDeleteManyArgs} args - Arguments to filter SubscriptionItems to delete.
     * @example
     * // Delete a few SubscriptionItems
     * const { count } = await prisma.subscriptionItems.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubscriptionItemsDeleteManyArgs>(args?: SelectSubset<T, SubscriptionItemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SubscriptionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItems.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubscriptionItemsUpdateManyArgs>(args: SelectSubset<T, SubscriptionItemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SubscriptionItems.
     * @param {SubscriptionItemsUpsertArgs} args - Arguments to update or create a SubscriptionItems.
     * @example
     * // Update or create a SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItems.upsert({
     *   create: {
     *     // ... data to create a SubscriptionItems
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SubscriptionItems we want to update
     *   }
     * })
     */
    upsert<T extends SubscriptionItemsUpsertArgs>(args: SelectSubset<T, SubscriptionItemsUpsertArgs<ExtArgs>>): Prisma__SubscriptionItemsClient<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of SubscriptionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemsCountArgs} args - Arguments to filter SubscriptionItems to count.
     * @example
     * // Count the number of SubscriptionItems
     * const count = await prisma.subscriptionItems.count({
     *   where: {
     *     // ... the filter for the SubscriptionItems we want to count
     *   }
     * })
    **/
    count<T extends SubscriptionItemsCountArgs>(
      args?: Subset<T, SubscriptionItemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscriptionItemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SubscriptionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscriptionItemsAggregateArgs>(args: Subset<T, SubscriptionItemsAggregateArgs>): Prisma.PrismaPromise<GetSubscriptionItemsAggregateType<T>>

    /**
     * Group by SubscriptionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubscriptionItemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubscriptionItemsGroupByArgs['orderBy'] }
        : { orderBy?: SubscriptionItemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubscriptionItemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscriptionItemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SubscriptionItems model
   */
  readonly fields: SubscriptionItemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SubscriptionItems.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubscriptionItemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    subscription<T extends SubscriptionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SubscriptionsDefaultArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    price<T extends PricesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PricesDefaultArgs<ExtArgs>>): Prisma__PricesClient<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SubscriptionItems model
   */ 
  interface SubscriptionItemsFieldRefs {
    readonly id: FieldRef<"SubscriptionItems", 'String'>
    readonly subscription_id: FieldRef<"SubscriptionItems", 'String'>
    readonly price_id: FieldRef<"SubscriptionItems", 'String'>
    readonly quantity: FieldRef<"SubscriptionItems", 'Int'>
    readonly status: FieldRef<"SubscriptionItems", 'SubscriptionItemsStatus'>
    readonly recurring: FieldRef<"SubscriptionItems", 'Boolean'>
    readonly created_at: FieldRef<"SubscriptionItems", 'DateTime'>
    readonly updated_at: FieldRef<"SubscriptionItems", 'DateTime'>
    readonly previously_billed_at: FieldRef<"SubscriptionItems", 'DateTime'>
    readonly next_billed_at: FieldRef<"SubscriptionItems", 'DateTime'>
    readonly trial_started_at: FieldRef<"SubscriptionItems", 'DateTime'>
    readonly trial_ended_at: FieldRef<"SubscriptionItems", 'DateTime'>
    readonly custom_data: FieldRef<"SubscriptionItems", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * SubscriptionItems findUnique
   */
  export type SubscriptionItemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionItems to fetch.
     */
    where: SubscriptionItemsWhereUniqueInput
  }

  /**
   * SubscriptionItems findUniqueOrThrow
   */
  export type SubscriptionItemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionItems to fetch.
     */
    where: SubscriptionItemsWhereUniqueInput
  }

  /**
   * SubscriptionItems findFirst
   */
  export type SubscriptionItemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionItems to fetch.
     */
    where?: SubscriptionItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionItems to fetch.
     */
    orderBy?: SubscriptionItemsOrderByWithRelationInput | SubscriptionItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubscriptionItems.
     */
    cursor?: SubscriptionItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubscriptionItems.
     */
    distinct?: SubscriptionItemsScalarFieldEnum | SubscriptionItemsScalarFieldEnum[]
  }

  /**
   * SubscriptionItems findFirstOrThrow
   */
  export type SubscriptionItemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionItems to fetch.
     */
    where?: SubscriptionItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionItems to fetch.
     */
    orderBy?: SubscriptionItemsOrderByWithRelationInput | SubscriptionItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubscriptionItems.
     */
    cursor?: SubscriptionItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubscriptionItems.
     */
    distinct?: SubscriptionItemsScalarFieldEnum | SubscriptionItemsScalarFieldEnum[]
  }

  /**
   * SubscriptionItems findMany
   */
  export type SubscriptionItemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionItems to fetch.
     */
    where?: SubscriptionItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionItems to fetch.
     */
    orderBy?: SubscriptionItemsOrderByWithRelationInput | SubscriptionItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SubscriptionItems.
     */
    cursor?: SubscriptionItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionItems.
     */
    skip?: number
    distinct?: SubscriptionItemsScalarFieldEnum | SubscriptionItemsScalarFieldEnum[]
  }

  /**
   * SubscriptionItems create
   */
  export type SubscriptionItemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
    /**
     * The data needed to create a SubscriptionItems.
     */
    data: XOR<SubscriptionItemsCreateInput, SubscriptionItemsUncheckedCreateInput>
  }

  /**
   * SubscriptionItems createMany
   */
  export type SubscriptionItemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SubscriptionItems.
     */
    data: SubscriptionItemsCreateManyInput | SubscriptionItemsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SubscriptionItems createManyAndReturn
   */
  export type SubscriptionItemsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * The data used to create many SubscriptionItems.
     */
    data: SubscriptionItemsCreateManyInput | SubscriptionItemsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SubscriptionItems update
   */
  export type SubscriptionItemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
    /**
     * The data needed to update a SubscriptionItems.
     */
    data: XOR<SubscriptionItemsUpdateInput, SubscriptionItemsUncheckedUpdateInput>
    /**
     * Choose, which SubscriptionItems to update.
     */
    where: SubscriptionItemsWhereUniqueInput
  }

  /**
   * SubscriptionItems updateMany
   */
  export type SubscriptionItemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SubscriptionItems.
     */
    data: XOR<SubscriptionItemsUpdateManyMutationInput, SubscriptionItemsUncheckedUpdateManyInput>
    /**
     * Filter which SubscriptionItems to update
     */
    where?: SubscriptionItemsWhereInput
  }

  /**
   * SubscriptionItems upsert
   */
  export type SubscriptionItemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
    /**
     * The filter to search for the SubscriptionItems to update in case it exists.
     */
    where: SubscriptionItemsWhereUniqueInput
    /**
     * In case the SubscriptionItems found by the `where` argument doesn't exist, create a new SubscriptionItems with this data.
     */
    create: XOR<SubscriptionItemsCreateInput, SubscriptionItemsUncheckedCreateInput>
    /**
     * In case the SubscriptionItems was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubscriptionItemsUpdateInput, SubscriptionItemsUncheckedUpdateInput>
  }

  /**
   * SubscriptionItems delete
   */
  export type SubscriptionItemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
    /**
     * Filter which SubscriptionItems to delete.
     */
    where: SubscriptionItemsWhereUniqueInput
  }

  /**
   * SubscriptionItems deleteMany
   */
  export type SubscriptionItemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubscriptionItems to delete
     */
    where?: SubscriptionItemsWhereInput
  }

  /**
   * SubscriptionItems without action
   */
  export type SubscriptionItemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
  }


  /**
   * Model Subscription_Scheduled_Changes
   */

  export type AggregateSubscription_Scheduled_Changes = {
    _count: Subscription_Scheduled_ChangesCountAggregateOutputType | null
    _min: Subscription_Scheduled_ChangesMinAggregateOutputType | null
    _max: Subscription_Scheduled_ChangesMaxAggregateOutputType | null
  }

  export type Subscription_Scheduled_ChangesMinAggregateOutputType = {
    id: string | null
    subscription_id: string | null
    action: $Enums.ScheduledChangeAction | null
    effective_at: Date | null
    resumes_at: Date | null
    status: $Enums.ScheduledChangesStatus | null
  }

  export type Subscription_Scheduled_ChangesMaxAggregateOutputType = {
    id: string | null
    subscription_id: string | null
    action: $Enums.ScheduledChangeAction | null
    effective_at: Date | null
    resumes_at: Date | null
    status: $Enums.ScheduledChangesStatus | null
  }

  export type Subscription_Scheduled_ChangesCountAggregateOutputType = {
    id: number
    subscription_id: number
    action: number
    effective_at: number
    resumes_at: number
    status: number
    _all: number
  }


  export type Subscription_Scheduled_ChangesMinAggregateInputType = {
    id?: true
    subscription_id?: true
    action?: true
    effective_at?: true
    resumes_at?: true
    status?: true
  }

  export type Subscription_Scheduled_ChangesMaxAggregateInputType = {
    id?: true
    subscription_id?: true
    action?: true
    effective_at?: true
    resumes_at?: true
    status?: true
  }

  export type Subscription_Scheduled_ChangesCountAggregateInputType = {
    id?: true
    subscription_id?: true
    action?: true
    effective_at?: true
    resumes_at?: true
    status?: true
    _all?: true
  }

  export type Subscription_Scheduled_ChangesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscription_Scheduled_Changes to aggregate.
     */
    where?: Subscription_Scheduled_ChangesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscription_Scheduled_Changes to fetch.
     */
    orderBy?: Subscription_Scheduled_ChangesOrderByWithRelationInput | Subscription_Scheduled_ChangesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Subscription_Scheduled_ChangesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscription_Scheduled_Changes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscription_Scheduled_Changes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subscription_Scheduled_Changes
    **/
    _count?: true | Subscription_Scheduled_ChangesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Subscription_Scheduled_ChangesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Subscription_Scheduled_ChangesMaxAggregateInputType
  }

  export type GetSubscription_Scheduled_ChangesAggregateType<T extends Subscription_Scheduled_ChangesAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscription_Scheduled_Changes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscription_Scheduled_Changes[P]>
      : GetScalarType<T[P], AggregateSubscription_Scheduled_Changes[P]>
  }




  export type Subscription_Scheduled_ChangesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Subscription_Scheduled_ChangesWhereInput
    orderBy?: Subscription_Scheduled_ChangesOrderByWithAggregationInput | Subscription_Scheduled_ChangesOrderByWithAggregationInput[]
    by: Subscription_Scheduled_ChangesScalarFieldEnum[] | Subscription_Scheduled_ChangesScalarFieldEnum
    having?: Subscription_Scheduled_ChangesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Subscription_Scheduled_ChangesCountAggregateInputType | true
    _min?: Subscription_Scheduled_ChangesMinAggregateInputType
    _max?: Subscription_Scheduled_ChangesMaxAggregateInputType
  }

  export type Subscription_Scheduled_ChangesGroupByOutputType = {
    id: string
    subscription_id: string
    action: $Enums.ScheduledChangeAction
    effective_at: Date
    resumes_at: Date | null
    status: $Enums.ScheduledChangesStatus
    _count: Subscription_Scheduled_ChangesCountAggregateOutputType | null
    _min: Subscription_Scheduled_ChangesMinAggregateOutputType | null
    _max: Subscription_Scheduled_ChangesMaxAggregateOutputType | null
  }

  type GetSubscription_Scheduled_ChangesGroupByPayload<T extends Subscription_Scheduled_ChangesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Subscription_Scheduled_ChangesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Subscription_Scheduled_ChangesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Subscription_Scheduled_ChangesGroupByOutputType[P]>
            : GetScalarType<T[P], Subscription_Scheduled_ChangesGroupByOutputType[P]>
        }
      >
    >


  export type Subscription_Scheduled_ChangesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscription_id?: boolean
    action?: boolean
    effective_at?: boolean
    resumes_at?: boolean
    status?: boolean
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription_Scheduled_Changes"]>

  export type Subscription_Scheduled_ChangesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscription_id?: boolean
    action?: boolean
    effective_at?: boolean
    resumes_at?: boolean
    status?: boolean
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription_Scheduled_Changes"]>


  export type Subscription_Scheduled_ChangesSelectScalar = {
    id?: boolean
    subscription_id?: boolean
    action?: boolean
    effective_at?: boolean
    resumes_at?: boolean
    status?: boolean
  }

  export type Subscription_Scheduled_ChangesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "subscription_id" | "action" | "effective_at" | "resumes_at" | "status", ExtArgs["result"]["subscription_Scheduled_Changes"]>
  export type Subscription_Scheduled_ChangesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
  }
  export type Subscription_Scheduled_ChangesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
  }

  export type $Subscription_Scheduled_ChangesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Subscription_Scheduled_Changes"
    objects: {
      subscription: Prisma.$SubscriptionsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      subscription_id: string
      action: $Enums.ScheduledChangeAction
      effective_at: Date
      resumes_at: Date | null
      status: $Enums.ScheduledChangesStatus
    }, ExtArgs["result"]["subscription_Scheduled_Changes"]>
    composites: {}
  }

  type Subscription_Scheduled_ChangesGetPayload<S extends boolean | null | undefined | Subscription_Scheduled_ChangesDefaultArgs> = $Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload, S>

  type Subscription_Scheduled_ChangesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Subscription_Scheduled_ChangesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Subscription_Scheduled_ChangesCountAggregateInputType | true
    }

  export interface Subscription_Scheduled_ChangesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Subscription_Scheduled_Changes'], meta: { name: 'Subscription_Scheduled_Changes' } }
    /**
     * Find zero or one Subscription_Scheduled_Changes that matches the filter.
     * @param {Subscription_Scheduled_ChangesFindUniqueArgs} args - Arguments to find a Subscription_Scheduled_Changes
     * @example
     * // Get one Subscription_Scheduled_Changes
     * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Subscription_Scheduled_ChangesFindUniqueArgs>(args: SelectSubset<T, Subscription_Scheduled_ChangesFindUniqueArgs<ExtArgs>>): Prisma__Subscription_Scheduled_ChangesClient<$Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Subscription_Scheduled_Changes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Subscription_Scheduled_ChangesFindUniqueOrThrowArgs} args - Arguments to find a Subscription_Scheduled_Changes
     * @example
     * // Get one Subscription_Scheduled_Changes
     * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Subscription_Scheduled_ChangesFindUniqueOrThrowArgs>(args: SelectSubset<T, Subscription_Scheduled_ChangesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Subscription_Scheduled_ChangesClient<$Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Subscription_Scheduled_Changes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subscription_Scheduled_ChangesFindFirstArgs} args - Arguments to find a Subscription_Scheduled_Changes
     * @example
     * // Get one Subscription_Scheduled_Changes
     * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Subscription_Scheduled_ChangesFindFirstArgs>(args?: SelectSubset<T, Subscription_Scheduled_ChangesFindFirstArgs<ExtArgs>>): Prisma__Subscription_Scheduled_ChangesClient<$Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Subscription_Scheduled_Changes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subscription_Scheduled_ChangesFindFirstOrThrowArgs} args - Arguments to find a Subscription_Scheduled_Changes
     * @example
     * // Get one Subscription_Scheduled_Changes
     * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Subscription_Scheduled_ChangesFindFirstOrThrowArgs>(args?: SelectSubset<T, Subscription_Scheduled_ChangesFindFirstOrThrowArgs<ExtArgs>>): Prisma__Subscription_Scheduled_ChangesClient<$Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Subscription_Scheduled_Changes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subscription_Scheduled_ChangesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscription_Scheduled_Changes
     * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.findMany()
     * 
     * // Get first 10 Subscription_Scheduled_Changes
     * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscription_Scheduled_ChangesWithIdOnly = await prisma.subscription_Scheduled_Changes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Subscription_Scheduled_ChangesFindManyArgs>(args?: SelectSubset<T, Subscription_Scheduled_ChangesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Subscription_Scheduled_Changes.
     * @param {Subscription_Scheduled_ChangesCreateArgs} args - Arguments to create a Subscription_Scheduled_Changes.
     * @example
     * // Create one Subscription_Scheduled_Changes
     * const Subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.create({
     *   data: {
     *     // ... data to create a Subscription_Scheduled_Changes
     *   }
     * })
     * 
     */
    create<T extends Subscription_Scheduled_ChangesCreateArgs>(args: SelectSubset<T, Subscription_Scheduled_ChangesCreateArgs<ExtArgs>>): Prisma__Subscription_Scheduled_ChangesClient<$Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Subscription_Scheduled_Changes.
     * @param {Subscription_Scheduled_ChangesCreateManyArgs} args - Arguments to create many Subscription_Scheduled_Changes.
     * @example
     * // Create many Subscription_Scheduled_Changes
     * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Subscription_Scheduled_ChangesCreateManyArgs>(args?: SelectSubset<T, Subscription_Scheduled_ChangesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subscription_Scheduled_Changes and returns the data saved in the database.
     * @param {Subscription_Scheduled_ChangesCreateManyAndReturnArgs} args - Arguments to create many Subscription_Scheduled_Changes.
     * @example
     * // Create many Subscription_Scheduled_Changes
     * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subscription_Scheduled_Changes and only return the `id`
     * const subscription_Scheduled_ChangesWithIdOnly = await prisma.subscription_Scheduled_Changes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Subscription_Scheduled_ChangesCreateManyAndReturnArgs>(args?: SelectSubset<T, Subscription_Scheduled_ChangesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Subscription_Scheduled_Changes.
     * @param {Subscription_Scheduled_ChangesDeleteArgs} args - Arguments to delete one Subscription_Scheduled_Changes.
     * @example
     * // Delete one Subscription_Scheduled_Changes
     * const Subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.delete({
     *   where: {
     *     // ... filter to delete one Subscription_Scheduled_Changes
     *   }
     * })
     * 
     */
    delete<T extends Subscription_Scheduled_ChangesDeleteArgs>(args: SelectSubset<T, Subscription_Scheduled_ChangesDeleteArgs<ExtArgs>>): Prisma__Subscription_Scheduled_ChangesClient<$Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Subscription_Scheduled_Changes.
     * @param {Subscription_Scheduled_ChangesUpdateArgs} args - Arguments to update one Subscription_Scheduled_Changes.
     * @example
     * // Update one Subscription_Scheduled_Changes
     * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Subscription_Scheduled_ChangesUpdateArgs>(args: SelectSubset<T, Subscription_Scheduled_ChangesUpdateArgs<ExtArgs>>): Prisma__Subscription_Scheduled_ChangesClient<$Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Subscription_Scheduled_Changes.
     * @param {Subscription_Scheduled_ChangesDeleteManyArgs} args - Arguments to filter Subscription_Scheduled_Changes to delete.
     * @example
     * // Delete a few Subscription_Scheduled_Changes
     * const { count } = await prisma.subscription_Scheduled_Changes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Subscription_Scheduled_ChangesDeleteManyArgs>(args?: SelectSubset<T, Subscription_Scheduled_ChangesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscription_Scheduled_Changes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subscription_Scheduled_ChangesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscription_Scheduled_Changes
     * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Subscription_Scheduled_ChangesUpdateManyArgs>(args: SelectSubset<T, Subscription_Scheduled_ChangesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Subscription_Scheduled_Changes.
     * @param {Subscription_Scheduled_ChangesUpsertArgs} args - Arguments to update or create a Subscription_Scheduled_Changes.
     * @example
     * // Update or create a Subscription_Scheduled_Changes
     * const subscription_Scheduled_Changes = await prisma.subscription_Scheduled_Changes.upsert({
     *   create: {
     *     // ... data to create a Subscription_Scheduled_Changes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscription_Scheduled_Changes we want to update
     *   }
     * })
     */
    upsert<T extends Subscription_Scheduled_ChangesUpsertArgs>(args: SelectSubset<T, Subscription_Scheduled_ChangesUpsertArgs<ExtArgs>>): Prisma__Subscription_Scheduled_ChangesClient<$Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Subscription_Scheduled_Changes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subscription_Scheduled_ChangesCountArgs} args - Arguments to filter Subscription_Scheduled_Changes to count.
     * @example
     * // Count the number of Subscription_Scheduled_Changes
     * const count = await prisma.subscription_Scheduled_Changes.count({
     *   where: {
     *     // ... the filter for the Subscription_Scheduled_Changes we want to count
     *   }
     * })
    **/
    count<T extends Subscription_Scheduled_ChangesCountArgs>(
      args?: Subset<T, Subscription_Scheduled_ChangesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Subscription_Scheduled_ChangesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscription_Scheduled_Changes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subscription_Scheduled_ChangesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Subscription_Scheduled_ChangesAggregateArgs>(args: Subset<T, Subscription_Scheduled_ChangesAggregateArgs>): Prisma.PrismaPromise<GetSubscription_Scheduled_ChangesAggregateType<T>>

    /**
     * Group by Subscription_Scheduled_Changes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subscription_Scheduled_ChangesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Subscription_Scheduled_ChangesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Subscription_Scheduled_ChangesGroupByArgs['orderBy'] }
        : { orderBy?: Subscription_Scheduled_ChangesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Subscription_Scheduled_ChangesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscription_Scheduled_ChangesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Subscription_Scheduled_Changes model
   */
  readonly fields: Subscription_Scheduled_ChangesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Subscription_Scheduled_Changes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Subscription_Scheduled_ChangesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    subscription<T extends SubscriptionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SubscriptionsDefaultArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Subscription_Scheduled_Changes model
   */ 
  interface Subscription_Scheduled_ChangesFieldRefs {
    readonly id: FieldRef<"Subscription_Scheduled_Changes", 'String'>
    readonly subscription_id: FieldRef<"Subscription_Scheduled_Changes", 'String'>
    readonly action: FieldRef<"Subscription_Scheduled_Changes", 'ScheduledChangeAction'>
    readonly effective_at: FieldRef<"Subscription_Scheduled_Changes", 'DateTime'>
    readonly resumes_at: FieldRef<"Subscription_Scheduled_Changes", 'DateTime'>
    readonly status: FieldRef<"Subscription_Scheduled_Changes", 'ScheduledChangesStatus'>
  }
    

  // Custom InputTypes
  /**
   * Subscription_Scheduled_Changes findUnique
   */
  export type Subscription_Scheduled_ChangesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesInclude<ExtArgs> | null
    /**
     * Filter, which Subscription_Scheduled_Changes to fetch.
     */
    where: Subscription_Scheduled_ChangesWhereUniqueInput
  }

  /**
   * Subscription_Scheduled_Changes findUniqueOrThrow
   */
  export type Subscription_Scheduled_ChangesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesInclude<ExtArgs> | null
    /**
     * Filter, which Subscription_Scheduled_Changes to fetch.
     */
    where: Subscription_Scheduled_ChangesWhereUniqueInput
  }

  /**
   * Subscription_Scheduled_Changes findFirst
   */
  export type Subscription_Scheduled_ChangesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesInclude<ExtArgs> | null
    /**
     * Filter, which Subscription_Scheduled_Changes to fetch.
     */
    where?: Subscription_Scheduled_ChangesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscription_Scheduled_Changes to fetch.
     */
    orderBy?: Subscription_Scheduled_ChangesOrderByWithRelationInput | Subscription_Scheduled_ChangesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscription_Scheduled_Changes.
     */
    cursor?: Subscription_Scheduled_ChangesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscription_Scheduled_Changes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscription_Scheduled_Changes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscription_Scheduled_Changes.
     */
    distinct?: Subscription_Scheduled_ChangesScalarFieldEnum | Subscription_Scheduled_ChangesScalarFieldEnum[]
  }

  /**
   * Subscription_Scheduled_Changes findFirstOrThrow
   */
  export type Subscription_Scheduled_ChangesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesInclude<ExtArgs> | null
    /**
     * Filter, which Subscription_Scheduled_Changes to fetch.
     */
    where?: Subscription_Scheduled_ChangesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscription_Scheduled_Changes to fetch.
     */
    orderBy?: Subscription_Scheduled_ChangesOrderByWithRelationInput | Subscription_Scheduled_ChangesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscription_Scheduled_Changes.
     */
    cursor?: Subscription_Scheduled_ChangesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscription_Scheduled_Changes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscription_Scheduled_Changes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscription_Scheduled_Changes.
     */
    distinct?: Subscription_Scheduled_ChangesScalarFieldEnum | Subscription_Scheduled_ChangesScalarFieldEnum[]
  }

  /**
   * Subscription_Scheduled_Changes findMany
   */
  export type Subscription_Scheduled_ChangesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesInclude<ExtArgs> | null
    /**
     * Filter, which Subscription_Scheduled_Changes to fetch.
     */
    where?: Subscription_Scheduled_ChangesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscription_Scheduled_Changes to fetch.
     */
    orderBy?: Subscription_Scheduled_ChangesOrderByWithRelationInput | Subscription_Scheduled_ChangesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subscription_Scheduled_Changes.
     */
    cursor?: Subscription_Scheduled_ChangesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscription_Scheduled_Changes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscription_Scheduled_Changes.
     */
    skip?: number
    distinct?: Subscription_Scheduled_ChangesScalarFieldEnum | Subscription_Scheduled_ChangesScalarFieldEnum[]
  }

  /**
   * Subscription_Scheduled_Changes create
   */
  export type Subscription_Scheduled_ChangesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesInclude<ExtArgs> | null
    /**
     * The data needed to create a Subscription_Scheduled_Changes.
     */
    data: XOR<Subscription_Scheduled_ChangesCreateInput, Subscription_Scheduled_ChangesUncheckedCreateInput>
  }

  /**
   * Subscription_Scheduled_Changes createMany
   */
  export type Subscription_Scheduled_ChangesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Subscription_Scheduled_Changes.
     */
    data: Subscription_Scheduled_ChangesCreateManyInput | Subscription_Scheduled_ChangesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Subscription_Scheduled_Changes createManyAndReturn
   */
  export type Subscription_Scheduled_ChangesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * The data used to create many Subscription_Scheduled_Changes.
     */
    data: Subscription_Scheduled_ChangesCreateManyInput | Subscription_Scheduled_ChangesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Subscription_Scheduled_Changes update
   */
  export type Subscription_Scheduled_ChangesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesInclude<ExtArgs> | null
    /**
     * The data needed to update a Subscription_Scheduled_Changes.
     */
    data: XOR<Subscription_Scheduled_ChangesUpdateInput, Subscription_Scheduled_ChangesUncheckedUpdateInput>
    /**
     * Choose, which Subscription_Scheduled_Changes to update.
     */
    where: Subscription_Scheduled_ChangesWhereUniqueInput
  }

  /**
   * Subscription_Scheduled_Changes updateMany
   */
  export type Subscription_Scheduled_ChangesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Subscription_Scheduled_Changes.
     */
    data: XOR<Subscription_Scheduled_ChangesUpdateManyMutationInput, Subscription_Scheduled_ChangesUncheckedUpdateManyInput>
    /**
     * Filter which Subscription_Scheduled_Changes to update
     */
    where?: Subscription_Scheduled_ChangesWhereInput
  }

  /**
   * Subscription_Scheduled_Changes upsert
   */
  export type Subscription_Scheduled_ChangesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesInclude<ExtArgs> | null
    /**
     * The filter to search for the Subscription_Scheduled_Changes to update in case it exists.
     */
    where: Subscription_Scheduled_ChangesWhereUniqueInput
    /**
     * In case the Subscription_Scheduled_Changes found by the `where` argument doesn't exist, create a new Subscription_Scheduled_Changes with this data.
     */
    create: XOR<Subscription_Scheduled_ChangesCreateInput, Subscription_Scheduled_ChangesUncheckedCreateInput>
    /**
     * In case the Subscription_Scheduled_Changes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Subscription_Scheduled_ChangesUpdateInput, Subscription_Scheduled_ChangesUncheckedUpdateInput>
  }

  /**
   * Subscription_Scheduled_Changes delete
   */
  export type Subscription_Scheduled_ChangesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesInclude<ExtArgs> | null
    /**
     * Filter which Subscription_Scheduled_Changes to delete.
     */
    where: Subscription_Scheduled_ChangesWhereUniqueInput
  }

  /**
   * Subscription_Scheduled_Changes deleteMany
   */
  export type Subscription_Scheduled_ChangesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscription_Scheduled_Changes to delete
     */
    where?: Subscription_Scheduled_ChangesWhereInput
  }

  /**
   * Subscription_Scheduled_Changes without action
   */
  export type Subscription_Scheduled_ChangesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesInclude<ExtArgs> | null
  }


  /**
   * Model BillingDetails
   */

  export type AggregateBillingDetails = {
    _count: BillingDetailsCountAggregateOutputType | null
    _avg: BillingDetailsAvgAggregateOutputType | null
    _sum: BillingDetailsSumAggregateOutputType | null
    _min: BillingDetailsMinAggregateOutputType | null
    _max: BillingDetailsMaxAggregateOutputType | null
  }

  export type BillingDetailsAvgAggregateOutputType = {
    payment_frequency: number | null
  }

  export type BillingDetailsSumAggregateOutputType = {
    payment_frequency: number | null
  }

  export type BillingDetailsMinAggregateOutputType = {
    id: string | null
    subscription_id: string | null
    payment_interval: $Enums.BillingInterval | null
    payment_frequency: number | null
    enable_checkout: boolean | null
    purchase_order_number: string | null
    additional_information: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type BillingDetailsMaxAggregateOutputType = {
    id: string | null
    subscription_id: string | null
    payment_interval: $Enums.BillingInterval | null
    payment_frequency: number | null
    enable_checkout: boolean | null
    purchase_order_number: string | null
    additional_information: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type BillingDetailsCountAggregateOutputType = {
    id: number
    subscription_id: number
    payment_interval: number
    payment_frequency: number
    enable_checkout: number
    purchase_order_number: number
    additional_information: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type BillingDetailsAvgAggregateInputType = {
    payment_frequency?: true
  }

  export type BillingDetailsSumAggregateInputType = {
    payment_frequency?: true
  }

  export type BillingDetailsMinAggregateInputType = {
    id?: true
    subscription_id?: true
    payment_interval?: true
    payment_frequency?: true
    enable_checkout?: true
    purchase_order_number?: true
    additional_information?: true
    created_at?: true
    updated_at?: true
  }

  export type BillingDetailsMaxAggregateInputType = {
    id?: true
    subscription_id?: true
    payment_interval?: true
    payment_frequency?: true
    enable_checkout?: true
    purchase_order_number?: true
    additional_information?: true
    created_at?: true
    updated_at?: true
  }

  export type BillingDetailsCountAggregateInputType = {
    id?: true
    subscription_id?: true
    payment_interval?: true
    payment_frequency?: true
    enable_checkout?: true
    purchase_order_number?: true
    additional_information?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type BillingDetailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BillingDetails to aggregate.
     */
    where?: BillingDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BillingDetails to fetch.
     */
    orderBy?: BillingDetailsOrderByWithRelationInput | BillingDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BillingDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BillingDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BillingDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BillingDetails
    **/
    _count?: true | BillingDetailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BillingDetailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BillingDetailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BillingDetailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BillingDetailsMaxAggregateInputType
  }

  export type GetBillingDetailsAggregateType<T extends BillingDetailsAggregateArgs> = {
        [P in keyof T & keyof AggregateBillingDetails]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBillingDetails[P]>
      : GetScalarType<T[P], AggregateBillingDetails[P]>
  }




  export type BillingDetailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BillingDetailsWhereInput
    orderBy?: BillingDetailsOrderByWithAggregationInput | BillingDetailsOrderByWithAggregationInput[]
    by: BillingDetailsScalarFieldEnum[] | BillingDetailsScalarFieldEnum
    having?: BillingDetailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BillingDetailsCountAggregateInputType | true
    _avg?: BillingDetailsAvgAggregateInputType
    _sum?: BillingDetailsSumAggregateInputType
    _min?: BillingDetailsMinAggregateInputType
    _max?: BillingDetailsMaxAggregateInputType
  }

  export type BillingDetailsGroupByOutputType = {
    id: string
    subscription_id: string
    payment_interval: $Enums.BillingInterval
    payment_frequency: number
    enable_checkout: boolean
    purchase_order_number: string | null
    additional_information: string | null
    created_at: Date
    updated_at: Date
    _count: BillingDetailsCountAggregateOutputType | null
    _avg: BillingDetailsAvgAggregateOutputType | null
    _sum: BillingDetailsSumAggregateOutputType | null
    _min: BillingDetailsMinAggregateOutputType | null
    _max: BillingDetailsMaxAggregateOutputType | null
  }

  type GetBillingDetailsGroupByPayload<T extends BillingDetailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BillingDetailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BillingDetailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BillingDetailsGroupByOutputType[P]>
            : GetScalarType<T[P], BillingDetailsGroupByOutputType[P]>
        }
      >
    >


  export type BillingDetailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscription_id?: boolean
    payment_interval?: boolean
    payment_frequency?: boolean
    enable_checkout?: boolean
    purchase_order_number?: boolean
    additional_information?: boolean
    created_at?: boolean
    updated_at?: boolean
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["billingDetails"]>

  export type BillingDetailsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscription_id?: boolean
    payment_interval?: boolean
    payment_frequency?: boolean
    enable_checkout?: boolean
    purchase_order_number?: boolean
    additional_information?: boolean
    created_at?: boolean
    updated_at?: boolean
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["billingDetails"]>


  export type BillingDetailsSelectScalar = {
    id?: boolean
    subscription_id?: boolean
    payment_interval?: boolean
    payment_frequency?: boolean
    enable_checkout?: boolean
    purchase_order_number?: boolean
    additional_information?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type BillingDetailsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "subscription_id" | "payment_interval" | "payment_frequency" | "enable_checkout" | "purchase_order_number" | "additional_information" | "created_at" | "updated_at", ExtArgs["result"]["billingDetails"]>
  export type BillingDetailsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
  }
  export type BillingDetailsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription?: boolean | SubscriptionsDefaultArgs<ExtArgs>
  }

  export type $BillingDetailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BillingDetails"
    objects: {
      subscription: Prisma.$SubscriptionsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      subscription_id: string
      payment_interval: $Enums.BillingInterval
      payment_frequency: number
      enable_checkout: boolean
      purchase_order_number: string | null
      additional_information: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["billingDetails"]>
    composites: {}
  }

  type BillingDetailsGetPayload<S extends boolean | null | undefined | BillingDetailsDefaultArgs> = $Result.GetResult<Prisma.$BillingDetailsPayload, S>

  type BillingDetailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BillingDetailsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BillingDetailsCountAggregateInputType | true
    }

  export interface BillingDetailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BillingDetails'], meta: { name: 'BillingDetails' } }
    /**
     * Find zero or one BillingDetails that matches the filter.
     * @param {BillingDetailsFindUniqueArgs} args - Arguments to find a BillingDetails
     * @example
     * // Get one BillingDetails
     * const billingDetails = await prisma.billingDetails.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BillingDetailsFindUniqueArgs>(args: SelectSubset<T, BillingDetailsFindUniqueArgs<ExtArgs>>): Prisma__BillingDetailsClient<$Result.GetResult<Prisma.$BillingDetailsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one BillingDetails that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BillingDetailsFindUniqueOrThrowArgs} args - Arguments to find a BillingDetails
     * @example
     * // Get one BillingDetails
     * const billingDetails = await prisma.billingDetails.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BillingDetailsFindUniqueOrThrowArgs>(args: SelectSubset<T, BillingDetailsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BillingDetailsClient<$Result.GetResult<Prisma.$BillingDetailsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first BillingDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingDetailsFindFirstArgs} args - Arguments to find a BillingDetails
     * @example
     * // Get one BillingDetails
     * const billingDetails = await prisma.billingDetails.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BillingDetailsFindFirstArgs>(args?: SelectSubset<T, BillingDetailsFindFirstArgs<ExtArgs>>): Prisma__BillingDetailsClient<$Result.GetResult<Prisma.$BillingDetailsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first BillingDetails that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingDetailsFindFirstOrThrowArgs} args - Arguments to find a BillingDetails
     * @example
     * // Get one BillingDetails
     * const billingDetails = await prisma.billingDetails.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BillingDetailsFindFirstOrThrowArgs>(args?: SelectSubset<T, BillingDetailsFindFirstOrThrowArgs<ExtArgs>>): Prisma__BillingDetailsClient<$Result.GetResult<Prisma.$BillingDetailsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more BillingDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingDetailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BillingDetails
     * const billingDetails = await prisma.billingDetails.findMany()
     * 
     * // Get first 10 BillingDetails
     * const billingDetails = await prisma.billingDetails.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const billingDetailsWithIdOnly = await prisma.billingDetails.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BillingDetailsFindManyArgs>(args?: SelectSubset<T, BillingDetailsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BillingDetailsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a BillingDetails.
     * @param {BillingDetailsCreateArgs} args - Arguments to create a BillingDetails.
     * @example
     * // Create one BillingDetails
     * const BillingDetails = await prisma.billingDetails.create({
     *   data: {
     *     // ... data to create a BillingDetails
     *   }
     * })
     * 
     */
    create<T extends BillingDetailsCreateArgs>(args: SelectSubset<T, BillingDetailsCreateArgs<ExtArgs>>): Prisma__BillingDetailsClient<$Result.GetResult<Prisma.$BillingDetailsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many BillingDetails.
     * @param {BillingDetailsCreateManyArgs} args - Arguments to create many BillingDetails.
     * @example
     * // Create many BillingDetails
     * const billingDetails = await prisma.billingDetails.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BillingDetailsCreateManyArgs>(args?: SelectSubset<T, BillingDetailsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BillingDetails and returns the data saved in the database.
     * @param {BillingDetailsCreateManyAndReturnArgs} args - Arguments to create many BillingDetails.
     * @example
     * // Create many BillingDetails
     * const billingDetails = await prisma.billingDetails.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BillingDetails and only return the `id`
     * const billingDetailsWithIdOnly = await prisma.billingDetails.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BillingDetailsCreateManyAndReturnArgs>(args?: SelectSubset<T, BillingDetailsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BillingDetailsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a BillingDetails.
     * @param {BillingDetailsDeleteArgs} args - Arguments to delete one BillingDetails.
     * @example
     * // Delete one BillingDetails
     * const BillingDetails = await prisma.billingDetails.delete({
     *   where: {
     *     // ... filter to delete one BillingDetails
     *   }
     * })
     * 
     */
    delete<T extends BillingDetailsDeleteArgs>(args: SelectSubset<T, BillingDetailsDeleteArgs<ExtArgs>>): Prisma__BillingDetailsClient<$Result.GetResult<Prisma.$BillingDetailsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one BillingDetails.
     * @param {BillingDetailsUpdateArgs} args - Arguments to update one BillingDetails.
     * @example
     * // Update one BillingDetails
     * const billingDetails = await prisma.billingDetails.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BillingDetailsUpdateArgs>(args: SelectSubset<T, BillingDetailsUpdateArgs<ExtArgs>>): Prisma__BillingDetailsClient<$Result.GetResult<Prisma.$BillingDetailsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more BillingDetails.
     * @param {BillingDetailsDeleteManyArgs} args - Arguments to filter BillingDetails to delete.
     * @example
     * // Delete a few BillingDetails
     * const { count } = await prisma.billingDetails.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BillingDetailsDeleteManyArgs>(args?: SelectSubset<T, BillingDetailsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BillingDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingDetailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BillingDetails
     * const billingDetails = await prisma.billingDetails.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BillingDetailsUpdateManyArgs>(args: SelectSubset<T, BillingDetailsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BillingDetails.
     * @param {BillingDetailsUpsertArgs} args - Arguments to update or create a BillingDetails.
     * @example
     * // Update or create a BillingDetails
     * const billingDetails = await prisma.billingDetails.upsert({
     *   create: {
     *     // ... data to create a BillingDetails
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BillingDetails we want to update
     *   }
     * })
     */
    upsert<T extends BillingDetailsUpsertArgs>(args: SelectSubset<T, BillingDetailsUpsertArgs<ExtArgs>>): Prisma__BillingDetailsClient<$Result.GetResult<Prisma.$BillingDetailsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of BillingDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingDetailsCountArgs} args - Arguments to filter BillingDetails to count.
     * @example
     * // Count the number of BillingDetails
     * const count = await prisma.billingDetails.count({
     *   where: {
     *     // ... the filter for the BillingDetails we want to count
     *   }
     * })
    **/
    count<T extends BillingDetailsCountArgs>(
      args?: Subset<T, BillingDetailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BillingDetailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BillingDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingDetailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BillingDetailsAggregateArgs>(args: Subset<T, BillingDetailsAggregateArgs>): Prisma.PrismaPromise<GetBillingDetailsAggregateType<T>>

    /**
     * Group by BillingDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BillingDetailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BillingDetailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BillingDetailsGroupByArgs['orderBy'] }
        : { orderBy?: BillingDetailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BillingDetailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBillingDetailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BillingDetails model
   */
  readonly fields: BillingDetailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BillingDetails.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BillingDetailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    subscription<T extends SubscriptionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SubscriptionsDefaultArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BillingDetails model
   */ 
  interface BillingDetailsFieldRefs {
    readonly id: FieldRef<"BillingDetails", 'String'>
    readonly subscription_id: FieldRef<"BillingDetails", 'String'>
    readonly payment_interval: FieldRef<"BillingDetails", 'BillingInterval'>
    readonly payment_frequency: FieldRef<"BillingDetails", 'Int'>
    readonly enable_checkout: FieldRef<"BillingDetails", 'Boolean'>
    readonly purchase_order_number: FieldRef<"BillingDetails", 'String'>
    readonly additional_information: FieldRef<"BillingDetails", 'String'>
    readonly created_at: FieldRef<"BillingDetails", 'DateTime'>
    readonly updated_at: FieldRef<"BillingDetails", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BillingDetails findUnique
   */
  export type BillingDetailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsInclude<ExtArgs> | null
    /**
     * Filter, which BillingDetails to fetch.
     */
    where: BillingDetailsWhereUniqueInput
  }

  /**
   * BillingDetails findUniqueOrThrow
   */
  export type BillingDetailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsInclude<ExtArgs> | null
    /**
     * Filter, which BillingDetails to fetch.
     */
    where: BillingDetailsWhereUniqueInput
  }

  /**
   * BillingDetails findFirst
   */
  export type BillingDetailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsInclude<ExtArgs> | null
    /**
     * Filter, which BillingDetails to fetch.
     */
    where?: BillingDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BillingDetails to fetch.
     */
    orderBy?: BillingDetailsOrderByWithRelationInput | BillingDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BillingDetails.
     */
    cursor?: BillingDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BillingDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BillingDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BillingDetails.
     */
    distinct?: BillingDetailsScalarFieldEnum | BillingDetailsScalarFieldEnum[]
  }

  /**
   * BillingDetails findFirstOrThrow
   */
  export type BillingDetailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsInclude<ExtArgs> | null
    /**
     * Filter, which BillingDetails to fetch.
     */
    where?: BillingDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BillingDetails to fetch.
     */
    orderBy?: BillingDetailsOrderByWithRelationInput | BillingDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BillingDetails.
     */
    cursor?: BillingDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BillingDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BillingDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BillingDetails.
     */
    distinct?: BillingDetailsScalarFieldEnum | BillingDetailsScalarFieldEnum[]
  }

  /**
   * BillingDetails findMany
   */
  export type BillingDetailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsInclude<ExtArgs> | null
    /**
     * Filter, which BillingDetails to fetch.
     */
    where?: BillingDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BillingDetails to fetch.
     */
    orderBy?: BillingDetailsOrderByWithRelationInput | BillingDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BillingDetails.
     */
    cursor?: BillingDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BillingDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BillingDetails.
     */
    skip?: number
    distinct?: BillingDetailsScalarFieldEnum | BillingDetailsScalarFieldEnum[]
  }

  /**
   * BillingDetails create
   */
  export type BillingDetailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsInclude<ExtArgs> | null
    /**
     * The data needed to create a BillingDetails.
     */
    data: XOR<BillingDetailsCreateInput, BillingDetailsUncheckedCreateInput>
  }

  /**
   * BillingDetails createMany
   */
  export type BillingDetailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BillingDetails.
     */
    data: BillingDetailsCreateManyInput | BillingDetailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BillingDetails createManyAndReturn
   */
  export type BillingDetailsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * The data used to create many BillingDetails.
     */
    data: BillingDetailsCreateManyInput | BillingDetailsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BillingDetails update
   */
  export type BillingDetailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsInclude<ExtArgs> | null
    /**
     * The data needed to update a BillingDetails.
     */
    data: XOR<BillingDetailsUpdateInput, BillingDetailsUncheckedUpdateInput>
    /**
     * Choose, which BillingDetails to update.
     */
    where: BillingDetailsWhereUniqueInput
  }

  /**
   * BillingDetails updateMany
   */
  export type BillingDetailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BillingDetails.
     */
    data: XOR<BillingDetailsUpdateManyMutationInput, BillingDetailsUncheckedUpdateManyInput>
    /**
     * Filter which BillingDetails to update
     */
    where?: BillingDetailsWhereInput
  }

  /**
   * BillingDetails upsert
   */
  export type BillingDetailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsInclude<ExtArgs> | null
    /**
     * The filter to search for the BillingDetails to update in case it exists.
     */
    where: BillingDetailsWhereUniqueInput
    /**
     * In case the BillingDetails found by the `where` argument doesn't exist, create a new BillingDetails with this data.
     */
    create: XOR<BillingDetailsCreateInput, BillingDetailsUncheckedCreateInput>
    /**
     * In case the BillingDetails was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BillingDetailsUpdateInput, BillingDetailsUncheckedUpdateInput>
  }

  /**
   * BillingDetails delete
   */
  export type BillingDetailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsInclude<ExtArgs> | null
    /**
     * Filter which BillingDetails to delete.
     */
    where: BillingDetailsWhereUniqueInput
  }

  /**
   * BillingDetails deleteMany
   */
  export type BillingDetailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BillingDetails to delete
     */
    where?: BillingDetailsWhereInput
  }

  /**
   * BillingDetails without action
   */
  export type BillingDetailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsInclude<ExtArgs> | null
  }


  /**
   * Model Subscriptions
   */

  export type AggregateSubscriptions = {
    _count: SubscriptionsCountAggregateOutputType | null
    _avg: SubscriptionsAvgAggregateOutputType | null
    _sum: SubscriptionsSumAggregateOutputType | null
    _min: SubscriptionsMinAggregateOutputType | null
    _max: SubscriptionsMaxAggregateOutputType | null
  }

  export type SubscriptionsAvgAggregateOutputType = {
    billing_cycle_frequency: number | null
  }

  export type SubscriptionsSumAggregateOutputType = {
    billing_cycle_frequency: number | null
  }

  export type SubscriptionsMinAggregateOutputType = {
    id: string | null
    status: $Enums.SubscriptionsStatus | null
    currency_code: string | null
    created_at: Date | null
    updated_at: Date | null
    started_at: Date | null
    first_billed_at: Date | null
    next_billed_at: Date | null
    paused_at: Date | null
    canceled_at: Date | null
    current_period_starts: Date | null
    current_period_ends: Date | null
    billing_cycle_interval: $Enums.BillingInterval | null
    billing_cycle_frequency: number | null
    update_payment_method_url: string | null
    cancel_url: string | null
    customer_id: string | null
    address_id: string | null
    project_id: string | null
    discount_id: string | null
    collection_mode: $Enums.CollectionMode | null
  }

  export type SubscriptionsMaxAggregateOutputType = {
    id: string | null
    status: $Enums.SubscriptionsStatus | null
    currency_code: string | null
    created_at: Date | null
    updated_at: Date | null
    started_at: Date | null
    first_billed_at: Date | null
    next_billed_at: Date | null
    paused_at: Date | null
    canceled_at: Date | null
    current_period_starts: Date | null
    current_period_ends: Date | null
    billing_cycle_interval: $Enums.BillingInterval | null
    billing_cycle_frequency: number | null
    update_payment_method_url: string | null
    cancel_url: string | null
    customer_id: string | null
    address_id: string | null
    project_id: string | null
    discount_id: string | null
    collection_mode: $Enums.CollectionMode | null
  }

  export type SubscriptionsCountAggregateOutputType = {
    id: number
    status: number
    currency_code: number
    created_at: number
    updated_at: number
    started_at: number
    first_billed_at: number
    next_billed_at: number
    paused_at: number
    canceled_at: number
    current_period_starts: number
    current_period_ends: number
    billing_cycle_interval: number
    billing_cycle_frequency: number
    update_payment_method_url: number
    cancel_url: number
    customer_id: number
    address_id: number
    project_id: number
    discount_id: number
    collection_mode: number
    _all: number
  }


  export type SubscriptionsAvgAggregateInputType = {
    billing_cycle_frequency?: true
  }

  export type SubscriptionsSumAggregateInputType = {
    billing_cycle_frequency?: true
  }

  export type SubscriptionsMinAggregateInputType = {
    id?: true
    status?: true
    currency_code?: true
    created_at?: true
    updated_at?: true
    started_at?: true
    first_billed_at?: true
    next_billed_at?: true
    paused_at?: true
    canceled_at?: true
    current_period_starts?: true
    current_period_ends?: true
    billing_cycle_interval?: true
    billing_cycle_frequency?: true
    update_payment_method_url?: true
    cancel_url?: true
    customer_id?: true
    address_id?: true
    project_id?: true
    discount_id?: true
    collection_mode?: true
  }

  export type SubscriptionsMaxAggregateInputType = {
    id?: true
    status?: true
    currency_code?: true
    created_at?: true
    updated_at?: true
    started_at?: true
    first_billed_at?: true
    next_billed_at?: true
    paused_at?: true
    canceled_at?: true
    current_period_starts?: true
    current_period_ends?: true
    billing_cycle_interval?: true
    billing_cycle_frequency?: true
    update_payment_method_url?: true
    cancel_url?: true
    customer_id?: true
    address_id?: true
    project_id?: true
    discount_id?: true
    collection_mode?: true
  }

  export type SubscriptionsCountAggregateInputType = {
    id?: true
    status?: true
    currency_code?: true
    created_at?: true
    updated_at?: true
    started_at?: true
    first_billed_at?: true
    next_billed_at?: true
    paused_at?: true
    canceled_at?: true
    current_period_starts?: true
    current_period_ends?: true
    billing_cycle_interval?: true
    billing_cycle_frequency?: true
    update_payment_method_url?: true
    cancel_url?: true
    customer_id?: true
    address_id?: true
    project_id?: true
    discount_id?: true
    collection_mode?: true
    _all?: true
  }

  export type SubscriptionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscriptions to aggregate.
     */
    where?: SubscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionsOrderByWithRelationInput | SubscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subscriptions
    **/
    _count?: true | SubscriptionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubscriptionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubscriptionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscriptionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscriptionsMaxAggregateInputType
  }

  export type GetSubscriptionsAggregateType<T extends SubscriptionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscriptions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscriptions[P]>
      : GetScalarType<T[P], AggregateSubscriptions[P]>
  }




  export type SubscriptionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionsWhereInput
    orderBy?: SubscriptionsOrderByWithAggregationInput | SubscriptionsOrderByWithAggregationInput[]
    by: SubscriptionsScalarFieldEnum[] | SubscriptionsScalarFieldEnum
    having?: SubscriptionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscriptionsCountAggregateInputType | true
    _avg?: SubscriptionsAvgAggregateInputType
    _sum?: SubscriptionsSumAggregateInputType
    _min?: SubscriptionsMinAggregateInputType
    _max?: SubscriptionsMaxAggregateInputType
  }

  export type SubscriptionsGroupByOutputType = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at: Date
    updated_at: Date
    started_at: Date | null
    first_billed_at: Date | null
    next_billed_at: Date | null
    paused_at: Date | null
    canceled_at: Date | null
    current_period_starts: Date | null
    current_period_ends: Date | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url: string | null
    cancel_url: string | null
    customer_id: string
    address_id: string
    project_id: string
    discount_id: string | null
    collection_mode: $Enums.CollectionMode
    _count: SubscriptionsCountAggregateOutputType | null
    _avg: SubscriptionsAvgAggregateOutputType | null
    _sum: SubscriptionsSumAggregateOutputType | null
    _min: SubscriptionsMinAggregateOutputType | null
    _max: SubscriptionsMaxAggregateOutputType | null
  }

  type GetSubscriptionsGroupByPayload<T extends SubscriptionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscriptionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscriptionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscriptionsGroupByOutputType[P]>
            : GetScalarType<T[P], SubscriptionsGroupByOutputType[P]>
        }
      >
    >


  export type SubscriptionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    currency_code?: boolean
    created_at?: boolean
    updated_at?: boolean
    started_at?: boolean
    first_billed_at?: boolean
    next_billed_at?: boolean
    paused_at?: boolean
    canceled_at?: boolean
    current_period_starts?: boolean
    current_period_ends?: boolean
    billing_cycle_interval?: boolean
    billing_cycle_frequency?: boolean
    update_payment_method_url?: boolean
    cancel_url?: boolean
    customer_id?: boolean
    address_id?: boolean
    project_id?: boolean
    discount_id?: boolean
    collection_mode?: boolean
    customer?: boolean | CustomersDefaultArgs<ExtArgs>
    address?: boolean | AddressesDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
    discount?: boolean | Subscriptions$discountArgs<ExtArgs>
    Subscription_Items?: boolean | Subscriptions$Subscription_ItemsArgs<ExtArgs>
    Subscription_Scheduled_Changes?: boolean | Subscriptions$Subscription_Scheduled_ChangesArgs<ExtArgs>
    BillingDetails?: boolean | Subscriptions$BillingDetailsArgs<ExtArgs>
    transaction?: boolean | Subscriptions$transactionArgs<ExtArgs>
    _count?: boolean | SubscriptionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscriptions"]>

  export type SubscriptionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    currency_code?: boolean
    created_at?: boolean
    updated_at?: boolean
    started_at?: boolean
    first_billed_at?: boolean
    next_billed_at?: boolean
    paused_at?: boolean
    canceled_at?: boolean
    current_period_starts?: boolean
    current_period_ends?: boolean
    billing_cycle_interval?: boolean
    billing_cycle_frequency?: boolean
    update_payment_method_url?: boolean
    cancel_url?: boolean
    customer_id?: boolean
    address_id?: boolean
    project_id?: boolean
    discount_id?: boolean
    collection_mode?: boolean
    customer?: boolean | CustomersDefaultArgs<ExtArgs>
    address?: boolean | AddressesDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
    discount?: boolean | Subscriptions$discountArgs<ExtArgs>
  }, ExtArgs["result"]["subscriptions"]>


  export type SubscriptionsSelectScalar = {
    id?: boolean
    status?: boolean
    currency_code?: boolean
    created_at?: boolean
    updated_at?: boolean
    started_at?: boolean
    first_billed_at?: boolean
    next_billed_at?: boolean
    paused_at?: boolean
    canceled_at?: boolean
    current_period_starts?: boolean
    current_period_ends?: boolean
    billing_cycle_interval?: boolean
    billing_cycle_frequency?: boolean
    update_payment_method_url?: boolean
    cancel_url?: boolean
    customer_id?: boolean
    address_id?: boolean
    project_id?: boolean
    discount_id?: boolean
    collection_mode?: boolean
  }

  export type SubscriptionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "currency_code" | "created_at" | "updated_at" | "started_at" | "first_billed_at" | "next_billed_at" | "paused_at" | "canceled_at" | "current_period_starts" | "current_period_ends" | "billing_cycle_interval" | "billing_cycle_frequency" | "update_payment_method_url" | "cancel_url" | "customer_id" | "address_id" | "project_id" | "discount_id" | "collection_mode", ExtArgs["result"]["subscriptions"]>
  export type SubscriptionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomersDefaultArgs<ExtArgs>
    address?: boolean | AddressesDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
    discount?: boolean | Subscriptions$discountArgs<ExtArgs>
    Subscription_Items?: boolean | Subscriptions$Subscription_ItemsArgs<ExtArgs>
    Subscription_Scheduled_Changes?: boolean | Subscriptions$Subscription_Scheduled_ChangesArgs<ExtArgs>
    BillingDetails?: boolean | Subscriptions$BillingDetailsArgs<ExtArgs>
    transaction?: boolean | Subscriptions$transactionArgs<ExtArgs>
    _count?: boolean | SubscriptionsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SubscriptionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomersDefaultArgs<ExtArgs>
    address?: boolean | AddressesDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
    discount?: boolean | Subscriptions$discountArgs<ExtArgs>
  }

  export type $SubscriptionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Subscriptions"
    objects: {
      customer: Prisma.$CustomersPayload<ExtArgs>
      address: Prisma.$AddressesPayload<ExtArgs>
      project: Prisma.$ProjectPayload<ExtArgs>
      discount: Prisma.$DiscountsPayload<ExtArgs> | null
      Subscription_Items: Prisma.$SubscriptionItemsPayload<ExtArgs>[]
      Subscription_Scheduled_Changes: Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>[]
      BillingDetails: Prisma.$BillingDetailsPayload<ExtArgs> | null
      transaction: Prisma.$TransactionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: $Enums.SubscriptionsStatus
      currency_code: string
      created_at: Date
      updated_at: Date
      started_at: Date | null
      first_billed_at: Date | null
      next_billed_at: Date | null
      paused_at: Date | null
      canceled_at: Date | null
      current_period_starts: Date | null
      current_period_ends: Date | null
      billing_cycle_interval: $Enums.BillingInterval
      billing_cycle_frequency: number
      update_payment_method_url: string | null
      cancel_url: string | null
      customer_id: string
      address_id: string
      project_id: string
      discount_id: string | null
      collection_mode: $Enums.CollectionMode
    }, ExtArgs["result"]["subscriptions"]>
    composites: {}
  }

  type SubscriptionsGetPayload<S extends boolean | null | undefined | SubscriptionsDefaultArgs> = $Result.GetResult<Prisma.$SubscriptionsPayload, S>

  type SubscriptionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SubscriptionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SubscriptionsCountAggregateInputType | true
    }

  export interface SubscriptionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Subscriptions'], meta: { name: 'Subscriptions' } }
    /**
     * Find zero or one Subscriptions that matches the filter.
     * @param {SubscriptionsFindUniqueArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubscriptionsFindUniqueArgs>(args: SelectSubset<T, SubscriptionsFindUniqueArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Subscriptions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SubscriptionsFindUniqueOrThrowArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubscriptionsFindUniqueOrThrowArgs>(args: SelectSubset<T, SubscriptionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionsFindFirstArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubscriptionsFindFirstArgs>(args?: SelectSubset<T, SubscriptionsFindFirstArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Subscriptions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionsFindFirstOrThrowArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubscriptionsFindFirstOrThrowArgs>(args?: SelectSubset<T, SubscriptionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscriptions
     * const subscriptions = await prisma.subscriptions.findMany()
     * 
     * // Get first 10 Subscriptions
     * const subscriptions = await prisma.subscriptions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscriptionsWithIdOnly = await prisma.subscriptions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubscriptionsFindManyArgs>(args?: SelectSubset<T, SubscriptionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Subscriptions.
     * @param {SubscriptionsCreateArgs} args - Arguments to create a Subscriptions.
     * @example
     * // Create one Subscriptions
     * const Subscriptions = await prisma.subscriptions.create({
     *   data: {
     *     // ... data to create a Subscriptions
     *   }
     * })
     * 
     */
    create<T extends SubscriptionsCreateArgs>(args: SelectSubset<T, SubscriptionsCreateArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Subscriptions.
     * @param {SubscriptionsCreateManyArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscriptions = await prisma.subscriptions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubscriptionsCreateManyArgs>(args?: SelectSubset<T, SubscriptionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subscriptions and returns the data saved in the database.
     * @param {SubscriptionsCreateManyAndReturnArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscriptions = await prisma.subscriptions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subscriptions and only return the `id`
     * const subscriptionsWithIdOnly = await prisma.subscriptions.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SubscriptionsCreateManyAndReturnArgs>(args?: SelectSubset<T, SubscriptionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Subscriptions.
     * @param {SubscriptionsDeleteArgs} args - Arguments to delete one Subscriptions.
     * @example
     * // Delete one Subscriptions
     * const Subscriptions = await prisma.subscriptions.delete({
     *   where: {
     *     // ... filter to delete one Subscriptions
     *   }
     * })
     * 
     */
    delete<T extends SubscriptionsDeleteArgs>(args: SelectSubset<T, SubscriptionsDeleteArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Subscriptions.
     * @param {SubscriptionsUpdateArgs} args - Arguments to update one Subscriptions.
     * @example
     * // Update one Subscriptions
     * const subscriptions = await prisma.subscriptions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubscriptionsUpdateArgs>(args: SelectSubset<T, SubscriptionsUpdateArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Subscriptions.
     * @param {SubscriptionsDeleteManyArgs} args - Arguments to filter Subscriptions to delete.
     * @example
     * // Delete a few Subscriptions
     * const { count } = await prisma.subscriptions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubscriptionsDeleteManyArgs>(args?: SelectSubset<T, SubscriptionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscriptions
     * const subscriptions = await prisma.subscriptions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubscriptionsUpdateManyArgs>(args: SelectSubset<T, SubscriptionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Subscriptions.
     * @param {SubscriptionsUpsertArgs} args - Arguments to update or create a Subscriptions.
     * @example
     * // Update or create a Subscriptions
     * const subscriptions = await prisma.subscriptions.upsert({
     *   create: {
     *     // ... data to create a Subscriptions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscriptions we want to update
     *   }
     * })
     */
    upsert<T extends SubscriptionsUpsertArgs>(args: SelectSubset<T, SubscriptionsUpsertArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionsCountArgs} args - Arguments to filter Subscriptions to count.
     * @example
     * // Count the number of Subscriptions
     * const count = await prisma.subscriptions.count({
     *   where: {
     *     // ... the filter for the Subscriptions we want to count
     *   }
     * })
    **/
    count<T extends SubscriptionsCountArgs>(
      args?: Subset<T, SubscriptionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscriptionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscriptionsAggregateArgs>(args: Subset<T, SubscriptionsAggregateArgs>): Prisma.PrismaPromise<GetSubscriptionsAggregateType<T>>

    /**
     * Group by Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubscriptionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubscriptionsGroupByArgs['orderBy'] }
        : { orderBy?: SubscriptionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubscriptionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscriptionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Subscriptions model
   */
  readonly fields: SubscriptionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Subscriptions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubscriptionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends CustomersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomersDefaultArgs<ExtArgs>>): Prisma__CustomersClient<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    address<T extends AddressesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AddressesDefaultArgs<ExtArgs>>): Prisma__AddressesClient<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    project<T extends ProjectDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProjectDefaultArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    discount<T extends Subscriptions$discountArgs<ExtArgs> = {}>(args?: Subset<T, Subscriptions$discountArgs<ExtArgs>>): Prisma__DiscountsClient<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    Subscription_Items<T extends Subscriptions$Subscription_ItemsArgs<ExtArgs> = {}>(args?: Subset<T, Subscriptions$Subscription_ItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionItemsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    Subscription_Scheduled_Changes<T extends Subscriptions$Subscription_Scheduled_ChangesArgs<ExtArgs> = {}>(args?: Subset<T, Subscriptions$Subscription_Scheduled_ChangesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Subscription_Scheduled_ChangesPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    BillingDetails<T extends Subscriptions$BillingDetailsArgs<ExtArgs> = {}>(args?: Subset<T, Subscriptions$BillingDetailsArgs<ExtArgs>>): Prisma__BillingDetailsClient<$Result.GetResult<Prisma.$BillingDetailsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    transaction<T extends Subscriptions$transactionArgs<ExtArgs> = {}>(args?: Subset<T, Subscriptions$transactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Subscriptions model
   */ 
  interface SubscriptionsFieldRefs {
    readonly id: FieldRef<"Subscriptions", 'String'>
    readonly status: FieldRef<"Subscriptions", 'SubscriptionsStatus'>
    readonly currency_code: FieldRef<"Subscriptions", 'String'>
    readonly created_at: FieldRef<"Subscriptions", 'DateTime'>
    readonly updated_at: FieldRef<"Subscriptions", 'DateTime'>
    readonly started_at: FieldRef<"Subscriptions", 'DateTime'>
    readonly first_billed_at: FieldRef<"Subscriptions", 'DateTime'>
    readonly next_billed_at: FieldRef<"Subscriptions", 'DateTime'>
    readonly paused_at: FieldRef<"Subscriptions", 'DateTime'>
    readonly canceled_at: FieldRef<"Subscriptions", 'DateTime'>
    readonly current_period_starts: FieldRef<"Subscriptions", 'DateTime'>
    readonly current_period_ends: FieldRef<"Subscriptions", 'DateTime'>
    readonly billing_cycle_interval: FieldRef<"Subscriptions", 'BillingInterval'>
    readonly billing_cycle_frequency: FieldRef<"Subscriptions", 'Int'>
    readonly update_payment_method_url: FieldRef<"Subscriptions", 'String'>
    readonly cancel_url: FieldRef<"Subscriptions", 'String'>
    readonly customer_id: FieldRef<"Subscriptions", 'String'>
    readonly address_id: FieldRef<"Subscriptions", 'String'>
    readonly project_id: FieldRef<"Subscriptions", 'String'>
    readonly discount_id: FieldRef<"Subscriptions", 'String'>
    readonly collection_mode: FieldRef<"Subscriptions", 'CollectionMode'>
  }
    

  // Custom InputTypes
  /**
   * Subscriptions findUnique
   */
  export type SubscriptionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which Subscriptions to fetch.
     */
    where: SubscriptionsWhereUniqueInput
  }

  /**
   * Subscriptions findUniqueOrThrow
   */
  export type SubscriptionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which Subscriptions to fetch.
     */
    where: SubscriptionsWhereUniqueInput
  }

  /**
   * Subscriptions findFirst
   */
  export type SubscriptionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which Subscriptions to fetch.
     */
    where?: SubscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionsOrderByWithRelationInput | SubscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscriptions.
     */
    cursor?: SubscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscriptions.
     */
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * Subscriptions findFirstOrThrow
   */
  export type SubscriptionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which Subscriptions to fetch.
     */
    where?: SubscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionsOrderByWithRelationInput | SubscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscriptions.
     */
    cursor?: SubscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscriptions.
     */
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * Subscriptions findMany
   */
  export type SubscriptionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which Subscriptions to fetch.
     */
    where?: SubscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionsOrderByWithRelationInput | SubscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subscriptions.
     */
    cursor?: SubscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * Subscriptions create
   */
  export type SubscriptionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    /**
     * The data needed to create a Subscriptions.
     */
    data: XOR<SubscriptionsCreateInput, SubscriptionsUncheckedCreateInput>
  }

  /**
   * Subscriptions createMany
   */
  export type SubscriptionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Subscriptions.
     */
    data: SubscriptionsCreateManyInput | SubscriptionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Subscriptions createManyAndReturn
   */
  export type SubscriptionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * The data used to create many Subscriptions.
     */
    data: SubscriptionsCreateManyInput | SubscriptionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Subscriptions update
   */
  export type SubscriptionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    /**
     * The data needed to update a Subscriptions.
     */
    data: XOR<SubscriptionsUpdateInput, SubscriptionsUncheckedUpdateInput>
    /**
     * Choose, which Subscriptions to update.
     */
    where: SubscriptionsWhereUniqueInput
  }

  /**
   * Subscriptions updateMany
   */
  export type SubscriptionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Subscriptions.
     */
    data: XOR<SubscriptionsUpdateManyMutationInput, SubscriptionsUncheckedUpdateManyInput>
    /**
     * Filter which Subscriptions to update
     */
    where?: SubscriptionsWhereInput
  }

  /**
   * Subscriptions upsert
   */
  export type SubscriptionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    /**
     * The filter to search for the Subscriptions to update in case it exists.
     */
    where: SubscriptionsWhereUniqueInput
    /**
     * In case the Subscriptions found by the `where` argument doesn't exist, create a new Subscriptions with this data.
     */
    create: XOR<SubscriptionsCreateInput, SubscriptionsUncheckedCreateInput>
    /**
     * In case the Subscriptions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubscriptionsUpdateInput, SubscriptionsUncheckedUpdateInput>
  }

  /**
   * Subscriptions delete
   */
  export type SubscriptionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    /**
     * Filter which Subscriptions to delete.
     */
    where: SubscriptionsWhereUniqueInput
  }

  /**
   * Subscriptions deleteMany
   */
  export type SubscriptionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscriptions to delete
     */
    where?: SubscriptionsWhereInput
  }

  /**
   * Subscriptions.discount
   */
  export type Subscriptions$discountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    where?: DiscountsWhereInput
  }

  /**
   * Subscriptions.Subscription_Items
   */
  export type Subscriptions$Subscription_ItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItems
     */
    select?: SubscriptionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SubscriptionItems
     */
    omit?: SubscriptionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemsInclude<ExtArgs> | null
    where?: SubscriptionItemsWhereInput
    orderBy?: SubscriptionItemsOrderByWithRelationInput | SubscriptionItemsOrderByWithRelationInput[]
    cursor?: SubscriptionItemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionItemsScalarFieldEnum | SubscriptionItemsScalarFieldEnum[]
  }

  /**
   * Subscriptions.Subscription_Scheduled_Changes
   */
  export type Subscriptions$Subscription_Scheduled_ChangesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_Scheduled_Changes
     */
    select?: Subscription_Scheduled_ChangesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription_Scheduled_Changes
     */
    omit?: Subscription_Scheduled_ChangesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Subscription_Scheduled_ChangesInclude<ExtArgs> | null
    where?: Subscription_Scheduled_ChangesWhereInput
    orderBy?: Subscription_Scheduled_ChangesOrderByWithRelationInput | Subscription_Scheduled_ChangesOrderByWithRelationInput[]
    cursor?: Subscription_Scheduled_ChangesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Subscription_Scheduled_ChangesScalarFieldEnum | Subscription_Scheduled_ChangesScalarFieldEnum[]
  }

  /**
   * Subscriptions.BillingDetails
   */
  export type Subscriptions$BillingDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BillingDetails
     */
    select?: BillingDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BillingDetails
     */
    omit?: BillingDetailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BillingDetailsInclude<ExtArgs> | null
    where?: BillingDetailsWhereInput
  }

  /**
   * Subscriptions.transaction
   */
  export type Subscriptions$transactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    where?: TransactionsWhereInput
    orderBy?: TransactionsOrderByWithRelationInput | TransactionsOrderByWithRelationInput[]
    cursor?: TransactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * Subscriptions without action
   */
  export type SubscriptionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
  }


  /**
   * Model TransactionItems
   */

  export type AggregateTransactionItems = {
    _count: TransactionItemsCountAggregateOutputType | null
    _avg: TransactionItemsAvgAggregateOutputType | null
    _sum: TransactionItemsSumAggregateOutputType | null
    _min: TransactionItemsMinAggregateOutputType | null
    _max: TransactionItemsMaxAggregateOutputType | null
  }

  export type TransactionItemsAvgAggregateOutputType = {
    quantity: number | null
  }

  export type TransactionItemsSumAggregateOutputType = {
    quantity: number | null
  }

  export type TransactionItemsMinAggregateOutputType = {
    id: string | null
    price_id: string | null
    quantity: number | null
    transactionsId: string | null
  }

  export type TransactionItemsMaxAggregateOutputType = {
    id: string | null
    price_id: string | null
    quantity: number | null
    transactionsId: string | null
  }

  export type TransactionItemsCountAggregateOutputType = {
    id: number
    price_id: number
    quantity: number
    transactionsId: number
    _all: number
  }


  export type TransactionItemsAvgAggregateInputType = {
    quantity?: true
  }

  export type TransactionItemsSumAggregateInputType = {
    quantity?: true
  }

  export type TransactionItemsMinAggregateInputType = {
    id?: true
    price_id?: true
    quantity?: true
    transactionsId?: true
  }

  export type TransactionItemsMaxAggregateInputType = {
    id?: true
    price_id?: true
    quantity?: true
    transactionsId?: true
  }

  export type TransactionItemsCountAggregateInputType = {
    id?: true
    price_id?: true
    quantity?: true
    transactionsId?: true
    _all?: true
  }

  export type TransactionItemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransactionItems to aggregate.
     */
    where?: TransactionItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionItems to fetch.
     */
    orderBy?: TransactionItemsOrderByWithRelationInput | TransactionItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransactionItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TransactionItems
    **/
    _count?: true | TransactionItemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransactionItemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransactionItemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransactionItemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransactionItemsMaxAggregateInputType
  }

  export type GetTransactionItemsAggregateType<T extends TransactionItemsAggregateArgs> = {
        [P in keyof T & keyof AggregateTransactionItems]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransactionItems[P]>
      : GetScalarType<T[P], AggregateTransactionItems[P]>
  }




  export type TransactionItemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionItemsWhereInput
    orderBy?: TransactionItemsOrderByWithAggregationInput | TransactionItemsOrderByWithAggregationInput[]
    by: TransactionItemsScalarFieldEnum[] | TransactionItemsScalarFieldEnum
    having?: TransactionItemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransactionItemsCountAggregateInputType | true
    _avg?: TransactionItemsAvgAggregateInputType
    _sum?: TransactionItemsSumAggregateInputType
    _min?: TransactionItemsMinAggregateInputType
    _max?: TransactionItemsMaxAggregateInputType
  }

  export type TransactionItemsGroupByOutputType = {
    id: string
    price_id: string
    quantity: number
    transactionsId: string | null
    _count: TransactionItemsCountAggregateOutputType | null
    _avg: TransactionItemsAvgAggregateOutputType | null
    _sum: TransactionItemsSumAggregateOutputType | null
    _min: TransactionItemsMinAggregateOutputType | null
    _max: TransactionItemsMaxAggregateOutputType | null
  }

  type GetTransactionItemsGroupByPayload<T extends TransactionItemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransactionItemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransactionItemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransactionItemsGroupByOutputType[P]>
            : GetScalarType<T[P], TransactionItemsGroupByOutputType[P]>
        }
      >
    >


  export type TransactionItemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    price_id?: boolean
    quantity?: boolean
    transactionsId?: boolean
    price?: boolean | PricesDefaultArgs<ExtArgs>
    Transactions?: boolean | TransactionItems$TransactionsArgs<ExtArgs>
  }, ExtArgs["result"]["transactionItems"]>

  export type TransactionItemsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    price_id?: boolean
    quantity?: boolean
    transactionsId?: boolean
    price?: boolean | PricesDefaultArgs<ExtArgs>
    Transactions?: boolean | TransactionItems$TransactionsArgs<ExtArgs>
  }, ExtArgs["result"]["transactionItems"]>


  export type TransactionItemsSelectScalar = {
    id?: boolean
    price_id?: boolean
    quantity?: boolean
    transactionsId?: boolean
  }

  export type TransactionItemsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "price_id" | "quantity" | "transactionsId", ExtArgs["result"]["transactionItems"]>
  export type TransactionItemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    price?: boolean | PricesDefaultArgs<ExtArgs>
    Transactions?: boolean | TransactionItems$TransactionsArgs<ExtArgs>
  }
  export type TransactionItemsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    price?: boolean | PricesDefaultArgs<ExtArgs>
    Transactions?: boolean | TransactionItems$TransactionsArgs<ExtArgs>
  }

  export type $TransactionItemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TransactionItems"
    objects: {
      price: Prisma.$PricesPayload<ExtArgs>
      Transactions: Prisma.$TransactionsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      price_id: string
      quantity: number
      transactionsId: string | null
    }, ExtArgs["result"]["transactionItems"]>
    composites: {}
  }

  type TransactionItemsGetPayload<S extends boolean | null | undefined | TransactionItemsDefaultArgs> = $Result.GetResult<Prisma.$TransactionItemsPayload, S>

  type TransactionItemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransactionItemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransactionItemsCountAggregateInputType | true
    }

  export interface TransactionItemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TransactionItems'], meta: { name: 'TransactionItems' } }
    /**
     * Find zero or one TransactionItems that matches the filter.
     * @param {TransactionItemsFindUniqueArgs} args - Arguments to find a TransactionItems
     * @example
     * // Get one TransactionItems
     * const transactionItems = await prisma.transactionItems.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransactionItemsFindUniqueArgs>(args: SelectSubset<T, TransactionItemsFindUniqueArgs<ExtArgs>>): Prisma__TransactionItemsClient<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one TransactionItems that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransactionItemsFindUniqueOrThrowArgs} args - Arguments to find a TransactionItems
     * @example
     * // Get one TransactionItems
     * const transactionItems = await prisma.transactionItems.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransactionItemsFindUniqueOrThrowArgs>(args: SelectSubset<T, TransactionItemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransactionItemsClient<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first TransactionItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionItemsFindFirstArgs} args - Arguments to find a TransactionItems
     * @example
     * // Get one TransactionItems
     * const transactionItems = await prisma.transactionItems.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransactionItemsFindFirstArgs>(args?: SelectSubset<T, TransactionItemsFindFirstArgs<ExtArgs>>): Prisma__TransactionItemsClient<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first TransactionItems that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionItemsFindFirstOrThrowArgs} args - Arguments to find a TransactionItems
     * @example
     * // Get one TransactionItems
     * const transactionItems = await prisma.transactionItems.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransactionItemsFindFirstOrThrowArgs>(args?: SelectSubset<T, TransactionItemsFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransactionItemsClient<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more TransactionItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionItemsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TransactionItems
     * const transactionItems = await prisma.transactionItems.findMany()
     * 
     * // Get first 10 TransactionItems
     * const transactionItems = await prisma.transactionItems.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transactionItemsWithIdOnly = await prisma.transactionItems.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransactionItemsFindManyArgs>(args?: SelectSubset<T, TransactionItemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a TransactionItems.
     * @param {TransactionItemsCreateArgs} args - Arguments to create a TransactionItems.
     * @example
     * // Create one TransactionItems
     * const TransactionItems = await prisma.transactionItems.create({
     *   data: {
     *     // ... data to create a TransactionItems
     *   }
     * })
     * 
     */
    create<T extends TransactionItemsCreateArgs>(args: SelectSubset<T, TransactionItemsCreateArgs<ExtArgs>>): Prisma__TransactionItemsClient<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many TransactionItems.
     * @param {TransactionItemsCreateManyArgs} args - Arguments to create many TransactionItems.
     * @example
     * // Create many TransactionItems
     * const transactionItems = await prisma.transactionItems.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransactionItemsCreateManyArgs>(args?: SelectSubset<T, TransactionItemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TransactionItems and returns the data saved in the database.
     * @param {TransactionItemsCreateManyAndReturnArgs} args - Arguments to create many TransactionItems.
     * @example
     * // Create many TransactionItems
     * const transactionItems = await prisma.transactionItems.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TransactionItems and only return the `id`
     * const transactionItemsWithIdOnly = await prisma.transactionItems.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransactionItemsCreateManyAndReturnArgs>(args?: SelectSubset<T, TransactionItemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a TransactionItems.
     * @param {TransactionItemsDeleteArgs} args - Arguments to delete one TransactionItems.
     * @example
     * // Delete one TransactionItems
     * const TransactionItems = await prisma.transactionItems.delete({
     *   where: {
     *     // ... filter to delete one TransactionItems
     *   }
     * })
     * 
     */
    delete<T extends TransactionItemsDeleteArgs>(args: SelectSubset<T, TransactionItemsDeleteArgs<ExtArgs>>): Prisma__TransactionItemsClient<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one TransactionItems.
     * @param {TransactionItemsUpdateArgs} args - Arguments to update one TransactionItems.
     * @example
     * // Update one TransactionItems
     * const transactionItems = await prisma.transactionItems.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransactionItemsUpdateArgs>(args: SelectSubset<T, TransactionItemsUpdateArgs<ExtArgs>>): Prisma__TransactionItemsClient<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more TransactionItems.
     * @param {TransactionItemsDeleteManyArgs} args - Arguments to filter TransactionItems to delete.
     * @example
     * // Delete a few TransactionItems
     * const { count } = await prisma.transactionItems.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransactionItemsDeleteManyArgs>(args?: SelectSubset<T, TransactionItemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TransactionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionItemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TransactionItems
     * const transactionItems = await prisma.transactionItems.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransactionItemsUpdateManyArgs>(args: SelectSubset<T, TransactionItemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TransactionItems.
     * @param {TransactionItemsUpsertArgs} args - Arguments to update or create a TransactionItems.
     * @example
     * // Update or create a TransactionItems
     * const transactionItems = await prisma.transactionItems.upsert({
     *   create: {
     *     // ... data to create a TransactionItems
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TransactionItems we want to update
     *   }
     * })
     */
    upsert<T extends TransactionItemsUpsertArgs>(args: SelectSubset<T, TransactionItemsUpsertArgs<ExtArgs>>): Prisma__TransactionItemsClient<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of TransactionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionItemsCountArgs} args - Arguments to filter TransactionItems to count.
     * @example
     * // Count the number of TransactionItems
     * const count = await prisma.transactionItems.count({
     *   where: {
     *     // ... the filter for the TransactionItems we want to count
     *   }
     * })
    **/
    count<T extends TransactionItemsCountArgs>(
      args?: Subset<T, TransactionItemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransactionItemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TransactionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionItemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransactionItemsAggregateArgs>(args: Subset<T, TransactionItemsAggregateArgs>): Prisma.PrismaPromise<GetTransactionItemsAggregateType<T>>

    /**
     * Group by TransactionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionItemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransactionItemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransactionItemsGroupByArgs['orderBy'] }
        : { orderBy?: TransactionItemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransactionItemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransactionItemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TransactionItems model
   */
  readonly fields: TransactionItemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TransactionItems.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransactionItemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    price<T extends PricesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PricesDefaultArgs<ExtArgs>>): Prisma__PricesClient<$Result.GetResult<Prisma.$PricesPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    Transactions<T extends TransactionItems$TransactionsArgs<ExtArgs> = {}>(args?: Subset<T, TransactionItems$TransactionsArgs<ExtArgs>>): Prisma__TransactionsClient<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TransactionItems model
   */ 
  interface TransactionItemsFieldRefs {
    readonly id: FieldRef<"TransactionItems", 'String'>
    readonly price_id: FieldRef<"TransactionItems", 'String'>
    readonly quantity: FieldRef<"TransactionItems", 'Int'>
    readonly transactionsId: FieldRef<"TransactionItems", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TransactionItems findUnique
   */
  export type TransactionItemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
    /**
     * Filter, which TransactionItems to fetch.
     */
    where: TransactionItemsWhereUniqueInput
  }

  /**
   * TransactionItems findUniqueOrThrow
   */
  export type TransactionItemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
    /**
     * Filter, which TransactionItems to fetch.
     */
    where: TransactionItemsWhereUniqueInput
  }

  /**
   * TransactionItems findFirst
   */
  export type TransactionItemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
    /**
     * Filter, which TransactionItems to fetch.
     */
    where?: TransactionItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionItems to fetch.
     */
    orderBy?: TransactionItemsOrderByWithRelationInput | TransactionItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransactionItems.
     */
    cursor?: TransactionItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransactionItems.
     */
    distinct?: TransactionItemsScalarFieldEnum | TransactionItemsScalarFieldEnum[]
  }

  /**
   * TransactionItems findFirstOrThrow
   */
  export type TransactionItemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
    /**
     * Filter, which TransactionItems to fetch.
     */
    where?: TransactionItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionItems to fetch.
     */
    orderBy?: TransactionItemsOrderByWithRelationInput | TransactionItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransactionItems.
     */
    cursor?: TransactionItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransactionItems.
     */
    distinct?: TransactionItemsScalarFieldEnum | TransactionItemsScalarFieldEnum[]
  }

  /**
   * TransactionItems findMany
   */
  export type TransactionItemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
    /**
     * Filter, which TransactionItems to fetch.
     */
    where?: TransactionItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionItems to fetch.
     */
    orderBy?: TransactionItemsOrderByWithRelationInput | TransactionItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TransactionItems.
     */
    cursor?: TransactionItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionItems.
     */
    skip?: number
    distinct?: TransactionItemsScalarFieldEnum | TransactionItemsScalarFieldEnum[]
  }

  /**
   * TransactionItems create
   */
  export type TransactionItemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
    /**
     * The data needed to create a TransactionItems.
     */
    data: XOR<TransactionItemsCreateInput, TransactionItemsUncheckedCreateInput>
  }

  /**
   * TransactionItems createMany
   */
  export type TransactionItemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TransactionItems.
     */
    data: TransactionItemsCreateManyInput | TransactionItemsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TransactionItems createManyAndReturn
   */
  export type TransactionItemsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * The data used to create many TransactionItems.
     */
    data: TransactionItemsCreateManyInput | TransactionItemsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TransactionItems update
   */
  export type TransactionItemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
    /**
     * The data needed to update a TransactionItems.
     */
    data: XOR<TransactionItemsUpdateInput, TransactionItemsUncheckedUpdateInput>
    /**
     * Choose, which TransactionItems to update.
     */
    where: TransactionItemsWhereUniqueInput
  }

  /**
   * TransactionItems updateMany
   */
  export type TransactionItemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TransactionItems.
     */
    data: XOR<TransactionItemsUpdateManyMutationInput, TransactionItemsUncheckedUpdateManyInput>
    /**
     * Filter which TransactionItems to update
     */
    where?: TransactionItemsWhereInput
  }

  /**
   * TransactionItems upsert
   */
  export type TransactionItemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
    /**
     * The filter to search for the TransactionItems to update in case it exists.
     */
    where: TransactionItemsWhereUniqueInput
    /**
     * In case the TransactionItems found by the `where` argument doesn't exist, create a new TransactionItems with this data.
     */
    create: XOR<TransactionItemsCreateInput, TransactionItemsUncheckedCreateInput>
    /**
     * In case the TransactionItems was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransactionItemsUpdateInput, TransactionItemsUncheckedUpdateInput>
  }

  /**
   * TransactionItems delete
   */
  export type TransactionItemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
    /**
     * Filter which TransactionItems to delete.
     */
    where: TransactionItemsWhereUniqueInput
  }

  /**
   * TransactionItems deleteMany
   */
  export type TransactionItemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransactionItems to delete
     */
    where?: TransactionItemsWhereInput
  }

  /**
   * TransactionItems.Transactions
   */
  export type TransactionItems$TransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    where?: TransactionsWhereInput
  }

  /**
   * TransactionItems without action
   */
  export type TransactionItemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
  }


  /**
   * Model TransactionPayment
   */

  export type AggregateTransactionPayment = {
    _count: TransactionPaymentCountAggregateOutputType | null
    _avg: TransactionPaymentAvgAggregateOutputType | null
    _sum: TransactionPaymentSumAggregateOutputType | null
    _min: TransactionPaymentMinAggregateOutputType | null
    _max: TransactionPaymentMaxAggregateOutputType | null
  }

  export type TransactionPaymentAvgAggregateOutputType = {
    amount: Decimal | null
    card_exp_month: number | null
    card_exp_year: number | null
  }

  export type TransactionPaymentSumAggregateOutputType = {
    amount: Decimal | null
    card_exp_month: number | null
    card_exp_year: number | null
  }

  export type TransactionPaymentMinAggregateOutputType = {
    id: string | null
    transaction_id: string | null
    payment_method: $Enums.PaymentMethod | null
    payment_provider: $Enums.PaymentProvider | null
    status: $Enums.PaymentStatus | null
    amount: Decimal | null
    currency_code: string | null
    mobile_network: string | null
    phone_suffix: string | null
    card_last4: string | null
    card_brand: string | null
    card_exp_month: number | null
    card_exp_year: number | null
    card_holder_name: string | null
    bank_reference: string | null
    bank_name: string | null
    provider_reference: string | null
    error_message: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TransactionPaymentMaxAggregateOutputType = {
    id: string | null
    transaction_id: string | null
    payment_method: $Enums.PaymentMethod | null
    payment_provider: $Enums.PaymentProvider | null
    status: $Enums.PaymentStatus | null
    amount: Decimal | null
    currency_code: string | null
    mobile_network: string | null
    phone_suffix: string | null
    card_last4: string | null
    card_brand: string | null
    card_exp_month: number | null
    card_exp_year: number | null
    card_holder_name: string | null
    bank_reference: string | null
    bank_name: string | null
    provider_reference: string | null
    error_message: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TransactionPaymentCountAggregateOutputType = {
    id: number
    transaction_id: number
    payment_method: number
    payment_provider: number
    status: number
    amount: number
    currency_code: number
    mobile_network: number
    phone_suffix: number
    card_last4: number
    card_brand: number
    card_exp_month: number
    card_exp_year: number
    card_holder_name: number
    bank_reference: number
    bank_name: number
    provider_reference: number
    provider_metadata: number
    error_message: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type TransactionPaymentAvgAggregateInputType = {
    amount?: true
    card_exp_month?: true
    card_exp_year?: true
  }

  export type TransactionPaymentSumAggregateInputType = {
    amount?: true
    card_exp_month?: true
    card_exp_year?: true
  }

  export type TransactionPaymentMinAggregateInputType = {
    id?: true
    transaction_id?: true
    payment_method?: true
    payment_provider?: true
    status?: true
    amount?: true
    currency_code?: true
    mobile_network?: true
    phone_suffix?: true
    card_last4?: true
    card_brand?: true
    card_exp_month?: true
    card_exp_year?: true
    card_holder_name?: true
    bank_reference?: true
    bank_name?: true
    provider_reference?: true
    error_message?: true
    created_at?: true
    updated_at?: true
  }

  export type TransactionPaymentMaxAggregateInputType = {
    id?: true
    transaction_id?: true
    payment_method?: true
    payment_provider?: true
    status?: true
    amount?: true
    currency_code?: true
    mobile_network?: true
    phone_suffix?: true
    card_last4?: true
    card_brand?: true
    card_exp_month?: true
    card_exp_year?: true
    card_holder_name?: true
    bank_reference?: true
    bank_name?: true
    provider_reference?: true
    error_message?: true
    created_at?: true
    updated_at?: true
  }

  export type TransactionPaymentCountAggregateInputType = {
    id?: true
    transaction_id?: true
    payment_method?: true
    payment_provider?: true
    status?: true
    amount?: true
    currency_code?: true
    mobile_network?: true
    phone_suffix?: true
    card_last4?: true
    card_brand?: true
    card_exp_month?: true
    card_exp_year?: true
    card_holder_name?: true
    bank_reference?: true
    bank_name?: true
    provider_reference?: true
    provider_metadata?: true
    error_message?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type TransactionPaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransactionPayment to aggregate.
     */
    where?: TransactionPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionPayments to fetch.
     */
    orderBy?: TransactionPaymentOrderByWithRelationInput | TransactionPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransactionPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionPayments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TransactionPayments
    **/
    _count?: true | TransactionPaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransactionPaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransactionPaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransactionPaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransactionPaymentMaxAggregateInputType
  }

  export type GetTransactionPaymentAggregateType<T extends TransactionPaymentAggregateArgs> = {
        [P in keyof T & keyof AggregateTransactionPayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransactionPayment[P]>
      : GetScalarType<T[P], AggregateTransactionPayment[P]>
  }




  export type TransactionPaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionPaymentWhereInput
    orderBy?: TransactionPaymentOrderByWithAggregationInput | TransactionPaymentOrderByWithAggregationInput[]
    by: TransactionPaymentScalarFieldEnum[] | TransactionPaymentScalarFieldEnum
    having?: TransactionPaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransactionPaymentCountAggregateInputType | true
    _avg?: TransactionPaymentAvgAggregateInputType
    _sum?: TransactionPaymentSumAggregateInputType
    _min?: TransactionPaymentMinAggregateInputType
    _max?: TransactionPaymentMaxAggregateInputType
  }

  export type TransactionPaymentGroupByOutputType = {
    id: string
    transaction_id: string
    payment_method: $Enums.PaymentMethod
    payment_provider: $Enums.PaymentProvider
    status: $Enums.PaymentStatus
    amount: Decimal
    currency_code: string
    mobile_network: string | null
    phone_suffix: string | null
    card_last4: string | null
    card_brand: string | null
    card_exp_month: number | null
    card_exp_year: number | null
    card_holder_name: string | null
    bank_reference: string | null
    bank_name: string | null
    provider_reference: string | null
    provider_metadata: JsonValue | null
    error_message: string | null
    created_at: Date
    updated_at: Date | null
    _count: TransactionPaymentCountAggregateOutputType | null
    _avg: TransactionPaymentAvgAggregateOutputType | null
    _sum: TransactionPaymentSumAggregateOutputType | null
    _min: TransactionPaymentMinAggregateOutputType | null
    _max: TransactionPaymentMaxAggregateOutputType | null
  }

  type GetTransactionPaymentGroupByPayload<T extends TransactionPaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransactionPaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransactionPaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransactionPaymentGroupByOutputType[P]>
            : GetScalarType<T[P], TransactionPaymentGroupByOutputType[P]>
        }
      >
    >


  export type TransactionPaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transaction_id?: boolean
    payment_method?: boolean
    payment_provider?: boolean
    status?: boolean
    amount?: boolean
    currency_code?: boolean
    mobile_network?: boolean
    phone_suffix?: boolean
    card_last4?: boolean
    card_brand?: boolean
    card_exp_month?: boolean
    card_exp_year?: boolean
    card_holder_name?: boolean
    bank_reference?: boolean
    bank_name?: boolean
    provider_reference?: boolean
    provider_metadata?: boolean
    error_message?: boolean
    created_at?: boolean
    updated_at?: boolean
    transaction?: boolean | TransactionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transactionPayment"]>

  export type TransactionPaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transaction_id?: boolean
    payment_method?: boolean
    payment_provider?: boolean
    status?: boolean
    amount?: boolean
    currency_code?: boolean
    mobile_network?: boolean
    phone_suffix?: boolean
    card_last4?: boolean
    card_brand?: boolean
    card_exp_month?: boolean
    card_exp_year?: boolean
    card_holder_name?: boolean
    bank_reference?: boolean
    bank_name?: boolean
    provider_reference?: boolean
    provider_metadata?: boolean
    error_message?: boolean
    created_at?: boolean
    updated_at?: boolean
    transaction?: boolean | TransactionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transactionPayment"]>


  export type TransactionPaymentSelectScalar = {
    id?: boolean
    transaction_id?: boolean
    payment_method?: boolean
    payment_provider?: boolean
    status?: boolean
    amount?: boolean
    currency_code?: boolean
    mobile_network?: boolean
    phone_suffix?: boolean
    card_last4?: boolean
    card_brand?: boolean
    card_exp_month?: boolean
    card_exp_year?: boolean
    card_holder_name?: boolean
    bank_reference?: boolean
    bank_name?: boolean
    provider_reference?: boolean
    provider_metadata?: boolean
    error_message?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type TransactionPaymentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "transaction_id" | "payment_method" | "payment_provider" | "status" | "amount" | "currency_code" | "mobile_network" | "phone_suffix" | "card_last4" | "card_brand" | "card_exp_month" | "card_exp_year" | "card_holder_name" | "bank_reference" | "bank_name" | "provider_reference" | "provider_metadata" | "error_message" | "created_at" | "updated_at", ExtArgs["result"]["transactionPayment"]>
  export type TransactionPaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaction?: boolean | TransactionsDefaultArgs<ExtArgs>
  }
  export type TransactionPaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaction?: boolean | TransactionsDefaultArgs<ExtArgs>
  }

  export type $TransactionPaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TransactionPayment"
    objects: {
      transaction: Prisma.$TransactionsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      transaction_id: string
      payment_method: $Enums.PaymentMethod
      payment_provider: $Enums.PaymentProvider
      status: $Enums.PaymentStatus
      amount: Prisma.Decimal
      currency_code: string
      mobile_network: string | null
      phone_suffix: string | null
      card_last4: string | null
      card_brand: string | null
      card_exp_month: number | null
      card_exp_year: number | null
      card_holder_name: string | null
      bank_reference: string | null
      bank_name: string | null
      provider_reference: string | null
      provider_metadata: Prisma.JsonValue | null
      error_message: string | null
      created_at: Date
      updated_at: Date | null
    }, ExtArgs["result"]["transactionPayment"]>
    composites: {}
  }

  type TransactionPaymentGetPayload<S extends boolean | null | undefined | TransactionPaymentDefaultArgs> = $Result.GetResult<Prisma.$TransactionPaymentPayload, S>

  type TransactionPaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransactionPaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransactionPaymentCountAggregateInputType | true
    }

  export interface TransactionPaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TransactionPayment'], meta: { name: 'TransactionPayment' } }
    /**
     * Find zero or one TransactionPayment that matches the filter.
     * @param {TransactionPaymentFindUniqueArgs} args - Arguments to find a TransactionPayment
     * @example
     * // Get one TransactionPayment
     * const transactionPayment = await prisma.transactionPayment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransactionPaymentFindUniqueArgs>(args: SelectSubset<T, TransactionPaymentFindUniqueArgs<ExtArgs>>): Prisma__TransactionPaymentClient<$Result.GetResult<Prisma.$TransactionPaymentPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one TransactionPayment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransactionPaymentFindUniqueOrThrowArgs} args - Arguments to find a TransactionPayment
     * @example
     * // Get one TransactionPayment
     * const transactionPayment = await prisma.transactionPayment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransactionPaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, TransactionPaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransactionPaymentClient<$Result.GetResult<Prisma.$TransactionPaymentPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first TransactionPayment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionPaymentFindFirstArgs} args - Arguments to find a TransactionPayment
     * @example
     * // Get one TransactionPayment
     * const transactionPayment = await prisma.transactionPayment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransactionPaymentFindFirstArgs>(args?: SelectSubset<T, TransactionPaymentFindFirstArgs<ExtArgs>>): Prisma__TransactionPaymentClient<$Result.GetResult<Prisma.$TransactionPaymentPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first TransactionPayment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionPaymentFindFirstOrThrowArgs} args - Arguments to find a TransactionPayment
     * @example
     * // Get one TransactionPayment
     * const transactionPayment = await prisma.transactionPayment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransactionPaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, TransactionPaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransactionPaymentClient<$Result.GetResult<Prisma.$TransactionPaymentPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more TransactionPayments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionPaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TransactionPayments
     * const transactionPayments = await prisma.transactionPayment.findMany()
     * 
     * // Get first 10 TransactionPayments
     * const transactionPayments = await prisma.transactionPayment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transactionPaymentWithIdOnly = await prisma.transactionPayment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransactionPaymentFindManyArgs>(args?: SelectSubset<T, TransactionPaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPaymentPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a TransactionPayment.
     * @param {TransactionPaymentCreateArgs} args - Arguments to create a TransactionPayment.
     * @example
     * // Create one TransactionPayment
     * const TransactionPayment = await prisma.transactionPayment.create({
     *   data: {
     *     // ... data to create a TransactionPayment
     *   }
     * })
     * 
     */
    create<T extends TransactionPaymentCreateArgs>(args: SelectSubset<T, TransactionPaymentCreateArgs<ExtArgs>>): Prisma__TransactionPaymentClient<$Result.GetResult<Prisma.$TransactionPaymentPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many TransactionPayments.
     * @param {TransactionPaymentCreateManyArgs} args - Arguments to create many TransactionPayments.
     * @example
     * // Create many TransactionPayments
     * const transactionPayment = await prisma.transactionPayment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransactionPaymentCreateManyArgs>(args?: SelectSubset<T, TransactionPaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TransactionPayments and returns the data saved in the database.
     * @param {TransactionPaymentCreateManyAndReturnArgs} args - Arguments to create many TransactionPayments.
     * @example
     * // Create many TransactionPayments
     * const transactionPayment = await prisma.transactionPayment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TransactionPayments and only return the `id`
     * const transactionPaymentWithIdOnly = await prisma.transactionPayment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransactionPaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, TransactionPaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPaymentPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a TransactionPayment.
     * @param {TransactionPaymentDeleteArgs} args - Arguments to delete one TransactionPayment.
     * @example
     * // Delete one TransactionPayment
     * const TransactionPayment = await prisma.transactionPayment.delete({
     *   where: {
     *     // ... filter to delete one TransactionPayment
     *   }
     * })
     * 
     */
    delete<T extends TransactionPaymentDeleteArgs>(args: SelectSubset<T, TransactionPaymentDeleteArgs<ExtArgs>>): Prisma__TransactionPaymentClient<$Result.GetResult<Prisma.$TransactionPaymentPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one TransactionPayment.
     * @param {TransactionPaymentUpdateArgs} args - Arguments to update one TransactionPayment.
     * @example
     * // Update one TransactionPayment
     * const transactionPayment = await prisma.transactionPayment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransactionPaymentUpdateArgs>(args: SelectSubset<T, TransactionPaymentUpdateArgs<ExtArgs>>): Prisma__TransactionPaymentClient<$Result.GetResult<Prisma.$TransactionPaymentPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more TransactionPayments.
     * @param {TransactionPaymentDeleteManyArgs} args - Arguments to filter TransactionPayments to delete.
     * @example
     * // Delete a few TransactionPayments
     * const { count } = await prisma.transactionPayment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransactionPaymentDeleteManyArgs>(args?: SelectSubset<T, TransactionPaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TransactionPayments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionPaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TransactionPayments
     * const transactionPayment = await prisma.transactionPayment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransactionPaymentUpdateManyArgs>(args: SelectSubset<T, TransactionPaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TransactionPayment.
     * @param {TransactionPaymentUpsertArgs} args - Arguments to update or create a TransactionPayment.
     * @example
     * // Update or create a TransactionPayment
     * const transactionPayment = await prisma.transactionPayment.upsert({
     *   create: {
     *     // ... data to create a TransactionPayment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TransactionPayment we want to update
     *   }
     * })
     */
    upsert<T extends TransactionPaymentUpsertArgs>(args: SelectSubset<T, TransactionPaymentUpsertArgs<ExtArgs>>): Prisma__TransactionPaymentClient<$Result.GetResult<Prisma.$TransactionPaymentPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of TransactionPayments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionPaymentCountArgs} args - Arguments to filter TransactionPayments to count.
     * @example
     * // Count the number of TransactionPayments
     * const count = await prisma.transactionPayment.count({
     *   where: {
     *     // ... the filter for the TransactionPayments we want to count
     *   }
     * })
    **/
    count<T extends TransactionPaymentCountArgs>(
      args?: Subset<T, TransactionPaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransactionPaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TransactionPayment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionPaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransactionPaymentAggregateArgs>(args: Subset<T, TransactionPaymentAggregateArgs>): Prisma.PrismaPromise<GetTransactionPaymentAggregateType<T>>

    /**
     * Group by TransactionPayment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionPaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransactionPaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransactionPaymentGroupByArgs['orderBy'] }
        : { orderBy?: TransactionPaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransactionPaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransactionPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TransactionPayment model
   */
  readonly fields: TransactionPaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TransactionPayment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransactionPaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transaction<T extends TransactionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TransactionsDefaultArgs<ExtArgs>>): Prisma__TransactionsClient<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TransactionPayment model
   */ 
  interface TransactionPaymentFieldRefs {
    readonly id: FieldRef<"TransactionPayment", 'String'>
    readonly transaction_id: FieldRef<"TransactionPayment", 'String'>
    readonly payment_method: FieldRef<"TransactionPayment", 'PaymentMethod'>
    readonly payment_provider: FieldRef<"TransactionPayment", 'PaymentProvider'>
    readonly status: FieldRef<"TransactionPayment", 'PaymentStatus'>
    readonly amount: FieldRef<"TransactionPayment", 'Decimal'>
    readonly currency_code: FieldRef<"TransactionPayment", 'String'>
    readonly mobile_network: FieldRef<"TransactionPayment", 'String'>
    readonly phone_suffix: FieldRef<"TransactionPayment", 'String'>
    readonly card_last4: FieldRef<"TransactionPayment", 'String'>
    readonly card_brand: FieldRef<"TransactionPayment", 'String'>
    readonly card_exp_month: FieldRef<"TransactionPayment", 'Int'>
    readonly card_exp_year: FieldRef<"TransactionPayment", 'Int'>
    readonly card_holder_name: FieldRef<"TransactionPayment", 'String'>
    readonly bank_reference: FieldRef<"TransactionPayment", 'String'>
    readonly bank_name: FieldRef<"TransactionPayment", 'String'>
    readonly provider_reference: FieldRef<"TransactionPayment", 'String'>
    readonly provider_metadata: FieldRef<"TransactionPayment", 'Json'>
    readonly error_message: FieldRef<"TransactionPayment", 'String'>
    readonly created_at: FieldRef<"TransactionPayment", 'DateTime'>
    readonly updated_at: FieldRef<"TransactionPayment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TransactionPayment findUnique
   */
  export type TransactionPaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentInclude<ExtArgs> | null
    /**
     * Filter, which TransactionPayment to fetch.
     */
    where: TransactionPaymentWhereUniqueInput
  }

  /**
   * TransactionPayment findUniqueOrThrow
   */
  export type TransactionPaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentInclude<ExtArgs> | null
    /**
     * Filter, which TransactionPayment to fetch.
     */
    where: TransactionPaymentWhereUniqueInput
  }

  /**
   * TransactionPayment findFirst
   */
  export type TransactionPaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentInclude<ExtArgs> | null
    /**
     * Filter, which TransactionPayment to fetch.
     */
    where?: TransactionPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionPayments to fetch.
     */
    orderBy?: TransactionPaymentOrderByWithRelationInput | TransactionPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransactionPayments.
     */
    cursor?: TransactionPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionPayments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransactionPayments.
     */
    distinct?: TransactionPaymentScalarFieldEnum | TransactionPaymentScalarFieldEnum[]
  }

  /**
   * TransactionPayment findFirstOrThrow
   */
  export type TransactionPaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentInclude<ExtArgs> | null
    /**
     * Filter, which TransactionPayment to fetch.
     */
    where?: TransactionPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionPayments to fetch.
     */
    orderBy?: TransactionPaymentOrderByWithRelationInput | TransactionPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransactionPayments.
     */
    cursor?: TransactionPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionPayments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransactionPayments.
     */
    distinct?: TransactionPaymentScalarFieldEnum | TransactionPaymentScalarFieldEnum[]
  }

  /**
   * TransactionPayment findMany
   */
  export type TransactionPaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentInclude<ExtArgs> | null
    /**
     * Filter, which TransactionPayments to fetch.
     */
    where?: TransactionPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransactionPayments to fetch.
     */
    orderBy?: TransactionPaymentOrderByWithRelationInput | TransactionPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TransactionPayments.
     */
    cursor?: TransactionPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransactionPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransactionPayments.
     */
    skip?: number
    distinct?: TransactionPaymentScalarFieldEnum | TransactionPaymentScalarFieldEnum[]
  }

  /**
   * TransactionPayment create
   */
  export type TransactionPaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a TransactionPayment.
     */
    data: XOR<TransactionPaymentCreateInput, TransactionPaymentUncheckedCreateInput>
  }

  /**
   * TransactionPayment createMany
   */
  export type TransactionPaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TransactionPayments.
     */
    data: TransactionPaymentCreateManyInput | TransactionPaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TransactionPayment createManyAndReturn
   */
  export type TransactionPaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * The data used to create many TransactionPayments.
     */
    data: TransactionPaymentCreateManyInput | TransactionPaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TransactionPayment update
   */
  export type TransactionPaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a TransactionPayment.
     */
    data: XOR<TransactionPaymentUpdateInput, TransactionPaymentUncheckedUpdateInput>
    /**
     * Choose, which TransactionPayment to update.
     */
    where: TransactionPaymentWhereUniqueInput
  }

  /**
   * TransactionPayment updateMany
   */
  export type TransactionPaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TransactionPayments.
     */
    data: XOR<TransactionPaymentUpdateManyMutationInput, TransactionPaymentUncheckedUpdateManyInput>
    /**
     * Filter which TransactionPayments to update
     */
    where?: TransactionPaymentWhereInput
  }

  /**
   * TransactionPayment upsert
   */
  export type TransactionPaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the TransactionPayment to update in case it exists.
     */
    where: TransactionPaymentWhereUniqueInput
    /**
     * In case the TransactionPayment found by the `where` argument doesn't exist, create a new TransactionPayment with this data.
     */
    create: XOR<TransactionPaymentCreateInput, TransactionPaymentUncheckedCreateInput>
    /**
     * In case the TransactionPayment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransactionPaymentUpdateInput, TransactionPaymentUncheckedUpdateInput>
  }

  /**
   * TransactionPayment delete
   */
  export type TransactionPaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentInclude<ExtArgs> | null
    /**
     * Filter which TransactionPayment to delete.
     */
    where: TransactionPaymentWhereUniqueInput
  }

  /**
   * TransactionPayment deleteMany
   */
  export type TransactionPaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransactionPayments to delete
     */
    where?: TransactionPaymentWhereInput
  }

  /**
   * TransactionPayment without action
   */
  export type TransactionPaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentInclude<ExtArgs> | null
  }


  /**
   * Model Transactions
   */

  export type AggregateTransactions = {
    _count: TransactionsCountAggregateOutputType | null
    _avg: TransactionsAvgAggregateOutputType | null
    _sum: TransactionsSumAggregateOutputType | null
    _min: TransactionsMinAggregateOutputType | null
    _max: TransactionsMaxAggregateOutputType | null
  }

  export type TransactionsAvgAggregateOutputType = {
    subtotal: Decimal | null
    discount_ammount: Decimal | null
    total: Decimal | null
    grand_total: Decimal | null
  }

  export type TransactionsSumAggregateOutputType = {
    subtotal: Decimal | null
    discount_ammount: Decimal | null
    total: Decimal | null
    grand_total: Decimal | null
  }

  export type TransactionsMinAggregateOutputType = {
    id: string | null
    status: $Enums.TransactionStatus | null
    customer_id: string | null
    address_id: string | null
    project_id: string | null
    product_id: string | null
    subscription_id: string | null
    subtotal: Decimal | null
    discount_ammount: Decimal | null
    total: Decimal | null
    grand_total: Decimal | null
    discount_id: string | null
    invoice_id: string | null
    current_period_starts: Date | null
    current_period_ends: Date | null
    currency_code: string | null
    collection_mode: $Enums.CollectionMode | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TransactionsMaxAggregateOutputType = {
    id: string | null
    status: $Enums.TransactionStatus | null
    customer_id: string | null
    address_id: string | null
    project_id: string | null
    product_id: string | null
    subscription_id: string | null
    subtotal: Decimal | null
    discount_ammount: Decimal | null
    total: Decimal | null
    grand_total: Decimal | null
    discount_id: string | null
    invoice_id: string | null
    current_period_starts: Date | null
    current_period_ends: Date | null
    currency_code: string | null
    collection_mode: $Enums.CollectionMode | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TransactionsCountAggregateOutputType = {
    id: number
    status: number
    customer_id: number
    address_id: number
    project_id: number
    product_id: number
    subscription_id: number
    subtotal: number
    discount_ammount: number
    total: number
    grand_total: number
    discount_id: number
    invoice_id: number
    current_period_starts: number
    current_period_ends: number
    custom_data: number
    currency_code: number
    collection_mode: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type TransactionsAvgAggregateInputType = {
    subtotal?: true
    discount_ammount?: true
    total?: true
    grand_total?: true
  }

  export type TransactionsSumAggregateInputType = {
    subtotal?: true
    discount_ammount?: true
    total?: true
    grand_total?: true
  }

  export type TransactionsMinAggregateInputType = {
    id?: true
    status?: true
    customer_id?: true
    address_id?: true
    project_id?: true
    product_id?: true
    subscription_id?: true
    subtotal?: true
    discount_ammount?: true
    total?: true
    grand_total?: true
    discount_id?: true
    invoice_id?: true
    current_period_starts?: true
    current_period_ends?: true
    currency_code?: true
    collection_mode?: true
    created_at?: true
    updated_at?: true
  }

  export type TransactionsMaxAggregateInputType = {
    id?: true
    status?: true
    customer_id?: true
    address_id?: true
    project_id?: true
    product_id?: true
    subscription_id?: true
    subtotal?: true
    discount_ammount?: true
    total?: true
    grand_total?: true
    discount_id?: true
    invoice_id?: true
    current_period_starts?: true
    current_period_ends?: true
    currency_code?: true
    collection_mode?: true
    created_at?: true
    updated_at?: true
  }

  export type TransactionsCountAggregateInputType = {
    id?: true
    status?: true
    customer_id?: true
    address_id?: true
    project_id?: true
    product_id?: true
    subscription_id?: true
    subtotal?: true
    discount_ammount?: true
    total?: true
    grand_total?: true
    discount_id?: true
    invoice_id?: true
    current_period_starts?: true
    current_period_ends?: true
    custom_data?: true
    currency_code?: true
    collection_mode?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type TransactionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transactions to aggregate.
     */
    where?: TransactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionsOrderByWithRelationInput | TransactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transactions
    **/
    _count?: true | TransactionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransactionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransactionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransactionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransactionsMaxAggregateInputType
  }

  export type GetTransactionsAggregateType<T extends TransactionsAggregateArgs> = {
        [P in keyof T & keyof AggregateTransactions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransactions[P]>
      : GetScalarType<T[P], AggregateTransactions[P]>
  }




  export type TransactionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionsWhereInput
    orderBy?: TransactionsOrderByWithAggregationInput | TransactionsOrderByWithAggregationInput[]
    by: TransactionsScalarFieldEnum[] | TransactionsScalarFieldEnum
    having?: TransactionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransactionsCountAggregateInputType | true
    _avg?: TransactionsAvgAggregateInputType
    _sum?: TransactionsSumAggregateInputType
    _min?: TransactionsMinAggregateInputType
    _max?: TransactionsMaxAggregateInputType
  }

  export type TransactionsGroupByOutputType = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    project_id: string
    product_id: string
    subscription_id: string | null
    subtotal: Decimal
    discount_ammount: Decimal
    total: Decimal
    grand_total: Decimal
    discount_id: string | null
    invoice_id: string
    current_period_starts: Date | null
    current_period_ends: Date | null
    custom_data: JsonValue | null
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at: Date
    updated_at: Date | null
    _count: TransactionsCountAggregateOutputType | null
    _avg: TransactionsAvgAggregateOutputType | null
    _sum: TransactionsSumAggregateOutputType | null
    _min: TransactionsMinAggregateOutputType | null
    _max: TransactionsMaxAggregateOutputType | null
  }

  type GetTransactionsGroupByPayload<T extends TransactionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransactionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransactionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransactionsGroupByOutputType[P]>
            : GetScalarType<T[P], TransactionsGroupByOutputType[P]>
        }
      >
    >


  export type TransactionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    customer_id?: boolean
    address_id?: boolean
    project_id?: boolean
    product_id?: boolean
    subscription_id?: boolean
    subtotal?: boolean
    discount_ammount?: boolean
    total?: boolean
    grand_total?: boolean
    discount_id?: boolean
    invoice_id?: boolean
    current_period_starts?: boolean
    current_period_ends?: boolean
    custom_data?: boolean
    currency_code?: boolean
    collection_mode?: boolean
    created_at?: boolean
    updated_at?: boolean
    customer?: boolean | CustomersDefaultArgs<ExtArgs>
    address?: boolean | AddressesDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
    product?: boolean | ProductsDefaultArgs<ExtArgs>
    subscription?: boolean | Transactions$subscriptionArgs<ExtArgs>
    TransactionPayment?: boolean | Transactions$TransactionPaymentArgs<ExtArgs>
    transactionItems?: boolean | Transactions$transactionItemsArgs<ExtArgs>
    discount?: boolean | Transactions$discountArgs<ExtArgs>
    _count?: boolean | TransactionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transactions"]>

  export type TransactionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    customer_id?: boolean
    address_id?: boolean
    project_id?: boolean
    product_id?: boolean
    subscription_id?: boolean
    subtotal?: boolean
    discount_ammount?: boolean
    total?: boolean
    grand_total?: boolean
    discount_id?: boolean
    invoice_id?: boolean
    current_period_starts?: boolean
    current_period_ends?: boolean
    custom_data?: boolean
    currency_code?: boolean
    collection_mode?: boolean
    created_at?: boolean
    updated_at?: boolean
    customer?: boolean | CustomersDefaultArgs<ExtArgs>
    address?: boolean | AddressesDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
    product?: boolean | ProductsDefaultArgs<ExtArgs>
    subscription?: boolean | Transactions$subscriptionArgs<ExtArgs>
    discount?: boolean | Transactions$discountArgs<ExtArgs>
  }, ExtArgs["result"]["transactions"]>


  export type TransactionsSelectScalar = {
    id?: boolean
    status?: boolean
    customer_id?: boolean
    address_id?: boolean
    project_id?: boolean
    product_id?: boolean
    subscription_id?: boolean
    subtotal?: boolean
    discount_ammount?: boolean
    total?: boolean
    grand_total?: boolean
    discount_id?: boolean
    invoice_id?: boolean
    current_period_starts?: boolean
    current_period_ends?: boolean
    custom_data?: boolean
    currency_code?: boolean
    collection_mode?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type TransactionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "customer_id" | "address_id" | "project_id" | "product_id" | "subscription_id" | "subtotal" | "discount_ammount" | "total" | "grand_total" | "discount_id" | "invoice_id" | "current_period_starts" | "current_period_ends" | "custom_data" | "currency_code" | "collection_mode" | "created_at" | "updated_at", ExtArgs["result"]["transactions"]>
  export type TransactionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomersDefaultArgs<ExtArgs>
    address?: boolean | AddressesDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
    product?: boolean | ProductsDefaultArgs<ExtArgs>
    subscription?: boolean | Transactions$subscriptionArgs<ExtArgs>
    TransactionPayment?: boolean | Transactions$TransactionPaymentArgs<ExtArgs>
    transactionItems?: boolean | Transactions$transactionItemsArgs<ExtArgs>
    discount?: boolean | Transactions$discountArgs<ExtArgs>
    _count?: boolean | TransactionsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TransactionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomersDefaultArgs<ExtArgs>
    address?: boolean | AddressesDefaultArgs<ExtArgs>
    project?: boolean | ProjectDefaultArgs<ExtArgs>
    product?: boolean | ProductsDefaultArgs<ExtArgs>
    subscription?: boolean | Transactions$subscriptionArgs<ExtArgs>
    discount?: boolean | Transactions$discountArgs<ExtArgs>
  }

  export type $TransactionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transactions"
    objects: {
      customer: Prisma.$CustomersPayload<ExtArgs>
      address: Prisma.$AddressesPayload<ExtArgs>
      project: Prisma.$ProjectPayload<ExtArgs>
      product: Prisma.$ProductsPayload<ExtArgs>
      subscription: Prisma.$SubscriptionsPayload<ExtArgs> | null
      TransactionPayment: Prisma.$TransactionPaymentPayload<ExtArgs> | null
      transactionItems: Prisma.$TransactionItemsPayload<ExtArgs>[]
      discount: Prisma.$DiscountsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: $Enums.TransactionStatus
      customer_id: string
      address_id: string
      project_id: string
      product_id: string
      subscription_id: string | null
      subtotal: Prisma.Decimal
      discount_ammount: Prisma.Decimal
      total: Prisma.Decimal
      grand_total: Prisma.Decimal
      discount_id: string | null
      invoice_id: string
      current_period_starts: Date | null
      current_period_ends: Date | null
      custom_data: Prisma.JsonValue | null
      currency_code: string
      collection_mode: $Enums.CollectionMode
      created_at: Date
      updated_at: Date | null
    }, ExtArgs["result"]["transactions"]>
    composites: {}
  }

  type TransactionsGetPayload<S extends boolean | null | undefined | TransactionsDefaultArgs> = $Result.GetResult<Prisma.$TransactionsPayload, S>

  type TransactionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransactionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransactionsCountAggregateInputType | true
    }

  export interface TransactionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transactions'], meta: { name: 'Transactions' } }
    /**
     * Find zero or one Transactions that matches the filter.
     * @param {TransactionsFindUniqueArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransactionsFindUniqueArgs>(args: SelectSubset<T, TransactionsFindUniqueArgs<ExtArgs>>): Prisma__TransactionsClient<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Transactions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransactionsFindUniqueOrThrowArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransactionsFindUniqueOrThrowArgs>(args: SelectSubset<T, TransactionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransactionsClient<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionsFindFirstArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransactionsFindFirstArgs>(args?: SelectSubset<T, TransactionsFindFirstArgs<ExtArgs>>): Prisma__TransactionsClient<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Transactions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionsFindFirstOrThrowArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransactionsFindFirstOrThrowArgs>(args?: SelectSubset<T, TransactionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransactionsClient<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transactions
     * const transactions = await prisma.transactions.findMany()
     * 
     * // Get first 10 Transactions
     * const transactions = await prisma.transactions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transactionsWithIdOnly = await prisma.transactions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransactionsFindManyArgs>(args?: SelectSubset<T, TransactionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Transactions.
     * @param {TransactionsCreateArgs} args - Arguments to create a Transactions.
     * @example
     * // Create one Transactions
     * const Transactions = await prisma.transactions.create({
     *   data: {
     *     // ... data to create a Transactions
     *   }
     * })
     * 
     */
    create<T extends TransactionsCreateArgs>(args: SelectSubset<T, TransactionsCreateArgs<ExtArgs>>): Prisma__TransactionsClient<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Transactions.
     * @param {TransactionsCreateManyArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transactions = await prisma.transactions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransactionsCreateManyArgs>(args?: SelectSubset<T, TransactionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transactions and returns the data saved in the database.
     * @param {TransactionsCreateManyAndReturnArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transactions = await prisma.transactions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transactions and only return the `id`
     * const transactionsWithIdOnly = await prisma.transactions.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransactionsCreateManyAndReturnArgs>(args?: SelectSubset<T, TransactionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Transactions.
     * @param {TransactionsDeleteArgs} args - Arguments to delete one Transactions.
     * @example
     * // Delete one Transactions
     * const Transactions = await prisma.transactions.delete({
     *   where: {
     *     // ... filter to delete one Transactions
     *   }
     * })
     * 
     */
    delete<T extends TransactionsDeleteArgs>(args: SelectSubset<T, TransactionsDeleteArgs<ExtArgs>>): Prisma__TransactionsClient<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Transactions.
     * @param {TransactionsUpdateArgs} args - Arguments to update one Transactions.
     * @example
     * // Update one Transactions
     * const transactions = await prisma.transactions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransactionsUpdateArgs>(args: SelectSubset<T, TransactionsUpdateArgs<ExtArgs>>): Prisma__TransactionsClient<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Transactions.
     * @param {TransactionsDeleteManyArgs} args - Arguments to filter Transactions to delete.
     * @example
     * // Delete a few Transactions
     * const { count } = await prisma.transactions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransactionsDeleteManyArgs>(args?: SelectSubset<T, TransactionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transactions
     * const transactions = await prisma.transactions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransactionsUpdateManyArgs>(args: SelectSubset<T, TransactionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Transactions.
     * @param {TransactionsUpsertArgs} args - Arguments to update or create a Transactions.
     * @example
     * // Update or create a Transactions
     * const transactions = await prisma.transactions.upsert({
     *   create: {
     *     // ... data to create a Transactions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transactions we want to update
     *   }
     * })
     */
    upsert<T extends TransactionsUpsertArgs>(args: SelectSubset<T, TransactionsUpsertArgs<ExtArgs>>): Prisma__TransactionsClient<$Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionsCountArgs} args - Arguments to filter Transactions to count.
     * @example
     * // Count the number of Transactions
     * const count = await prisma.transactions.count({
     *   where: {
     *     // ... the filter for the Transactions we want to count
     *   }
     * })
    **/
    count<T extends TransactionsCountArgs>(
      args?: Subset<T, TransactionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransactionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransactionsAggregateArgs>(args: Subset<T, TransactionsAggregateArgs>): Prisma.PrismaPromise<GetTransactionsAggregateType<T>>

    /**
     * Group by Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransactionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransactionsGroupByArgs['orderBy'] }
        : { orderBy?: TransactionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransactionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransactionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transactions model
   */
  readonly fields: TransactionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transactions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransactionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends CustomersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomersDefaultArgs<ExtArgs>>): Prisma__CustomersClient<$Result.GetResult<Prisma.$CustomersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    address<T extends AddressesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AddressesDefaultArgs<ExtArgs>>): Prisma__AddressesClient<$Result.GetResult<Prisma.$AddressesPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    project<T extends ProjectDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProjectDefaultArgs<ExtArgs>>): Prisma__ProjectClient<$Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    product<T extends ProductsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductsDefaultArgs<ExtArgs>>): Prisma__ProductsClient<$Result.GetResult<Prisma.$ProductsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    subscription<T extends Transactions$subscriptionArgs<ExtArgs> = {}>(args?: Subset<T, Transactions$subscriptionArgs<ExtArgs>>): Prisma__SubscriptionsClient<$Result.GetResult<Prisma.$SubscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    TransactionPayment<T extends Transactions$TransactionPaymentArgs<ExtArgs> = {}>(args?: Subset<T, Transactions$TransactionPaymentArgs<ExtArgs>>): Prisma__TransactionPaymentClient<$Result.GetResult<Prisma.$TransactionPaymentPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    transactionItems<T extends Transactions$transactionItemsArgs<ExtArgs> = {}>(args?: Subset<T, Transactions$transactionItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionItemsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    discount<T extends Transactions$discountArgs<ExtArgs> = {}>(args?: Subset<T, Transactions$discountArgs<ExtArgs>>): Prisma__DiscountsClient<$Result.GetResult<Prisma.$DiscountsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transactions model
   */ 
  interface TransactionsFieldRefs {
    readonly id: FieldRef<"Transactions", 'String'>
    readonly status: FieldRef<"Transactions", 'TransactionStatus'>
    readonly customer_id: FieldRef<"Transactions", 'String'>
    readonly address_id: FieldRef<"Transactions", 'String'>
    readonly project_id: FieldRef<"Transactions", 'String'>
    readonly product_id: FieldRef<"Transactions", 'String'>
    readonly subscription_id: FieldRef<"Transactions", 'String'>
    readonly subtotal: FieldRef<"Transactions", 'Decimal'>
    readonly discount_ammount: FieldRef<"Transactions", 'Decimal'>
    readonly total: FieldRef<"Transactions", 'Decimal'>
    readonly grand_total: FieldRef<"Transactions", 'Decimal'>
    readonly discount_id: FieldRef<"Transactions", 'String'>
    readonly invoice_id: FieldRef<"Transactions", 'String'>
    readonly current_period_starts: FieldRef<"Transactions", 'DateTime'>
    readonly current_period_ends: FieldRef<"Transactions", 'DateTime'>
    readonly custom_data: FieldRef<"Transactions", 'Json'>
    readonly currency_code: FieldRef<"Transactions", 'String'>
    readonly collection_mode: FieldRef<"Transactions", 'CollectionMode'>
    readonly created_at: FieldRef<"Transactions", 'DateTime'>
    readonly updated_at: FieldRef<"Transactions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Transactions findUnique
   */
  export type TransactionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    /**
     * Filter, which Transactions to fetch.
     */
    where: TransactionsWhereUniqueInput
  }

  /**
   * Transactions findUniqueOrThrow
   */
  export type TransactionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    /**
     * Filter, which Transactions to fetch.
     */
    where: TransactionsWhereUniqueInput
  }

  /**
   * Transactions findFirst
   */
  export type TransactionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    /**
     * Filter, which Transactions to fetch.
     */
    where?: TransactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionsOrderByWithRelationInput | TransactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transactions.
     */
    cursor?: TransactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transactions.
     */
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * Transactions findFirstOrThrow
   */
  export type TransactionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    /**
     * Filter, which Transactions to fetch.
     */
    where?: TransactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionsOrderByWithRelationInput | TransactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transactions.
     */
    cursor?: TransactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transactions.
     */
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * Transactions findMany
   */
  export type TransactionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    /**
     * Filter, which Transactions to fetch.
     */
    where?: TransactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionsOrderByWithRelationInput | TransactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transactions.
     */
    cursor?: TransactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * Transactions create
   */
  export type TransactionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    /**
     * The data needed to create a Transactions.
     */
    data: XOR<TransactionsCreateInput, TransactionsUncheckedCreateInput>
  }

  /**
   * Transactions createMany
   */
  export type TransactionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transactions.
     */
    data: TransactionsCreateManyInput | TransactionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transactions createManyAndReturn
   */
  export type TransactionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * The data used to create many Transactions.
     */
    data: TransactionsCreateManyInput | TransactionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transactions update
   */
  export type TransactionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    /**
     * The data needed to update a Transactions.
     */
    data: XOR<TransactionsUpdateInput, TransactionsUncheckedUpdateInput>
    /**
     * Choose, which Transactions to update.
     */
    where: TransactionsWhereUniqueInput
  }

  /**
   * Transactions updateMany
   */
  export type TransactionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transactions.
     */
    data: XOR<TransactionsUpdateManyMutationInput, TransactionsUncheckedUpdateManyInput>
    /**
     * Filter which Transactions to update
     */
    where?: TransactionsWhereInput
  }

  /**
   * Transactions upsert
   */
  export type TransactionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    /**
     * The filter to search for the Transactions to update in case it exists.
     */
    where: TransactionsWhereUniqueInput
    /**
     * In case the Transactions found by the `where` argument doesn't exist, create a new Transactions with this data.
     */
    create: XOR<TransactionsCreateInput, TransactionsUncheckedCreateInput>
    /**
     * In case the Transactions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransactionsUpdateInput, TransactionsUncheckedUpdateInput>
  }

  /**
   * Transactions delete
   */
  export type TransactionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
    /**
     * Filter which Transactions to delete.
     */
    where: TransactionsWhereUniqueInput
  }

  /**
   * Transactions deleteMany
   */
  export type TransactionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transactions to delete
     */
    where?: TransactionsWhereInput
  }

  /**
   * Transactions.subscription
   */
  export type Transactions$subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscriptions
     */
    select?: SubscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscriptions
     */
    omit?: SubscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionsInclude<ExtArgs> | null
    where?: SubscriptionsWhereInput
  }

  /**
   * Transactions.TransactionPayment
   */
  export type Transactions$TransactionPaymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionPayment
     */
    select?: TransactionPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionPayment
     */
    omit?: TransactionPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionPaymentInclude<ExtArgs> | null
    where?: TransactionPaymentWhereInput
  }

  /**
   * Transactions.transactionItems
   */
  export type Transactions$transactionItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionItems
     */
    select?: TransactionItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TransactionItems
     */
    omit?: TransactionItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionItemsInclude<ExtArgs> | null
    where?: TransactionItemsWhereInput
    orderBy?: TransactionItemsOrderByWithRelationInput | TransactionItemsOrderByWithRelationInput[]
    cursor?: TransactionItemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionItemsScalarFieldEnum | TransactionItemsScalarFieldEnum[]
  }

  /**
   * Transactions.discount
   */
  export type Transactions$discountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discounts
     */
    select?: DiscountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discounts
     */
    omit?: DiscountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountsInclude<ExtArgs> | null
    where?: DiscountsWhereInput
  }

  /**
   * Transactions without action
   */
  export type TransactionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transactions
     */
    select?: TransactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transactions
     */
    omit?: TransactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ProjectScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    logo: 'logo',
    plan: 'plan',
    billingCycleStart: 'billingCycleStart',
    inviteCode: 'inviteCode',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    usageLastChecked: 'usageLastChecked'
  };

  export type ProjectScalarFieldEnum = (typeof ProjectScalarFieldEnum)[keyof typeof ProjectScalarFieldEnum]


  export const ProjectUsersScalarFieldEnum: {
    id: 'id',
    role: 'role',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId',
    projectId: 'projectId'
  };

  export type ProjectUsersScalarFieldEnum = (typeof ProjectUsersScalarFieldEnum)[keyof typeof ProjectUsersScalarFieldEnum]


  export const ProjectInviteScalarFieldEnum: {
    email: 'email',
    expires: 'expires',
    projectId: 'projectId',
    createdAt: 'createdAt'
  };

  export type ProjectInviteScalarFieldEnum = (typeof ProjectInviteScalarFieldEnum)[keyof typeof ProjectInviteScalarFieldEnum]


  export const SentEmailScalarFieldEnum: {
    id: 'id',
    type: 'type',
    createdAt: 'createdAt',
    projectId: 'projectId'
  };

  export type SentEmailScalarFieldEnum = (typeof SentEmailScalarFieldEnum)[keyof typeof SentEmailScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    emailVerified: 'emailVerified',
    image: 'image',
    source: 'source',
    defaultWorkspace: 'defaultWorkspace',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    userId: 'userId',
    type: 'type',
    provider: 'provider',
    providerAccountId: 'providerAccountId',
    refresh_token: 'refresh_token',
    access_token: 'access_token',
    expires_at: 'expires_at',
    token_type: 'token_type',
    scope: 'scope',
    id_token: 'id_token',
    session_state: 'session_state',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    sessionToken: 'sessionToken',
    userId: 'userId',
    expires: 'expires',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const VerificationTokenScalarFieldEnum: {
    identifier: 'identifier',
    token: 'token',
    expires: 'expires'
  };

  export type VerificationTokenScalarFieldEnum = (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum]


  export const ProductsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    custom_data: 'custom_data',
    project_id: 'project_id'
  };

  export type ProductsScalarFieldEnum = (typeof ProductsScalarFieldEnum)[keyof typeof ProductsScalarFieldEnum]


  export const Api_keysScalarFieldEnum: {
    id: 'id',
    prefix: 'prefix',
    description: 'description',
    createdAt: 'createdAt',
    key: 'key',
    userId: 'userId'
  };

  export type Api_keysScalarFieldEnum = (typeof Api_keysScalarFieldEnum)[keyof typeof Api_keysScalarFieldEnum]


  export const PricesScalarFieldEnum: {
    id: 'id',
    type: 'type',
    description: 'description',
    name: 'name',
    billing_cycle_frequency: 'billing_cycle_frequency',
    billing_cycle_interval: 'billing_cycle_interval',
    trial_period_frequency: 'trial_period_frequency',
    trial_period_interval: 'trial_period_interval',
    amount: 'amount',
    currency_code: 'currency_code',
    custom_data: 'custom_data',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    product_id: 'product_id',
    projectId: 'projectId'
  };

  export type PricesScalarFieldEnum = (typeof PricesScalarFieldEnum)[keyof typeof PricesScalarFieldEnum]


  export const DiscountsScalarFieldEnum: {
    id: 'id',
    status: 'status',
    description: 'description',
    enabled_for_checkout: 'enabled_for_checkout',
    amount: 'amount',
    currency_code: 'currency_code',
    type: 'type',
    recur: 'recur',
    max_recurring_intervals: 'max_recurring_intervals',
    usage_limit: 'usage_limit',
    expires_at: 'expires_at',
    custom_data: 'custom_data',
    times_used: 'times_used',
    created_at: 'created_at',
    updated_at: 'updated_at',
    projectId: 'projectId'
  };

  export type DiscountsScalarFieldEnum = (typeof DiscountsScalarFieldEnum)[keyof typeof DiscountsScalarFieldEnum]


  export const Discount_PricesScalarFieldEnum: {
    discount_Id: 'discount_Id',
    price_id: 'price_id'
  };

  export type Discount_PricesScalarFieldEnum = (typeof Discount_PricesScalarFieldEnum)[keyof typeof Discount_PricesScalarFieldEnum]


  export const CustomersScalarFieldEnum: {
    id: 'id',
    email: 'email',
    name: 'name',
    status: 'status',
    description: 'description',
    custom_data: 'custom_data',
    created_at: 'created_at',
    updated_at: 'updated_at',
    projectId: 'projectId'
  };

  export type CustomersScalarFieldEnum = (typeof CustomersScalarFieldEnum)[keyof typeof CustomersScalarFieldEnum]


  export const AddressesScalarFieldEnum: {
    id: 'id',
    description: 'description',
    first_line: 'first_line',
    custom_data: 'custom_data',
    city: 'city',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    customer_id: 'customer_id'
  };

  export type AddressesScalarFieldEnum = (typeof AddressesScalarFieldEnum)[keyof typeof AddressesScalarFieldEnum]


  export const SubscriptionItemsScalarFieldEnum: {
    id: 'id',
    subscription_id: 'subscription_id',
    price_id: 'price_id',
    quantity: 'quantity',
    status: 'status',
    recurring: 'recurring',
    created_at: 'created_at',
    updated_at: 'updated_at',
    previously_billed_at: 'previously_billed_at',
    next_billed_at: 'next_billed_at',
    trial_started_at: 'trial_started_at',
    trial_ended_at: 'trial_ended_at',
    custom_data: 'custom_data'
  };

  export type SubscriptionItemsScalarFieldEnum = (typeof SubscriptionItemsScalarFieldEnum)[keyof typeof SubscriptionItemsScalarFieldEnum]


  export const Subscription_Scheduled_ChangesScalarFieldEnum: {
    id: 'id',
    subscription_id: 'subscription_id',
    action: 'action',
    effective_at: 'effective_at',
    resumes_at: 'resumes_at',
    status: 'status'
  };

  export type Subscription_Scheduled_ChangesScalarFieldEnum = (typeof Subscription_Scheduled_ChangesScalarFieldEnum)[keyof typeof Subscription_Scheduled_ChangesScalarFieldEnum]


  export const BillingDetailsScalarFieldEnum: {
    id: 'id',
    subscription_id: 'subscription_id',
    payment_interval: 'payment_interval',
    payment_frequency: 'payment_frequency',
    enable_checkout: 'enable_checkout',
    purchase_order_number: 'purchase_order_number',
    additional_information: 'additional_information',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type BillingDetailsScalarFieldEnum = (typeof BillingDetailsScalarFieldEnum)[keyof typeof BillingDetailsScalarFieldEnum]


  export const SubscriptionsScalarFieldEnum: {
    id: 'id',
    status: 'status',
    currency_code: 'currency_code',
    created_at: 'created_at',
    updated_at: 'updated_at',
    started_at: 'started_at',
    first_billed_at: 'first_billed_at',
    next_billed_at: 'next_billed_at',
    paused_at: 'paused_at',
    canceled_at: 'canceled_at',
    current_period_starts: 'current_period_starts',
    current_period_ends: 'current_period_ends',
    billing_cycle_interval: 'billing_cycle_interval',
    billing_cycle_frequency: 'billing_cycle_frequency',
    update_payment_method_url: 'update_payment_method_url',
    cancel_url: 'cancel_url',
    customer_id: 'customer_id',
    address_id: 'address_id',
    project_id: 'project_id',
    discount_id: 'discount_id',
    collection_mode: 'collection_mode'
  };

  export type SubscriptionsScalarFieldEnum = (typeof SubscriptionsScalarFieldEnum)[keyof typeof SubscriptionsScalarFieldEnum]


  export const TransactionItemsScalarFieldEnum: {
    id: 'id',
    price_id: 'price_id',
    quantity: 'quantity',
    transactionsId: 'transactionsId'
  };

  export type TransactionItemsScalarFieldEnum = (typeof TransactionItemsScalarFieldEnum)[keyof typeof TransactionItemsScalarFieldEnum]


  export const TransactionPaymentScalarFieldEnum: {
    id: 'id',
    transaction_id: 'transaction_id',
    payment_method: 'payment_method',
    payment_provider: 'payment_provider',
    status: 'status',
    amount: 'amount',
    currency_code: 'currency_code',
    mobile_network: 'mobile_network',
    phone_suffix: 'phone_suffix',
    card_last4: 'card_last4',
    card_brand: 'card_brand',
    card_exp_month: 'card_exp_month',
    card_exp_year: 'card_exp_year',
    card_holder_name: 'card_holder_name',
    bank_reference: 'bank_reference',
    bank_name: 'bank_name',
    provider_reference: 'provider_reference',
    provider_metadata: 'provider_metadata',
    error_message: 'error_message',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type TransactionPaymentScalarFieldEnum = (typeof TransactionPaymentScalarFieldEnum)[keyof typeof TransactionPaymentScalarFieldEnum]


  export const TransactionsScalarFieldEnum: {
    id: 'id',
    status: 'status',
    customer_id: 'customer_id',
    address_id: 'address_id',
    project_id: 'project_id',
    product_id: 'product_id',
    subscription_id: 'subscription_id',
    subtotal: 'subtotal',
    discount_ammount: 'discount_ammount',
    total: 'total',
    grand_total: 'grand_total',
    discount_id: 'discount_id',
    invoice_id: 'invoice_id',
    current_period_starts: 'current_period_starts',
    current_period_ends: 'current_period_ends',
    custom_data: 'custom_data',
    currency_code: 'currency_code',
    collection_mode: 'collection_mode',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type TransactionsScalarFieldEnum = (typeof TransactionsScalarFieldEnum)[keyof typeof TransactionsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Role[]'
   */
  export type ListEnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role[]'>
    


  /**
   * Reference to a field of type 'product_status'
   */
  export type Enumproduct_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'product_status'>
    


  /**
   * Reference to a field of type 'product_status[]'
   */
  export type ListEnumproduct_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'product_status[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'PriceType'
   */
  export type EnumPriceTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PriceType'>
    


  /**
   * Reference to a field of type 'PriceType[]'
   */
  export type ListEnumPriceTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PriceType[]'>
    


  /**
   * Reference to a field of type 'BillingInterval'
   */
  export type EnumBillingIntervalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BillingInterval'>
    


  /**
   * Reference to a field of type 'BillingInterval[]'
   */
  export type ListEnumBillingIntervalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BillingInterval[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Entity_Status'
   */
  export type EnumEntity_StatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Entity_Status'>
    


  /**
   * Reference to a field of type 'Entity_Status[]'
   */
  export type ListEnumEntity_StatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Entity_Status[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Discount_type'
   */
  export type EnumDiscount_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Discount_type'>
    


  /**
   * Reference to a field of type 'Discount_type[]'
   */
  export type ListEnumDiscount_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Discount_type[]'>
    


  /**
   * Reference to a field of type 'SubscriptionItemsStatus'
   */
  export type EnumSubscriptionItemsStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionItemsStatus'>
    


  /**
   * Reference to a field of type 'SubscriptionItemsStatus[]'
   */
  export type ListEnumSubscriptionItemsStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionItemsStatus[]'>
    


  /**
   * Reference to a field of type 'ScheduledChangeAction'
   */
  export type EnumScheduledChangeActionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScheduledChangeAction'>
    


  /**
   * Reference to a field of type 'ScheduledChangeAction[]'
   */
  export type ListEnumScheduledChangeActionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScheduledChangeAction[]'>
    


  /**
   * Reference to a field of type 'ScheduledChangesStatus'
   */
  export type EnumScheduledChangesStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScheduledChangesStatus'>
    


  /**
   * Reference to a field of type 'ScheduledChangesStatus[]'
   */
  export type ListEnumScheduledChangesStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScheduledChangesStatus[]'>
    


  /**
   * Reference to a field of type 'SubscriptionsStatus'
   */
  export type EnumSubscriptionsStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionsStatus'>
    


  /**
   * Reference to a field of type 'SubscriptionsStatus[]'
   */
  export type ListEnumSubscriptionsStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionsStatus[]'>
    


  /**
   * Reference to a field of type 'CollectionMode'
   */
  export type EnumCollectionModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CollectionMode'>
    


  /**
   * Reference to a field of type 'CollectionMode[]'
   */
  export type ListEnumCollectionModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CollectionMode[]'>
    


  /**
   * Reference to a field of type 'PaymentMethod'
   */
  export type EnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod'>
    


  /**
   * Reference to a field of type 'PaymentMethod[]'
   */
  export type ListEnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod[]'>
    


  /**
   * Reference to a field of type 'PaymentProvider'
   */
  export type EnumPaymentProviderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentProvider'>
    


  /**
   * Reference to a field of type 'PaymentProvider[]'
   */
  export type ListEnumPaymentProviderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentProvider[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    


  /**
   * Reference to a field of type 'TransactionStatus'
   */
  export type EnumTransactionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionStatus'>
    


  /**
   * Reference to a field of type 'TransactionStatus[]'
   */
  export type ListEnumTransactionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type ProjectWhereInput = {
    AND?: ProjectWhereInput | ProjectWhereInput[]
    OR?: ProjectWhereInput[]
    NOT?: ProjectWhereInput | ProjectWhereInput[]
    id?: StringFilter<"Project"> | string
    name?: StringFilter<"Project"> | string
    slug?: StringFilter<"Project"> | string
    logo?: StringNullableFilter<"Project"> | string | null
    plan?: StringFilter<"Project"> | string
    billingCycleStart?: IntFilter<"Project"> | number
    inviteCode?: StringNullableFilter<"Project"> | string | null
    createdAt?: DateTimeFilter<"Project"> | Date | string
    updatedAt?: DateTimeFilter<"Project"> | Date | string
    usageLastChecked?: DateTimeFilter<"Project"> | Date | string
    users?: ProjectUsersListRelationFilter
    invites?: ProjectInviteListRelationFilter
    sentEmails?: SentEmailListRelationFilter
    products?: ProductsListRelationFilter
    prices?: PricesListRelationFilter
    discounts?: DiscountsListRelationFilter
    customers?: CustomersListRelationFilter
    Subscriptions?: SubscriptionsListRelationFilter
    Transactions?: TransactionsListRelationFilter
  }

  export type ProjectOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrderInput | SortOrder
    plan?: SortOrder
    billingCycleStart?: SortOrder
    inviteCode?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    usageLastChecked?: SortOrder
    users?: ProjectUsersOrderByRelationAggregateInput
    invites?: ProjectInviteOrderByRelationAggregateInput
    sentEmails?: SentEmailOrderByRelationAggregateInput
    products?: ProductsOrderByRelationAggregateInput
    prices?: PricesOrderByRelationAggregateInput
    discounts?: DiscountsOrderByRelationAggregateInput
    customers?: CustomersOrderByRelationAggregateInput
    Subscriptions?: SubscriptionsOrderByRelationAggregateInput
    Transactions?: TransactionsOrderByRelationAggregateInput
  }

  export type ProjectWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    inviteCode?: string
    AND?: ProjectWhereInput | ProjectWhereInput[]
    OR?: ProjectWhereInput[]
    NOT?: ProjectWhereInput | ProjectWhereInput[]
    name?: StringFilter<"Project"> | string
    logo?: StringNullableFilter<"Project"> | string | null
    plan?: StringFilter<"Project"> | string
    billingCycleStart?: IntFilter<"Project"> | number
    createdAt?: DateTimeFilter<"Project"> | Date | string
    updatedAt?: DateTimeFilter<"Project"> | Date | string
    usageLastChecked?: DateTimeFilter<"Project"> | Date | string
    users?: ProjectUsersListRelationFilter
    invites?: ProjectInviteListRelationFilter
    sentEmails?: SentEmailListRelationFilter
    products?: ProductsListRelationFilter
    prices?: PricesListRelationFilter
    discounts?: DiscountsListRelationFilter
    customers?: CustomersListRelationFilter
    Subscriptions?: SubscriptionsListRelationFilter
    Transactions?: TransactionsListRelationFilter
  }, "id" | "slug" | "inviteCode">

  export type ProjectOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrderInput | SortOrder
    plan?: SortOrder
    billingCycleStart?: SortOrder
    inviteCode?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    usageLastChecked?: SortOrder
    _count?: ProjectCountOrderByAggregateInput
    _avg?: ProjectAvgOrderByAggregateInput
    _max?: ProjectMaxOrderByAggregateInput
    _min?: ProjectMinOrderByAggregateInput
    _sum?: ProjectSumOrderByAggregateInput
  }

  export type ProjectScalarWhereWithAggregatesInput = {
    AND?: ProjectScalarWhereWithAggregatesInput | ProjectScalarWhereWithAggregatesInput[]
    OR?: ProjectScalarWhereWithAggregatesInput[]
    NOT?: ProjectScalarWhereWithAggregatesInput | ProjectScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Project"> | string
    name?: StringWithAggregatesFilter<"Project"> | string
    slug?: StringWithAggregatesFilter<"Project"> | string
    logo?: StringNullableWithAggregatesFilter<"Project"> | string | null
    plan?: StringWithAggregatesFilter<"Project"> | string
    billingCycleStart?: IntWithAggregatesFilter<"Project"> | number
    inviteCode?: StringNullableWithAggregatesFilter<"Project"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Project"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Project"> | Date | string
    usageLastChecked?: DateTimeWithAggregatesFilter<"Project"> | Date | string
  }

  export type ProjectUsersWhereInput = {
    AND?: ProjectUsersWhereInput | ProjectUsersWhereInput[]
    OR?: ProjectUsersWhereInput[]
    NOT?: ProjectUsersWhereInput | ProjectUsersWhereInput[]
    id?: StringFilter<"ProjectUsers"> | string
    role?: EnumRoleFilter<"ProjectUsers"> | $Enums.Role
    createdAt?: DateTimeFilter<"ProjectUsers"> | Date | string
    updatedAt?: DateTimeFilter<"ProjectUsers"> | Date | string
    userId?: StringFilter<"ProjectUsers"> | string
    projectId?: StringFilter<"ProjectUsers"> | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
  }

  export type ProjectUsersOrderByWithRelationInput = {
    id?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    projectId?: SortOrder
    user?: UserOrderByWithRelationInput
    project?: ProjectOrderByWithRelationInput
  }

  export type ProjectUsersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_projectId?: ProjectUsersUserIdProjectIdCompoundUniqueInput
    AND?: ProjectUsersWhereInput | ProjectUsersWhereInput[]
    OR?: ProjectUsersWhereInput[]
    NOT?: ProjectUsersWhereInput | ProjectUsersWhereInput[]
    role?: EnumRoleFilter<"ProjectUsers"> | $Enums.Role
    createdAt?: DateTimeFilter<"ProjectUsers"> | Date | string
    updatedAt?: DateTimeFilter<"ProjectUsers"> | Date | string
    userId?: StringFilter<"ProjectUsers"> | string
    projectId?: StringFilter<"ProjectUsers"> | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
  }, "id" | "userId_projectId">

  export type ProjectUsersOrderByWithAggregationInput = {
    id?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    projectId?: SortOrder
    _count?: ProjectUsersCountOrderByAggregateInput
    _max?: ProjectUsersMaxOrderByAggregateInput
    _min?: ProjectUsersMinOrderByAggregateInput
  }

  export type ProjectUsersScalarWhereWithAggregatesInput = {
    AND?: ProjectUsersScalarWhereWithAggregatesInput | ProjectUsersScalarWhereWithAggregatesInput[]
    OR?: ProjectUsersScalarWhereWithAggregatesInput[]
    NOT?: ProjectUsersScalarWhereWithAggregatesInput | ProjectUsersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProjectUsers"> | string
    role?: EnumRoleWithAggregatesFilter<"ProjectUsers"> | $Enums.Role
    createdAt?: DateTimeWithAggregatesFilter<"ProjectUsers"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProjectUsers"> | Date | string
    userId?: StringWithAggregatesFilter<"ProjectUsers"> | string
    projectId?: StringWithAggregatesFilter<"ProjectUsers"> | string
  }

  export type ProjectInviteWhereInput = {
    AND?: ProjectInviteWhereInput | ProjectInviteWhereInput[]
    OR?: ProjectInviteWhereInput[]
    NOT?: ProjectInviteWhereInput | ProjectInviteWhereInput[]
    email?: StringFilter<"ProjectInvite"> | string
    expires?: DateTimeFilter<"ProjectInvite"> | Date | string
    projectId?: StringFilter<"ProjectInvite"> | string
    createdAt?: DateTimeFilter<"ProjectInvite"> | Date | string
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
  }

  export type ProjectInviteOrderByWithRelationInput = {
    email?: SortOrder
    expires?: SortOrder
    projectId?: SortOrder
    createdAt?: SortOrder
    project?: ProjectOrderByWithRelationInput
  }

  export type ProjectInviteWhereUniqueInput = Prisma.AtLeast<{
    email_projectId?: ProjectInviteEmailProjectIdCompoundUniqueInput
    AND?: ProjectInviteWhereInput | ProjectInviteWhereInput[]
    OR?: ProjectInviteWhereInput[]
    NOT?: ProjectInviteWhereInput | ProjectInviteWhereInput[]
    email?: StringFilter<"ProjectInvite"> | string
    expires?: DateTimeFilter<"ProjectInvite"> | Date | string
    projectId?: StringFilter<"ProjectInvite"> | string
    createdAt?: DateTimeFilter<"ProjectInvite"> | Date | string
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
  }, "email_projectId">

  export type ProjectInviteOrderByWithAggregationInput = {
    email?: SortOrder
    expires?: SortOrder
    projectId?: SortOrder
    createdAt?: SortOrder
    _count?: ProjectInviteCountOrderByAggregateInput
    _max?: ProjectInviteMaxOrderByAggregateInput
    _min?: ProjectInviteMinOrderByAggregateInput
  }

  export type ProjectInviteScalarWhereWithAggregatesInput = {
    AND?: ProjectInviteScalarWhereWithAggregatesInput | ProjectInviteScalarWhereWithAggregatesInput[]
    OR?: ProjectInviteScalarWhereWithAggregatesInput[]
    NOT?: ProjectInviteScalarWhereWithAggregatesInput | ProjectInviteScalarWhereWithAggregatesInput[]
    email?: StringWithAggregatesFilter<"ProjectInvite"> | string
    expires?: DateTimeWithAggregatesFilter<"ProjectInvite"> | Date | string
    projectId?: StringWithAggregatesFilter<"ProjectInvite"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ProjectInvite"> | Date | string
  }

  export type SentEmailWhereInput = {
    AND?: SentEmailWhereInput | SentEmailWhereInput[]
    OR?: SentEmailWhereInput[]
    NOT?: SentEmailWhereInput | SentEmailWhereInput[]
    id?: StringFilter<"SentEmail"> | string
    type?: StringFilter<"SentEmail"> | string
    createdAt?: DateTimeFilter<"SentEmail"> | Date | string
    projectId?: StringNullableFilter<"SentEmail"> | string | null
    project?: XOR<ProjectNullableRelationFilter, ProjectWhereInput> | null
  }

  export type SentEmailOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    projectId?: SortOrderInput | SortOrder
    project?: ProjectOrderByWithRelationInput
  }

  export type SentEmailWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SentEmailWhereInput | SentEmailWhereInput[]
    OR?: SentEmailWhereInput[]
    NOT?: SentEmailWhereInput | SentEmailWhereInput[]
    type?: StringFilter<"SentEmail"> | string
    createdAt?: DateTimeFilter<"SentEmail"> | Date | string
    projectId?: StringNullableFilter<"SentEmail"> | string | null
    project?: XOR<ProjectNullableRelationFilter, ProjectWhereInput> | null
  }, "id">

  export type SentEmailOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    projectId?: SortOrderInput | SortOrder
    _count?: SentEmailCountOrderByAggregateInput
    _max?: SentEmailMaxOrderByAggregateInput
    _min?: SentEmailMinOrderByAggregateInput
  }

  export type SentEmailScalarWhereWithAggregatesInput = {
    AND?: SentEmailScalarWhereWithAggregatesInput | SentEmailScalarWhereWithAggregatesInput[]
    OR?: SentEmailScalarWhereWithAggregatesInput[]
    NOT?: SentEmailScalarWhereWithAggregatesInput | SentEmailScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SentEmail"> | string
    type?: StringWithAggregatesFilter<"SentEmail"> | string
    createdAt?: DateTimeWithAggregatesFilter<"SentEmail"> | Date | string
    projectId?: StringNullableWithAggregatesFilter<"SentEmail"> | string | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    email?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    source?: StringNullableFilter<"User"> | string | null
    defaultWorkspace?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    accounts?: AccountListRelationFilter
    ProjectUsers?: ProjectUsersListRelationFilter
    sessions?: SessionListRelationFilter
    api_keys?: Api_keysListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    defaultWorkspace?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    accounts?: AccountOrderByRelationAggregateInput
    ProjectUsers?: ProjectUsersOrderByRelationAggregateInput
    sessions?: SessionOrderByRelationAggregateInput
    api_keys?: Api_keysOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    source?: StringNullableFilter<"User"> | string | null
    defaultWorkspace?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    accounts?: AccountListRelationFilter
    ProjectUsers?: ProjectUsersListRelationFilter
    sessions?: SessionListRelationFilter
    api_keys?: Api_keysListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    defaultWorkspace?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    name?: StringNullableWithAggregatesFilter<"User"> | string | null
    email?: StringNullableWithAggregatesFilter<"User"> | string | null
    emailVerified?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    image?: StringNullableWithAggregatesFilter<"User"> | string | null
    source?: StringNullableWithAggregatesFilter<"User"> | string | null
    defaultWorkspace?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AccountOrderByWithRelationInput = {
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    provider_providerAccountId?: AccountProviderProviderAccountIdCompoundUniqueInput
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "provider_providerAccountId">

  export type AccountOrderByWithAggregationInput = {
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    userId?: StringWithAggregatesFilter<"Account"> | string
    type?: StringWithAggregatesFilter<"Account"> | string
    provider?: StringWithAggregatesFilter<"Account"> | string
    providerAccountId?: StringWithAggregatesFilter<"Account"> | string
    refresh_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    access_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    expires_at?: IntNullableWithAggregatesFilter<"Account"> | number | null
    token_type?: StringNullableWithAggregatesFilter<"Account"> | string | null
    scope?: StringNullableWithAggregatesFilter<"Account"> | string | null
    id_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    session_state?: StringNullableWithAggregatesFilter<"Account"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    sessionToken?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "sessionToken">

  export type SessionOrderByWithAggregationInput = {
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    sessionToken?: StringWithAggregatesFilter<"Session"> | string
    userId?: StringWithAggregatesFilter<"Session"> | string
    expires?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
  }

  export type VerificationTokenWhereInput = {
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    token?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }

  export type VerificationTokenOrderByWithRelationInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenWhereUniqueInput = Prisma.AtLeast<{
    identifier_token?: VerificationTokenIdentifierTokenCompoundUniqueInput
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    token?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }, "identifier_token">

  export type VerificationTokenOrderByWithAggregationInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    _count?: VerificationTokenCountOrderByAggregateInput
    _max?: VerificationTokenMaxOrderByAggregateInput
    _min?: VerificationTokenMinOrderByAggregateInput
  }

  export type VerificationTokenScalarWhereWithAggregatesInput = {
    AND?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    OR?: VerificationTokenScalarWhereWithAggregatesInput[]
    NOT?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    identifier?: StringWithAggregatesFilter<"VerificationToken"> | string
    token?: StringWithAggregatesFilter<"VerificationToken"> | string
    expires?: DateTimeWithAggregatesFilter<"VerificationToken"> | Date | string
  }

  export type ProductsWhereInput = {
    AND?: ProductsWhereInput | ProductsWhereInput[]
    OR?: ProductsWhereInput[]
    NOT?: ProductsWhereInput | ProductsWhereInput[]
    id?: StringFilter<"Products"> | string
    name?: StringFilter<"Products"> | string
    description?: StringFilter<"Products"> | string
    status?: Enumproduct_statusFilter<"Products"> | $Enums.product_status
    createdAt?: DateTimeFilter<"Products"> | Date | string
    updatedAt?: DateTimeFilter<"Products"> | Date | string
    custom_data?: JsonNullableFilter<"Products">
    project_id?: StringFilter<"Products"> | string
    Project?: XOR<ProjectRelationFilter, ProjectWhereInput>
    prices?: PricesListRelationFilter
    Transactions?: TransactionsListRelationFilter
  }

  export type ProductsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    custom_data?: SortOrderInput | SortOrder
    project_id?: SortOrder
    Project?: ProjectOrderByWithRelationInput
    prices?: PricesOrderByRelationAggregateInput
    Transactions?: TransactionsOrderByRelationAggregateInput
  }

  export type ProductsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductsWhereInput | ProductsWhereInput[]
    OR?: ProductsWhereInput[]
    NOT?: ProductsWhereInput | ProductsWhereInput[]
    name?: StringFilter<"Products"> | string
    description?: StringFilter<"Products"> | string
    status?: Enumproduct_statusFilter<"Products"> | $Enums.product_status
    createdAt?: DateTimeFilter<"Products"> | Date | string
    updatedAt?: DateTimeFilter<"Products"> | Date | string
    custom_data?: JsonNullableFilter<"Products">
    project_id?: StringFilter<"Products"> | string
    Project?: XOR<ProjectRelationFilter, ProjectWhereInput>
    prices?: PricesListRelationFilter
    Transactions?: TransactionsListRelationFilter
  }, "id">

  export type ProductsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    custom_data?: SortOrderInput | SortOrder
    project_id?: SortOrder
    _count?: ProductsCountOrderByAggregateInput
    _max?: ProductsMaxOrderByAggregateInput
    _min?: ProductsMinOrderByAggregateInput
  }

  export type ProductsScalarWhereWithAggregatesInput = {
    AND?: ProductsScalarWhereWithAggregatesInput | ProductsScalarWhereWithAggregatesInput[]
    OR?: ProductsScalarWhereWithAggregatesInput[]
    NOT?: ProductsScalarWhereWithAggregatesInput | ProductsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Products"> | string
    name?: StringWithAggregatesFilter<"Products"> | string
    description?: StringWithAggregatesFilter<"Products"> | string
    status?: Enumproduct_statusWithAggregatesFilter<"Products"> | $Enums.product_status
    createdAt?: DateTimeWithAggregatesFilter<"Products"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Products"> | Date | string
    custom_data?: JsonNullableWithAggregatesFilter<"Products">
    project_id?: StringWithAggregatesFilter<"Products"> | string
  }

  export type Api_keysWhereInput = {
    AND?: Api_keysWhereInput | Api_keysWhereInput[]
    OR?: Api_keysWhereInput[]
    NOT?: Api_keysWhereInput | Api_keysWhereInput[]
    id?: StringFilter<"Api_keys"> | string
    prefix?: StringNullableFilter<"Api_keys"> | string | null
    description?: StringNullableFilter<"Api_keys"> | string | null
    createdAt?: DateTimeFilter<"Api_keys"> | Date | string
    key?: StringFilter<"Api_keys"> | string
    userId?: StringFilter<"Api_keys"> | string
    User?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type Api_keysOrderByWithRelationInput = {
    id?: SortOrder
    prefix?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    key?: SortOrder
    userId?: SortOrder
    User?: UserOrderByWithRelationInput
  }

  export type Api_keysWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    key?: string
    AND?: Api_keysWhereInput | Api_keysWhereInput[]
    OR?: Api_keysWhereInput[]
    NOT?: Api_keysWhereInput | Api_keysWhereInput[]
    prefix?: StringNullableFilter<"Api_keys"> | string | null
    description?: StringNullableFilter<"Api_keys"> | string | null
    createdAt?: DateTimeFilter<"Api_keys"> | Date | string
    userId?: StringFilter<"Api_keys"> | string
    User?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "key">

  export type Api_keysOrderByWithAggregationInput = {
    id?: SortOrder
    prefix?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    key?: SortOrder
    userId?: SortOrder
    _count?: Api_keysCountOrderByAggregateInput
    _max?: Api_keysMaxOrderByAggregateInput
    _min?: Api_keysMinOrderByAggregateInput
  }

  export type Api_keysScalarWhereWithAggregatesInput = {
    AND?: Api_keysScalarWhereWithAggregatesInput | Api_keysScalarWhereWithAggregatesInput[]
    OR?: Api_keysScalarWhereWithAggregatesInput[]
    NOT?: Api_keysScalarWhereWithAggregatesInput | Api_keysScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Api_keys"> | string
    prefix?: StringNullableWithAggregatesFilter<"Api_keys"> | string | null
    description?: StringNullableWithAggregatesFilter<"Api_keys"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Api_keys"> | Date | string
    key?: StringWithAggregatesFilter<"Api_keys"> | string
    userId?: StringWithAggregatesFilter<"Api_keys"> | string
  }

  export type PricesWhereInput = {
    AND?: PricesWhereInput | PricesWhereInput[]
    OR?: PricesWhereInput[]
    NOT?: PricesWhereInput | PricesWhereInput[]
    id?: StringFilter<"Prices"> | string
    type?: EnumPriceTypeFilter<"Prices"> | $Enums.PriceType
    description?: StringNullableFilter<"Prices"> | string | null
    name?: StringFilter<"Prices"> | string
    billing_cycle_frequency?: IntFilter<"Prices"> | number
    billing_cycle_interval?: EnumBillingIntervalFilter<"Prices"> | $Enums.BillingInterval
    trial_period_frequency?: IntFilter<"Prices"> | number
    trial_period_interval?: EnumBillingIntervalFilter<"Prices"> | $Enums.BillingInterval
    amount?: DecimalFilter<"Prices"> | Decimal | DecimalJsLike | number | string
    currency_code?: StringFilter<"Prices"> | string
    custom_data?: JsonNullableFilter<"Prices">
    status?: EnumEntity_StatusFilter<"Prices"> | $Enums.Entity_Status
    created_at?: DateTimeFilter<"Prices"> | Date | string
    updated_at?: DateTimeFilter<"Prices"> | Date | string
    product_id?: StringFilter<"Prices"> | string
    projectId?: StringFilter<"Prices"> | string
    Products?: XOR<ProductsNullableRelationFilter, ProductsWhereInput> | null
    Project?: XOR<ProjectRelationFilter, ProjectWhereInput>
    Discount_Prices?: Discount_PricesListRelationFilter
    Subscription_Items?: SubscriptionItemsListRelationFilter
    TransactionItems?: TransactionItemsListRelationFilter
  }

  export type PricesOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    name?: SortOrder
    billing_cycle_frequency?: SortOrder
    billing_cycle_interval?: SortOrder
    trial_period_frequency?: SortOrder
    trial_period_interval?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    custom_data?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    product_id?: SortOrder
    projectId?: SortOrder
    Products?: ProductsOrderByWithRelationInput
    Project?: ProjectOrderByWithRelationInput
    Discount_Prices?: Discount_PricesOrderByRelationAggregateInput
    Subscription_Items?: SubscriptionItemsOrderByRelationAggregateInput
    TransactionItems?: TransactionItemsOrderByRelationAggregateInput
  }

  export type PricesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PricesWhereInput | PricesWhereInput[]
    OR?: PricesWhereInput[]
    NOT?: PricesWhereInput | PricesWhereInput[]
    type?: EnumPriceTypeFilter<"Prices"> | $Enums.PriceType
    description?: StringNullableFilter<"Prices"> | string | null
    name?: StringFilter<"Prices"> | string
    billing_cycle_frequency?: IntFilter<"Prices"> | number
    billing_cycle_interval?: EnumBillingIntervalFilter<"Prices"> | $Enums.BillingInterval
    trial_period_frequency?: IntFilter<"Prices"> | number
    trial_period_interval?: EnumBillingIntervalFilter<"Prices"> | $Enums.BillingInterval
    amount?: DecimalFilter<"Prices"> | Decimal | DecimalJsLike | number | string
    currency_code?: StringFilter<"Prices"> | string
    custom_data?: JsonNullableFilter<"Prices">
    status?: EnumEntity_StatusFilter<"Prices"> | $Enums.Entity_Status
    created_at?: DateTimeFilter<"Prices"> | Date | string
    updated_at?: DateTimeFilter<"Prices"> | Date | string
    product_id?: StringFilter<"Prices"> | string
    projectId?: StringFilter<"Prices"> | string
    Products?: XOR<ProductsNullableRelationFilter, ProductsWhereInput> | null
    Project?: XOR<ProjectRelationFilter, ProjectWhereInput>
    Discount_Prices?: Discount_PricesListRelationFilter
    Subscription_Items?: SubscriptionItemsListRelationFilter
    TransactionItems?: TransactionItemsListRelationFilter
  }, "id">

  export type PricesOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    name?: SortOrder
    billing_cycle_frequency?: SortOrder
    billing_cycle_interval?: SortOrder
    trial_period_frequency?: SortOrder
    trial_period_interval?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    custom_data?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    product_id?: SortOrder
    projectId?: SortOrder
    _count?: PricesCountOrderByAggregateInput
    _avg?: PricesAvgOrderByAggregateInput
    _max?: PricesMaxOrderByAggregateInput
    _min?: PricesMinOrderByAggregateInput
    _sum?: PricesSumOrderByAggregateInput
  }

  export type PricesScalarWhereWithAggregatesInput = {
    AND?: PricesScalarWhereWithAggregatesInput | PricesScalarWhereWithAggregatesInput[]
    OR?: PricesScalarWhereWithAggregatesInput[]
    NOT?: PricesScalarWhereWithAggregatesInput | PricesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Prices"> | string
    type?: EnumPriceTypeWithAggregatesFilter<"Prices"> | $Enums.PriceType
    description?: StringNullableWithAggregatesFilter<"Prices"> | string | null
    name?: StringWithAggregatesFilter<"Prices"> | string
    billing_cycle_frequency?: IntWithAggregatesFilter<"Prices"> | number
    billing_cycle_interval?: EnumBillingIntervalWithAggregatesFilter<"Prices"> | $Enums.BillingInterval
    trial_period_frequency?: IntWithAggregatesFilter<"Prices"> | number
    trial_period_interval?: EnumBillingIntervalWithAggregatesFilter<"Prices"> | $Enums.BillingInterval
    amount?: DecimalWithAggregatesFilter<"Prices"> | Decimal | DecimalJsLike | number | string
    currency_code?: StringWithAggregatesFilter<"Prices"> | string
    custom_data?: JsonNullableWithAggregatesFilter<"Prices">
    status?: EnumEntity_StatusWithAggregatesFilter<"Prices"> | $Enums.Entity_Status
    created_at?: DateTimeWithAggregatesFilter<"Prices"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Prices"> | Date | string
    product_id?: StringWithAggregatesFilter<"Prices"> | string
    projectId?: StringWithAggregatesFilter<"Prices"> | string
  }

  export type DiscountsWhereInput = {
    AND?: DiscountsWhereInput | DiscountsWhereInput[]
    OR?: DiscountsWhereInput[]
    NOT?: DiscountsWhereInput | DiscountsWhereInput[]
    id?: StringFilter<"Discounts"> | string
    status?: EnumEntity_StatusNullableFilter<"Discounts"> | $Enums.Entity_Status | null
    description?: StringNullableFilter<"Discounts"> | string | null
    enabled_for_checkout?: BoolNullableFilter<"Discounts"> | boolean | null
    amount?: DecimalFilter<"Discounts"> | Decimal | DecimalJsLike | number | string
    currency_code?: StringFilter<"Discounts"> | string
    type?: EnumDiscount_typeFilter<"Discounts"> | $Enums.Discount_type
    recur?: BoolNullableFilter<"Discounts"> | boolean | null
    max_recurring_intervals?: DecimalNullableFilter<"Discounts"> | Decimal | DecimalJsLike | number | string | null
    usage_limit?: IntNullableFilter<"Discounts"> | number | null
    expires_at?: DateTimeNullableFilter<"Discounts"> | Date | string | null
    custom_data?: JsonNullableFilter<"Discounts">
    times_used?: IntNullableFilter<"Discounts"> | number | null
    created_at?: DateTimeFilter<"Discounts"> | Date | string
    updated_at?: DateTimeFilter<"Discounts"> | Date | string
    projectId?: StringNullableFilter<"Discounts"> | string | null
    discount_prices?: Discount_PricesListRelationFilter
    Project?: XOR<ProjectNullableRelationFilter, ProjectWhereInput> | null
    Subscriptions?: SubscriptionsListRelationFilter
    Transactions?: TransactionsListRelationFilter
  }

  export type DiscountsOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    enabled_for_checkout?: SortOrderInput | SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    type?: SortOrder
    recur?: SortOrderInput | SortOrder
    max_recurring_intervals?: SortOrderInput | SortOrder
    usage_limit?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    custom_data?: SortOrderInput | SortOrder
    times_used?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    projectId?: SortOrderInput | SortOrder
    discount_prices?: Discount_PricesOrderByRelationAggregateInput
    Project?: ProjectOrderByWithRelationInput
    Subscriptions?: SubscriptionsOrderByRelationAggregateInput
    Transactions?: TransactionsOrderByRelationAggregateInput
  }

  export type DiscountsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DiscountsWhereInput | DiscountsWhereInput[]
    OR?: DiscountsWhereInput[]
    NOT?: DiscountsWhereInput | DiscountsWhereInput[]
    status?: EnumEntity_StatusNullableFilter<"Discounts"> | $Enums.Entity_Status | null
    description?: StringNullableFilter<"Discounts"> | string | null
    enabled_for_checkout?: BoolNullableFilter<"Discounts"> | boolean | null
    amount?: DecimalFilter<"Discounts"> | Decimal | DecimalJsLike | number | string
    currency_code?: StringFilter<"Discounts"> | string
    type?: EnumDiscount_typeFilter<"Discounts"> | $Enums.Discount_type
    recur?: BoolNullableFilter<"Discounts"> | boolean | null
    max_recurring_intervals?: DecimalNullableFilter<"Discounts"> | Decimal | DecimalJsLike | number | string | null
    usage_limit?: IntNullableFilter<"Discounts"> | number | null
    expires_at?: DateTimeNullableFilter<"Discounts"> | Date | string | null
    custom_data?: JsonNullableFilter<"Discounts">
    times_used?: IntNullableFilter<"Discounts"> | number | null
    created_at?: DateTimeFilter<"Discounts"> | Date | string
    updated_at?: DateTimeFilter<"Discounts"> | Date | string
    projectId?: StringNullableFilter<"Discounts"> | string | null
    discount_prices?: Discount_PricesListRelationFilter
    Project?: XOR<ProjectNullableRelationFilter, ProjectWhereInput> | null
    Subscriptions?: SubscriptionsListRelationFilter
    Transactions?: TransactionsListRelationFilter
  }, "id">

  export type DiscountsOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    enabled_for_checkout?: SortOrderInput | SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    type?: SortOrder
    recur?: SortOrderInput | SortOrder
    max_recurring_intervals?: SortOrderInput | SortOrder
    usage_limit?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    custom_data?: SortOrderInput | SortOrder
    times_used?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    projectId?: SortOrderInput | SortOrder
    _count?: DiscountsCountOrderByAggregateInput
    _avg?: DiscountsAvgOrderByAggregateInput
    _max?: DiscountsMaxOrderByAggregateInput
    _min?: DiscountsMinOrderByAggregateInput
    _sum?: DiscountsSumOrderByAggregateInput
  }

  export type DiscountsScalarWhereWithAggregatesInput = {
    AND?: DiscountsScalarWhereWithAggregatesInput | DiscountsScalarWhereWithAggregatesInput[]
    OR?: DiscountsScalarWhereWithAggregatesInput[]
    NOT?: DiscountsScalarWhereWithAggregatesInput | DiscountsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Discounts"> | string
    status?: EnumEntity_StatusNullableWithAggregatesFilter<"Discounts"> | $Enums.Entity_Status | null
    description?: StringNullableWithAggregatesFilter<"Discounts"> | string | null
    enabled_for_checkout?: BoolNullableWithAggregatesFilter<"Discounts"> | boolean | null
    amount?: DecimalWithAggregatesFilter<"Discounts"> | Decimal | DecimalJsLike | number | string
    currency_code?: StringWithAggregatesFilter<"Discounts"> | string
    type?: EnumDiscount_typeWithAggregatesFilter<"Discounts"> | $Enums.Discount_type
    recur?: BoolNullableWithAggregatesFilter<"Discounts"> | boolean | null
    max_recurring_intervals?: DecimalNullableWithAggregatesFilter<"Discounts"> | Decimal | DecimalJsLike | number | string | null
    usage_limit?: IntNullableWithAggregatesFilter<"Discounts"> | number | null
    expires_at?: DateTimeNullableWithAggregatesFilter<"Discounts"> | Date | string | null
    custom_data?: JsonNullableWithAggregatesFilter<"Discounts">
    times_used?: IntNullableWithAggregatesFilter<"Discounts"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"Discounts"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Discounts"> | Date | string
    projectId?: StringNullableWithAggregatesFilter<"Discounts"> | string | null
  }

  export type Discount_PricesWhereInput = {
    AND?: Discount_PricesWhereInput | Discount_PricesWhereInput[]
    OR?: Discount_PricesWhereInput[]
    NOT?: Discount_PricesWhereInput | Discount_PricesWhereInput[]
    discount_Id?: StringFilter<"Discount_Prices"> | string
    price_id?: StringFilter<"Discount_Prices"> | string
    discount?: XOR<DiscountsNullableRelationFilter, DiscountsWhereInput> | null
    price?: XOR<PricesRelationFilter, PricesWhereInput>
  }

  export type Discount_PricesOrderByWithRelationInput = {
    discount_Id?: SortOrder
    price_id?: SortOrder
    discount?: DiscountsOrderByWithRelationInput
    price?: PricesOrderByWithRelationInput
  }

  export type Discount_PricesWhereUniqueInput = Prisma.AtLeast<{
    discount_Id_price_id?: Discount_PricesDiscount_IdPrice_idCompoundUniqueInput
    AND?: Discount_PricesWhereInput | Discount_PricesWhereInput[]
    OR?: Discount_PricesWhereInput[]
    NOT?: Discount_PricesWhereInput | Discount_PricesWhereInput[]
    discount_Id?: StringFilter<"Discount_Prices"> | string
    price_id?: StringFilter<"Discount_Prices"> | string
    discount?: XOR<DiscountsNullableRelationFilter, DiscountsWhereInput> | null
    price?: XOR<PricesRelationFilter, PricesWhereInput>
  }, "discount_Id_price_id">

  export type Discount_PricesOrderByWithAggregationInput = {
    discount_Id?: SortOrder
    price_id?: SortOrder
    _count?: Discount_PricesCountOrderByAggregateInput
    _max?: Discount_PricesMaxOrderByAggregateInput
    _min?: Discount_PricesMinOrderByAggregateInput
  }

  export type Discount_PricesScalarWhereWithAggregatesInput = {
    AND?: Discount_PricesScalarWhereWithAggregatesInput | Discount_PricesScalarWhereWithAggregatesInput[]
    OR?: Discount_PricesScalarWhereWithAggregatesInput[]
    NOT?: Discount_PricesScalarWhereWithAggregatesInput | Discount_PricesScalarWhereWithAggregatesInput[]
    discount_Id?: StringWithAggregatesFilter<"Discount_Prices"> | string
    price_id?: StringWithAggregatesFilter<"Discount_Prices"> | string
  }

  export type CustomersWhereInput = {
    AND?: CustomersWhereInput | CustomersWhereInput[]
    OR?: CustomersWhereInput[]
    NOT?: CustomersWhereInput | CustomersWhereInput[]
    id?: StringFilter<"Customers"> | string
    email?: StringFilter<"Customers"> | string
    name?: StringFilter<"Customers"> | string
    status?: EnumEntity_StatusNullableFilter<"Customers"> | $Enums.Entity_Status | null
    description?: StringNullableFilter<"Customers"> | string | null
    custom_data?: JsonNullableFilter<"Customers">
    created_at?: DateTimeFilter<"Customers"> | Date | string
    updated_at?: DateTimeFilter<"Customers"> | Date | string
    projectId?: StringNullableFilter<"Customers"> | string | null
    Project?: XOR<ProjectNullableRelationFilter, ProjectWhereInput> | null
    Addresses?: AddressesListRelationFilter
    Subscriptions?: SubscriptionsListRelationFilter
    Transactions?: TransactionsListRelationFilter
  }

  export type CustomersOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    status?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    custom_data?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    projectId?: SortOrderInput | SortOrder
    Project?: ProjectOrderByWithRelationInput
    Addresses?: AddressesOrderByRelationAggregateInput
    Subscriptions?: SubscriptionsOrderByRelationAggregateInput
    Transactions?: TransactionsOrderByRelationAggregateInput
  }

  export type CustomersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: CustomersWhereInput | CustomersWhereInput[]
    OR?: CustomersWhereInput[]
    NOT?: CustomersWhereInput | CustomersWhereInput[]
    name?: StringFilter<"Customers"> | string
    status?: EnumEntity_StatusNullableFilter<"Customers"> | $Enums.Entity_Status | null
    description?: StringNullableFilter<"Customers"> | string | null
    custom_data?: JsonNullableFilter<"Customers">
    created_at?: DateTimeFilter<"Customers"> | Date | string
    updated_at?: DateTimeFilter<"Customers"> | Date | string
    projectId?: StringNullableFilter<"Customers"> | string | null
    Project?: XOR<ProjectNullableRelationFilter, ProjectWhereInput> | null
    Addresses?: AddressesListRelationFilter
    Subscriptions?: SubscriptionsListRelationFilter
    Transactions?: TransactionsListRelationFilter
  }, "id" | "email">

  export type CustomersOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    status?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    custom_data?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    projectId?: SortOrderInput | SortOrder
    _count?: CustomersCountOrderByAggregateInput
    _max?: CustomersMaxOrderByAggregateInput
    _min?: CustomersMinOrderByAggregateInput
  }

  export type CustomersScalarWhereWithAggregatesInput = {
    AND?: CustomersScalarWhereWithAggregatesInput | CustomersScalarWhereWithAggregatesInput[]
    OR?: CustomersScalarWhereWithAggregatesInput[]
    NOT?: CustomersScalarWhereWithAggregatesInput | CustomersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Customers"> | string
    email?: StringWithAggregatesFilter<"Customers"> | string
    name?: StringWithAggregatesFilter<"Customers"> | string
    status?: EnumEntity_StatusNullableWithAggregatesFilter<"Customers"> | $Enums.Entity_Status | null
    description?: StringNullableWithAggregatesFilter<"Customers"> | string | null
    custom_data?: JsonNullableWithAggregatesFilter<"Customers">
    created_at?: DateTimeWithAggregatesFilter<"Customers"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Customers"> | Date | string
    projectId?: StringNullableWithAggregatesFilter<"Customers"> | string | null
  }

  export type AddressesWhereInput = {
    AND?: AddressesWhereInput | AddressesWhereInput[]
    OR?: AddressesWhereInput[]
    NOT?: AddressesWhereInput | AddressesWhereInput[]
    id?: StringFilter<"Addresses"> | string
    description?: StringNullableFilter<"Addresses"> | string | null
    first_line?: StringNullableFilter<"Addresses"> | string | null
    custom_data?: JsonNullableFilter<"Addresses">
    city?: StringNullableFilter<"Addresses"> | string | null
    status?: EnumEntity_StatusNullableFilter<"Addresses"> | $Enums.Entity_Status | null
    created_at?: DateTimeFilter<"Addresses"> | Date | string
    updated_at?: DateTimeFilter<"Addresses"> | Date | string
    customer_id?: StringNullableFilter<"Addresses"> | string | null
    Customers?: XOR<CustomersNullableRelationFilter, CustomersWhereInput> | null
    Subscriptions?: SubscriptionsListRelationFilter
    Transactions?: TransactionsListRelationFilter
  }

  export type AddressesOrderByWithRelationInput = {
    id?: SortOrder
    description?: SortOrderInput | SortOrder
    first_line?: SortOrderInput | SortOrder
    custom_data?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    customer_id?: SortOrderInput | SortOrder
    Customers?: CustomersOrderByWithRelationInput
    Subscriptions?: SubscriptionsOrderByRelationAggregateInput
    Transactions?: TransactionsOrderByRelationAggregateInput
  }

  export type AddressesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AddressesWhereInput | AddressesWhereInput[]
    OR?: AddressesWhereInput[]
    NOT?: AddressesWhereInput | AddressesWhereInput[]
    description?: StringNullableFilter<"Addresses"> | string | null
    first_line?: StringNullableFilter<"Addresses"> | string | null
    custom_data?: JsonNullableFilter<"Addresses">
    city?: StringNullableFilter<"Addresses"> | string | null
    status?: EnumEntity_StatusNullableFilter<"Addresses"> | $Enums.Entity_Status | null
    created_at?: DateTimeFilter<"Addresses"> | Date | string
    updated_at?: DateTimeFilter<"Addresses"> | Date | string
    customer_id?: StringNullableFilter<"Addresses"> | string | null
    Customers?: XOR<CustomersNullableRelationFilter, CustomersWhereInput> | null
    Subscriptions?: SubscriptionsListRelationFilter
    Transactions?: TransactionsListRelationFilter
  }, "id">

  export type AddressesOrderByWithAggregationInput = {
    id?: SortOrder
    description?: SortOrderInput | SortOrder
    first_line?: SortOrderInput | SortOrder
    custom_data?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    customer_id?: SortOrderInput | SortOrder
    _count?: AddressesCountOrderByAggregateInput
    _max?: AddressesMaxOrderByAggregateInput
    _min?: AddressesMinOrderByAggregateInput
  }

  export type AddressesScalarWhereWithAggregatesInput = {
    AND?: AddressesScalarWhereWithAggregatesInput | AddressesScalarWhereWithAggregatesInput[]
    OR?: AddressesScalarWhereWithAggregatesInput[]
    NOT?: AddressesScalarWhereWithAggregatesInput | AddressesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Addresses"> | string
    description?: StringNullableWithAggregatesFilter<"Addresses"> | string | null
    first_line?: StringNullableWithAggregatesFilter<"Addresses"> | string | null
    custom_data?: JsonNullableWithAggregatesFilter<"Addresses">
    city?: StringNullableWithAggregatesFilter<"Addresses"> | string | null
    status?: EnumEntity_StatusNullableWithAggregatesFilter<"Addresses"> | $Enums.Entity_Status | null
    created_at?: DateTimeWithAggregatesFilter<"Addresses"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Addresses"> | Date | string
    customer_id?: StringNullableWithAggregatesFilter<"Addresses"> | string | null
  }

  export type SubscriptionItemsWhereInput = {
    AND?: SubscriptionItemsWhereInput | SubscriptionItemsWhereInput[]
    OR?: SubscriptionItemsWhereInput[]
    NOT?: SubscriptionItemsWhereInput | SubscriptionItemsWhereInput[]
    id?: StringFilter<"SubscriptionItems"> | string
    subscription_id?: StringFilter<"SubscriptionItems"> | string
    price_id?: StringFilter<"SubscriptionItems"> | string
    quantity?: IntFilter<"SubscriptionItems"> | number
    status?: EnumSubscriptionItemsStatusFilter<"SubscriptionItems"> | $Enums.SubscriptionItemsStatus
    recurring?: BoolFilter<"SubscriptionItems"> | boolean
    created_at?: DateTimeFilter<"SubscriptionItems"> | Date | string
    updated_at?: DateTimeFilter<"SubscriptionItems"> | Date | string
    previously_billed_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    next_billed_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    trial_started_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    trial_ended_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    custom_data?: JsonNullableFilter<"SubscriptionItems">
    subscription?: XOR<SubscriptionsRelationFilter, SubscriptionsWhereInput>
    price?: XOR<PricesRelationFilter, PricesWhereInput>
  }

  export type SubscriptionItemsOrderByWithRelationInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    price_id?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    recurring?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    previously_billed_at?: SortOrderInput | SortOrder
    next_billed_at?: SortOrderInput | SortOrder
    trial_started_at?: SortOrderInput | SortOrder
    trial_ended_at?: SortOrderInput | SortOrder
    custom_data?: SortOrderInput | SortOrder
    subscription?: SubscriptionsOrderByWithRelationInput
    price?: PricesOrderByWithRelationInput
  }

  export type SubscriptionItemsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SubscriptionItemsWhereInput | SubscriptionItemsWhereInput[]
    OR?: SubscriptionItemsWhereInput[]
    NOT?: SubscriptionItemsWhereInput | SubscriptionItemsWhereInput[]
    subscription_id?: StringFilter<"SubscriptionItems"> | string
    price_id?: StringFilter<"SubscriptionItems"> | string
    quantity?: IntFilter<"SubscriptionItems"> | number
    status?: EnumSubscriptionItemsStatusFilter<"SubscriptionItems"> | $Enums.SubscriptionItemsStatus
    recurring?: BoolFilter<"SubscriptionItems"> | boolean
    created_at?: DateTimeFilter<"SubscriptionItems"> | Date | string
    updated_at?: DateTimeFilter<"SubscriptionItems"> | Date | string
    previously_billed_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    next_billed_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    trial_started_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    trial_ended_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    custom_data?: JsonNullableFilter<"SubscriptionItems">
    subscription?: XOR<SubscriptionsRelationFilter, SubscriptionsWhereInput>
    price?: XOR<PricesRelationFilter, PricesWhereInput>
  }, "id">

  export type SubscriptionItemsOrderByWithAggregationInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    price_id?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    recurring?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    previously_billed_at?: SortOrderInput | SortOrder
    next_billed_at?: SortOrderInput | SortOrder
    trial_started_at?: SortOrderInput | SortOrder
    trial_ended_at?: SortOrderInput | SortOrder
    custom_data?: SortOrderInput | SortOrder
    _count?: SubscriptionItemsCountOrderByAggregateInput
    _avg?: SubscriptionItemsAvgOrderByAggregateInput
    _max?: SubscriptionItemsMaxOrderByAggregateInput
    _min?: SubscriptionItemsMinOrderByAggregateInput
    _sum?: SubscriptionItemsSumOrderByAggregateInput
  }

  export type SubscriptionItemsScalarWhereWithAggregatesInput = {
    AND?: SubscriptionItemsScalarWhereWithAggregatesInput | SubscriptionItemsScalarWhereWithAggregatesInput[]
    OR?: SubscriptionItemsScalarWhereWithAggregatesInput[]
    NOT?: SubscriptionItemsScalarWhereWithAggregatesInput | SubscriptionItemsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SubscriptionItems"> | string
    subscription_id?: StringWithAggregatesFilter<"SubscriptionItems"> | string
    price_id?: StringWithAggregatesFilter<"SubscriptionItems"> | string
    quantity?: IntWithAggregatesFilter<"SubscriptionItems"> | number
    status?: EnumSubscriptionItemsStatusWithAggregatesFilter<"SubscriptionItems"> | $Enums.SubscriptionItemsStatus
    recurring?: BoolWithAggregatesFilter<"SubscriptionItems"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"SubscriptionItems"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"SubscriptionItems"> | Date | string
    previously_billed_at?: DateTimeNullableWithAggregatesFilter<"SubscriptionItems"> | Date | string | null
    next_billed_at?: DateTimeNullableWithAggregatesFilter<"SubscriptionItems"> | Date | string | null
    trial_started_at?: DateTimeNullableWithAggregatesFilter<"SubscriptionItems"> | Date | string | null
    trial_ended_at?: DateTimeNullableWithAggregatesFilter<"SubscriptionItems"> | Date | string | null
    custom_data?: JsonNullableWithAggregatesFilter<"SubscriptionItems">
  }

  export type Subscription_Scheduled_ChangesWhereInput = {
    AND?: Subscription_Scheduled_ChangesWhereInput | Subscription_Scheduled_ChangesWhereInput[]
    OR?: Subscription_Scheduled_ChangesWhereInput[]
    NOT?: Subscription_Scheduled_ChangesWhereInput | Subscription_Scheduled_ChangesWhereInput[]
    id?: StringFilter<"Subscription_Scheduled_Changes"> | string
    subscription_id?: StringFilter<"Subscription_Scheduled_Changes"> | string
    action?: EnumScheduledChangeActionFilter<"Subscription_Scheduled_Changes"> | $Enums.ScheduledChangeAction
    effective_at?: DateTimeFilter<"Subscription_Scheduled_Changes"> | Date | string
    resumes_at?: DateTimeNullableFilter<"Subscription_Scheduled_Changes"> | Date | string | null
    status?: EnumScheduledChangesStatusFilter<"Subscription_Scheduled_Changes"> | $Enums.ScheduledChangesStatus
    subscription?: XOR<SubscriptionsRelationFilter, SubscriptionsWhereInput>
  }

  export type Subscription_Scheduled_ChangesOrderByWithRelationInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    action?: SortOrder
    effective_at?: SortOrder
    resumes_at?: SortOrderInput | SortOrder
    status?: SortOrder
    subscription?: SubscriptionsOrderByWithRelationInput
  }

  export type Subscription_Scheduled_ChangesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: Subscription_Scheduled_ChangesWhereInput | Subscription_Scheduled_ChangesWhereInput[]
    OR?: Subscription_Scheduled_ChangesWhereInput[]
    NOT?: Subscription_Scheduled_ChangesWhereInput | Subscription_Scheduled_ChangesWhereInput[]
    subscription_id?: StringFilter<"Subscription_Scheduled_Changes"> | string
    action?: EnumScheduledChangeActionFilter<"Subscription_Scheduled_Changes"> | $Enums.ScheduledChangeAction
    effective_at?: DateTimeFilter<"Subscription_Scheduled_Changes"> | Date | string
    resumes_at?: DateTimeNullableFilter<"Subscription_Scheduled_Changes"> | Date | string | null
    status?: EnumScheduledChangesStatusFilter<"Subscription_Scheduled_Changes"> | $Enums.ScheduledChangesStatus
    subscription?: XOR<SubscriptionsRelationFilter, SubscriptionsWhereInput>
  }, "id">

  export type Subscription_Scheduled_ChangesOrderByWithAggregationInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    action?: SortOrder
    effective_at?: SortOrder
    resumes_at?: SortOrderInput | SortOrder
    status?: SortOrder
    _count?: Subscription_Scheduled_ChangesCountOrderByAggregateInput
    _max?: Subscription_Scheduled_ChangesMaxOrderByAggregateInput
    _min?: Subscription_Scheduled_ChangesMinOrderByAggregateInput
  }

  export type Subscription_Scheduled_ChangesScalarWhereWithAggregatesInput = {
    AND?: Subscription_Scheduled_ChangesScalarWhereWithAggregatesInput | Subscription_Scheduled_ChangesScalarWhereWithAggregatesInput[]
    OR?: Subscription_Scheduled_ChangesScalarWhereWithAggregatesInput[]
    NOT?: Subscription_Scheduled_ChangesScalarWhereWithAggregatesInput | Subscription_Scheduled_ChangesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Subscription_Scheduled_Changes"> | string
    subscription_id?: StringWithAggregatesFilter<"Subscription_Scheduled_Changes"> | string
    action?: EnumScheduledChangeActionWithAggregatesFilter<"Subscription_Scheduled_Changes"> | $Enums.ScheduledChangeAction
    effective_at?: DateTimeWithAggregatesFilter<"Subscription_Scheduled_Changes"> | Date | string
    resumes_at?: DateTimeNullableWithAggregatesFilter<"Subscription_Scheduled_Changes"> | Date | string | null
    status?: EnumScheduledChangesStatusWithAggregatesFilter<"Subscription_Scheduled_Changes"> | $Enums.ScheduledChangesStatus
  }

  export type BillingDetailsWhereInput = {
    AND?: BillingDetailsWhereInput | BillingDetailsWhereInput[]
    OR?: BillingDetailsWhereInput[]
    NOT?: BillingDetailsWhereInput | BillingDetailsWhereInput[]
    id?: StringFilter<"BillingDetails"> | string
    subscription_id?: StringFilter<"BillingDetails"> | string
    payment_interval?: EnumBillingIntervalFilter<"BillingDetails"> | $Enums.BillingInterval
    payment_frequency?: IntFilter<"BillingDetails"> | number
    enable_checkout?: BoolFilter<"BillingDetails"> | boolean
    purchase_order_number?: StringNullableFilter<"BillingDetails"> | string | null
    additional_information?: StringNullableFilter<"BillingDetails"> | string | null
    created_at?: DateTimeFilter<"BillingDetails"> | Date | string
    updated_at?: DateTimeFilter<"BillingDetails"> | Date | string
    subscription?: XOR<SubscriptionsRelationFilter, SubscriptionsWhereInput>
  }

  export type BillingDetailsOrderByWithRelationInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    payment_interval?: SortOrder
    payment_frequency?: SortOrder
    enable_checkout?: SortOrder
    purchase_order_number?: SortOrderInput | SortOrder
    additional_information?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    subscription?: SubscriptionsOrderByWithRelationInput
  }

  export type BillingDetailsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    subscription_id?: string
    AND?: BillingDetailsWhereInput | BillingDetailsWhereInput[]
    OR?: BillingDetailsWhereInput[]
    NOT?: BillingDetailsWhereInput | BillingDetailsWhereInput[]
    payment_interval?: EnumBillingIntervalFilter<"BillingDetails"> | $Enums.BillingInterval
    payment_frequency?: IntFilter<"BillingDetails"> | number
    enable_checkout?: BoolFilter<"BillingDetails"> | boolean
    purchase_order_number?: StringNullableFilter<"BillingDetails"> | string | null
    additional_information?: StringNullableFilter<"BillingDetails"> | string | null
    created_at?: DateTimeFilter<"BillingDetails"> | Date | string
    updated_at?: DateTimeFilter<"BillingDetails"> | Date | string
    subscription?: XOR<SubscriptionsRelationFilter, SubscriptionsWhereInput>
  }, "id" | "subscription_id">

  export type BillingDetailsOrderByWithAggregationInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    payment_interval?: SortOrder
    payment_frequency?: SortOrder
    enable_checkout?: SortOrder
    purchase_order_number?: SortOrderInput | SortOrder
    additional_information?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: BillingDetailsCountOrderByAggregateInput
    _avg?: BillingDetailsAvgOrderByAggregateInput
    _max?: BillingDetailsMaxOrderByAggregateInput
    _min?: BillingDetailsMinOrderByAggregateInput
    _sum?: BillingDetailsSumOrderByAggregateInput
  }

  export type BillingDetailsScalarWhereWithAggregatesInput = {
    AND?: BillingDetailsScalarWhereWithAggregatesInput | BillingDetailsScalarWhereWithAggregatesInput[]
    OR?: BillingDetailsScalarWhereWithAggregatesInput[]
    NOT?: BillingDetailsScalarWhereWithAggregatesInput | BillingDetailsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BillingDetails"> | string
    subscription_id?: StringWithAggregatesFilter<"BillingDetails"> | string
    payment_interval?: EnumBillingIntervalWithAggregatesFilter<"BillingDetails"> | $Enums.BillingInterval
    payment_frequency?: IntWithAggregatesFilter<"BillingDetails"> | number
    enable_checkout?: BoolWithAggregatesFilter<"BillingDetails"> | boolean
    purchase_order_number?: StringNullableWithAggregatesFilter<"BillingDetails"> | string | null
    additional_information?: StringNullableWithAggregatesFilter<"BillingDetails"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"BillingDetails"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"BillingDetails"> | Date | string
  }

  export type SubscriptionsWhereInput = {
    AND?: SubscriptionsWhereInput | SubscriptionsWhereInput[]
    OR?: SubscriptionsWhereInput[]
    NOT?: SubscriptionsWhereInput | SubscriptionsWhereInput[]
    id?: StringFilter<"Subscriptions"> | string
    status?: EnumSubscriptionsStatusFilter<"Subscriptions"> | $Enums.SubscriptionsStatus
    currency_code?: StringFilter<"Subscriptions"> | string
    created_at?: DateTimeFilter<"Subscriptions"> | Date | string
    updated_at?: DateTimeFilter<"Subscriptions"> | Date | string
    started_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    first_billed_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    next_billed_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    paused_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    canceled_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    current_period_starts?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    current_period_ends?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFilter<"Subscriptions"> | $Enums.BillingInterval
    billing_cycle_frequency?: IntFilter<"Subscriptions"> | number
    update_payment_method_url?: StringNullableFilter<"Subscriptions"> | string | null
    cancel_url?: StringNullableFilter<"Subscriptions"> | string | null
    customer_id?: StringFilter<"Subscriptions"> | string
    address_id?: StringFilter<"Subscriptions"> | string
    project_id?: StringFilter<"Subscriptions"> | string
    discount_id?: StringNullableFilter<"Subscriptions"> | string | null
    collection_mode?: EnumCollectionModeFilter<"Subscriptions"> | $Enums.CollectionMode
    customer?: XOR<CustomersRelationFilter, CustomersWhereInput>
    address?: XOR<AddressesRelationFilter, AddressesWhereInput>
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
    discount?: XOR<DiscountsNullableRelationFilter, DiscountsWhereInput> | null
    Subscription_Items?: SubscriptionItemsListRelationFilter
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesListRelationFilter
    BillingDetails?: XOR<BillingDetailsNullableRelationFilter, BillingDetailsWhereInput> | null
    transaction?: TransactionsListRelationFilter
  }

  export type SubscriptionsOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    currency_code?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    started_at?: SortOrderInput | SortOrder
    first_billed_at?: SortOrderInput | SortOrder
    next_billed_at?: SortOrderInput | SortOrder
    paused_at?: SortOrderInput | SortOrder
    canceled_at?: SortOrderInput | SortOrder
    current_period_starts?: SortOrderInput | SortOrder
    current_period_ends?: SortOrderInput | SortOrder
    billing_cycle_interval?: SortOrder
    billing_cycle_frequency?: SortOrder
    update_payment_method_url?: SortOrderInput | SortOrder
    cancel_url?: SortOrderInput | SortOrder
    customer_id?: SortOrder
    address_id?: SortOrder
    project_id?: SortOrder
    discount_id?: SortOrderInput | SortOrder
    collection_mode?: SortOrder
    customer?: CustomersOrderByWithRelationInput
    address?: AddressesOrderByWithRelationInput
    project?: ProjectOrderByWithRelationInput
    discount?: DiscountsOrderByWithRelationInput
    Subscription_Items?: SubscriptionItemsOrderByRelationAggregateInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesOrderByRelationAggregateInput
    BillingDetails?: BillingDetailsOrderByWithRelationInput
    transaction?: TransactionsOrderByRelationAggregateInput
  }

  export type SubscriptionsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SubscriptionsWhereInput | SubscriptionsWhereInput[]
    OR?: SubscriptionsWhereInput[]
    NOT?: SubscriptionsWhereInput | SubscriptionsWhereInput[]
    status?: EnumSubscriptionsStatusFilter<"Subscriptions"> | $Enums.SubscriptionsStatus
    currency_code?: StringFilter<"Subscriptions"> | string
    created_at?: DateTimeFilter<"Subscriptions"> | Date | string
    updated_at?: DateTimeFilter<"Subscriptions"> | Date | string
    started_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    first_billed_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    next_billed_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    paused_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    canceled_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    current_period_starts?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    current_period_ends?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFilter<"Subscriptions"> | $Enums.BillingInterval
    billing_cycle_frequency?: IntFilter<"Subscriptions"> | number
    update_payment_method_url?: StringNullableFilter<"Subscriptions"> | string | null
    cancel_url?: StringNullableFilter<"Subscriptions"> | string | null
    customer_id?: StringFilter<"Subscriptions"> | string
    address_id?: StringFilter<"Subscriptions"> | string
    project_id?: StringFilter<"Subscriptions"> | string
    discount_id?: StringNullableFilter<"Subscriptions"> | string | null
    collection_mode?: EnumCollectionModeFilter<"Subscriptions"> | $Enums.CollectionMode
    customer?: XOR<CustomersRelationFilter, CustomersWhereInput>
    address?: XOR<AddressesRelationFilter, AddressesWhereInput>
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
    discount?: XOR<DiscountsNullableRelationFilter, DiscountsWhereInput> | null
    Subscription_Items?: SubscriptionItemsListRelationFilter
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesListRelationFilter
    BillingDetails?: XOR<BillingDetailsNullableRelationFilter, BillingDetailsWhereInput> | null
    transaction?: TransactionsListRelationFilter
  }, "id">

  export type SubscriptionsOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    currency_code?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    started_at?: SortOrderInput | SortOrder
    first_billed_at?: SortOrderInput | SortOrder
    next_billed_at?: SortOrderInput | SortOrder
    paused_at?: SortOrderInput | SortOrder
    canceled_at?: SortOrderInput | SortOrder
    current_period_starts?: SortOrderInput | SortOrder
    current_period_ends?: SortOrderInput | SortOrder
    billing_cycle_interval?: SortOrder
    billing_cycle_frequency?: SortOrder
    update_payment_method_url?: SortOrderInput | SortOrder
    cancel_url?: SortOrderInput | SortOrder
    customer_id?: SortOrder
    address_id?: SortOrder
    project_id?: SortOrder
    discount_id?: SortOrderInput | SortOrder
    collection_mode?: SortOrder
    _count?: SubscriptionsCountOrderByAggregateInput
    _avg?: SubscriptionsAvgOrderByAggregateInput
    _max?: SubscriptionsMaxOrderByAggregateInput
    _min?: SubscriptionsMinOrderByAggregateInput
    _sum?: SubscriptionsSumOrderByAggregateInput
  }

  export type SubscriptionsScalarWhereWithAggregatesInput = {
    AND?: SubscriptionsScalarWhereWithAggregatesInput | SubscriptionsScalarWhereWithAggregatesInput[]
    OR?: SubscriptionsScalarWhereWithAggregatesInput[]
    NOT?: SubscriptionsScalarWhereWithAggregatesInput | SubscriptionsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Subscriptions"> | string
    status?: EnumSubscriptionsStatusWithAggregatesFilter<"Subscriptions"> | $Enums.SubscriptionsStatus
    currency_code?: StringWithAggregatesFilter<"Subscriptions"> | string
    created_at?: DateTimeWithAggregatesFilter<"Subscriptions"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Subscriptions"> | Date | string
    started_at?: DateTimeNullableWithAggregatesFilter<"Subscriptions"> | Date | string | null
    first_billed_at?: DateTimeNullableWithAggregatesFilter<"Subscriptions"> | Date | string | null
    next_billed_at?: DateTimeNullableWithAggregatesFilter<"Subscriptions"> | Date | string | null
    paused_at?: DateTimeNullableWithAggregatesFilter<"Subscriptions"> | Date | string | null
    canceled_at?: DateTimeNullableWithAggregatesFilter<"Subscriptions"> | Date | string | null
    current_period_starts?: DateTimeNullableWithAggregatesFilter<"Subscriptions"> | Date | string | null
    current_period_ends?: DateTimeNullableWithAggregatesFilter<"Subscriptions"> | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalWithAggregatesFilter<"Subscriptions"> | $Enums.BillingInterval
    billing_cycle_frequency?: IntWithAggregatesFilter<"Subscriptions"> | number
    update_payment_method_url?: StringNullableWithAggregatesFilter<"Subscriptions"> | string | null
    cancel_url?: StringNullableWithAggregatesFilter<"Subscriptions"> | string | null
    customer_id?: StringWithAggregatesFilter<"Subscriptions"> | string
    address_id?: StringWithAggregatesFilter<"Subscriptions"> | string
    project_id?: StringWithAggregatesFilter<"Subscriptions"> | string
    discount_id?: StringNullableWithAggregatesFilter<"Subscriptions"> | string | null
    collection_mode?: EnumCollectionModeWithAggregatesFilter<"Subscriptions"> | $Enums.CollectionMode
  }

  export type TransactionItemsWhereInput = {
    AND?: TransactionItemsWhereInput | TransactionItemsWhereInput[]
    OR?: TransactionItemsWhereInput[]
    NOT?: TransactionItemsWhereInput | TransactionItemsWhereInput[]
    id?: StringFilter<"TransactionItems"> | string
    price_id?: StringFilter<"TransactionItems"> | string
    quantity?: IntFilter<"TransactionItems"> | number
    transactionsId?: StringNullableFilter<"TransactionItems"> | string | null
    price?: XOR<PricesRelationFilter, PricesWhereInput>
    Transactions?: XOR<TransactionsNullableRelationFilter, TransactionsWhereInput> | null
  }

  export type TransactionItemsOrderByWithRelationInput = {
    id?: SortOrder
    price_id?: SortOrder
    quantity?: SortOrder
    transactionsId?: SortOrderInput | SortOrder
    price?: PricesOrderByWithRelationInput
    Transactions?: TransactionsOrderByWithRelationInput
  }

  export type TransactionItemsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TransactionItemsWhereInput | TransactionItemsWhereInput[]
    OR?: TransactionItemsWhereInput[]
    NOT?: TransactionItemsWhereInput | TransactionItemsWhereInput[]
    price_id?: StringFilter<"TransactionItems"> | string
    quantity?: IntFilter<"TransactionItems"> | number
    transactionsId?: StringNullableFilter<"TransactionItems"> | string | null
    price?: XOR<PricesRelationFilter, PricesWhereInput>
    Transactions?: XOR<TransactionsNullableRelationFilter, TransactionsWhereInput> | null
  }, "id">

  export type TransactionItemsOrderByWithAggregationInput = {
    id?: SortOrder
    price_id?: SortOrder
    quantity?: SortOrder
    transactionsId?: SortOrderInput | SortOrder
    _count?: TransactionItemsCountOrderByAggregateInput
    _avg?: TransactionItemsAvgOrderByAggregateInput
    _max?: TransactionItemsMaxOrderByAggregateInput
    _min?: TransactionItemsMinOrderByAggregateInput
    _sum?: TransactionItemsSumOrderByAggregateInput
  }

  export type TransactionItemsScalarWhereWithAggregatesInput = {
    AND?: TransactionItemsScalarWhereWithAggregatesInput | TransactionItemsScalarWhereWithAggregatesInput[]
    OR?: TransactionItemsScalarWhereWithAggregatesInput[]
    NOT?: TransactionItemsScalarWhereWithAggregatesInput | TransactionItemsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TransactionItems"> | string
    price_id?: StringWithAggregatesFilter<"TransactionItems"> | string
    quantity?: IntWithAggregatesFilter<"TransactionItems"> | number
    transactionsId?: StringNullableWithAggregatesFilter<"TransactionItems"> | string | null
  }

  export type TransactionPaymentWhereInput = {
    AND?: TransactionPaymentWhereInput | TransactionPaymentWhereInput[]
    OR?: TransactionPaymentWhereInput[]
    NOT?: TransactionPaymentWhereInput | TransactionPaymentWhereInput[]
    id?: StringFilter<"TransactionPayment"> | string
    transaction_id?: StringFilter<"TransactionPayment"> | string
    payment_method?: EnumPaymentMethodFilter<"TransactionPayment"> | $Enums.PaymentMethod
    payment_provider?: EnumPaymentProviderFilter<"TransactionPayment"> | $Enums.PaymentProvider
    status?: EnumPaymentStatusFilter<"TransactionPayment"> | $Enums.PaymentStatus
    amount?: DecimalFilter<"TransactionPayment"> | Decimal | DecimalJsLike | number | string
    currency_code?: StringFilter<"TransactionPayment"> | string
    mobile_network?: StringNullableFilter<"TransactionPayment"> | string | null
    phone_suffix?: StringNullableFilter<"TransactionPayment"> | string | null
    card_last4?: StringNullableFilter<"TransactionPayment"> | string | null
    card_brand?: StringNullableFilter<"TransactionPayment"> | string | null
    card_exp_month?: IntNullableFilter<"TransactionPayment"> | number | null
    card_exp_year?: IntNullableFilter<"TransactionPayment"> | number | null
    card_holder_name?: StringNullableFilter<"TransactionPayment"> | string | null
    bank_reference?: StringNullableFilter<"TransactionPayment"> | string | null
    bank_name?: StringNullableFilter<"TransactionPayment"> | string | null
    provider_reference?: StringNullableFilter<"TransactionPayment"> | string | null
    provider_metadata?: JsonNullableFilter<"TransactionPayment">
    error_message?: StringNullableFilter<"TransactionPayment"> | string | null
    created_at?: DateTimeFilter<"TransactionPayment"> | Date | string
    updated_at?: DateTimeNullableFilter<"TransactionPayment"> | Date | string | null
    transaction?: XOR<TransactionsRelationFilter, TransactionsWhereInput>
  }

  export type TransactionPaymentOrderByWithRelationInput = {
    id?: SortOrder
    transaction_id?: SortOrder
    payment_method?: SortOrder
    payment_provider?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    mobile_network?: SortOrderInput | SortOrder
    phone_suffix?: SortOrderInput | SortOrder
    card_last4?: SortOrderInput | SortOrder
    card_brand?: SortOrderInput | SortOrder
    card_exp_month?: SortOrderInput | SortOrder
    card_exp_year?: SortOrderInput | SortOrder
    card_holder_name?: SortOrderInput | SortOrder
    bank_reference?: SortOrderInput | SortOrder
    bank_name?: SortOrderInput | SortOrder
    provider_reference?: SortOrderInput | SortOrder
    provider_metadata?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    transaction?: TransactionsOrderByWithRelationInput
  }

  export type TransactionPaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    transaction_id?: string
    AND?: TransactionPaymentWhereInput | TransactionPaymentWhereInput[]
    OR?: TransactionPaymentWhereInput[]
    NOT?: TransactionPaymentWhereInput | TransactionPaymentWhereInput[]
    payment_method?: EnumPaymentMethodFilter<"TransactionPayment"> | $Enums.PaymentMethod
    payment_provider?: EnumPaymentProviderFilter<"TransactionPayment"> | $Enums.PaymentProvider
    status?: EnumPaymentStatusFilter<"TransactionPayment"> | $Enums.PaymentStatus
    amount?: DecimalFilter<"TransactionPayment"> | Decimal | DecimalJsLike | number | string
    currency_code?: StringFilter<"TransactionPayment"> | string
    mobile_network?: StringNullableFilter<"TransactionPayment"> | string | null
    phone_suffix?: StringNullableFilter<"TransactionPayment"> | string | null
    card_last4?: StringNullableFilter<"TransactionPayment"> | string | null
    card_brand?: StringNullableFilter<"TransactionPayment"> | string | null
    card_exp_month?: IntNullableFilter<"TransactionPayment"> | number | null
    card_exp_year?: IntNullableFilter<"TransactionPayment"> | number | null
    card_holder_name?: StringNullableFilter<"TransactionPayment"> | string | null
    bank_reference?: StringNullableFilter<"TransactionPayment"> | string | null
    bank_name?: StringNullableFilter<"TransactionPayment"> | string | null
    provider_reference?: StringNullableFilter<"TransactionPayment"> | string | null
    provider_metadata?: JsonNullableFilter<"TransactionPayment">
    error_message?: StringNullableFilter<"TransactionPayment"> | string | null
    created_at?: DateTimeFilter<"TransactionPayment"> | Date | string
    updated_at?: DateTimeNullableFilter<"TransactionPayment"> | Date | string | null
    transaction?: XOR<TransactionsRelationFilter, TransactionsWhereInput>
  }, "id" | "transaction_id">

  export type TransactionPaymentOrderByWithAggregationInput = {
    id?: SortOrder
    transaction_id?: SortOrder
    payment_method?: SortOrder
    payment_provider?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    mobile_network?: SortOrderInput | SortOrder
    phone_suffix?: SortOrderInput | SortOrder
    card_last4?: SortOrderInput | SortOrder
    card_brand?: SortOrderInput | SortOrder
    card_exp_month?: SortOrderInput | SortOrder
    card_exp_year?: SortOrderInput | SortOrder
    card_holder_name?: SortOrderInput | SortOrder
    bank_reference?: SortOrderInput | SortOrder
    bank_name?: SortOrderInput | SortOrder
    provider_reference?: SortOrderInput | SortOrder
    provider_metadata?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: TransactionPaymentCountOrderByAggregateInput
    _avg?: TransactionPaymentAvgOrderByAggregateInput
    _max?: TransactionPaymentMaxOrderByAggregateInput
    _min?: TransactionPaymentMinOrderByAggregateInput
    _sum?: TransactionPaymentSumOrderByAggregateInput
  }

  export type TransactionPaymentScalarWhereWithAggregatesInput = {
    AND?: TransactionPaymentScalarWhereWithAggregatesInput | TransactionPaymentScalarWhereWithAggregatesInput[]
    OR?: TransactionPaymentScalarWhereWithAggregatesInput[]
    NOT?: TransactionPaymentScalarWhereWithAggregatesInput | TransactionPaymentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TransactionPayment"> | string
    transaction_id?: StringWithAggregatesFilter<"TransactionPayment"> | string
    payment_method?: EnumPaymentMethodWithAggregatesFilter<"TransactionPayment"> | $Enums.PaymentMethod
    payment_provider?: EnumPaymentProviderWithAggregatesFilter<"TransactionPayment"> | $Enums.PaymentProvider
    status?: EnumPaymentStatusWithAggregatesFilter<"TransactionPayment"> | $Enums.PaymentStatus
    amount?: DecimalWithAggregatesFilter<"TransactionPayment"> | Decimal | DecimalJsLike | number | string
    currency_code?: StringWithAggregatesFilter<"TransactionPayment"> | string
    mobile_network?: StringNullableWithAggregatesFilter<"TransactionPayment"> | string | null
    phone_suffix?: StringNullableWithAggregatesFilter<"TransactionPayment"> | string | null
    card_last4?: StringNullableWithAggregatesFilter<"TransactionPayment"> | string | null
    card_brand?: StringNullableWithAggregatesFilter<"TransactionPayment"> | string | null
    card_exp_month?: IntNullableWithAggregatesFilter<"TransactionPayment"> | number | null
    card_exp_year?: IntNullableWithAggregatesFilter<"TransactionPayment"> | number | null
    card_holder_name?: StringNullableWithAggregatesFilter<"TransactionPayment"> | string | null
    bank_reference?: StringNullableWithAggregatesFilter<"TransactionPayment"> | string | null
    bank_name?: StringNullableWithAggregatesFilter<"TransactionPayment"> | string | null
    provider_reference?: StringNullableWithAggregatesFilter<"TransactionPayment"> | string | null
    provider_metadata?: JsonNullableWithAggregatesFilter<"TransactionPayment">
    error_message?: StringNullableWithAggregatesFilter<"TransactionPayment"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"TransactionPayment"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"TransactionPayment"> | Date | string | null
  }

  export type TransactionsWhereInput = {
    AND?: TransactionsWhereInput | TransactionsWhereInput[]
    OR?: TransactionsWhereInput[]
    NOT?: TransactionsWhereInput | TransactionsWhereInput[]
    id?: StringFilter<"Transactions"> | string
    status?: EnumTransactionStatusFilter<"Transactions"> | $Enums.TransactionStatus
    customer_id?: StringFilter<"Transactions"> | string
    address_id?: StringFilter<"Transactions"> | string
    project_id?: StringFilter<"Transactions"> | string
    product_id?: StringFilter<"Transactions"> | string
    subscription_id?: StringNullableFilter<"Transactions"> | string | null
    subtotal?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    discount_id?: StringNullableFilter<"Transactions"> | string | null
    invoice_id?: StringFilter<"Transactions"> | string
    current_period_starts?: DateTimeNullableFilter<"Transactions"> | Date | string | null
    current_period_ends?: DateTimeNullableFilter<"Transactions"> | Date | string | null
    custom_data?: JsonNullableFilter<"Transactions">
    currency_code?: StringFilter<"Transactions"> | string
    collection_mode?: EnumCollectionModeFilter<"Transactions"> | $Enums.CollectionMode
    created_at?: DateTimeFilter<"Transactions"> | Date | string
    updated_at?: DateTimeNullableFilter<"Transactions"> | Date | string | null
    customer?: XOR<CustomersRelationFilter, CustomersWhereInput>
    address?: XOR<AddressesRelationFilter, AddressesWhereInput>
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
    product?: XOR<ProductsRelationFilter, ProductsWhereInput>
    subscription?: XOR<SubscriptionsNullableRelationFilter, SubscriptionsWhereInput> | null
    TransactionPayment?: XOR<TransactionPaymentNullableRelationFilter, TransactionPaymentWhereInput> | null
    transactionItems?: TransactionItemsListRelationFilter
    discount?: XOR<DiscountsNullableRelationFilter, DiscountsWhereInput> | null
  }

  export type TransactionsOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    customer_id?: SortOrder
    address_id?: SortOrder
    project_id?: SortOrder
    product_id?: SortOrder
    subscription_id?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    discount_ammount?: SortOrder
    total?: SortOrder
    grand_total?: SortOrder
    discount_id?: SortOrderInput | SortOrder
    invoice_id?: SortOrder
    current_period_starts?: SortOrderInput | SortOrder
    current_period_ends?: SortOrderInput | SortOrder
    custom_data?: SortOrderInput | SortOrder
    currency_code?: SortOrder
    collection_mode?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    customer?: CustomersOrderByWithRelationInput
    address?: AddressesOrderByWithRelationInput
    project?: ProjectOrderByWithRelationInput
    product?: ProductsOrderByWithRelationInput
    subscription?: SubscriptionsOrderByWithRelationInput
    TransactionPayment?: TransactionPaymentOrderByWithRelationInput
    transactionItems?: TransactionItemsOrderByRelationAggregateInput
    discount?: DiscountsOrderByWithRelationInput
  }

  export type TransactionsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TransactionsWhereInput | TransactionsWhereInput[]
    OR?: TransactionsWhereInput[]
    NOT?: TransactionsWhereInput | TransactionsWhereInput[]
    status?: EnumTransactionStatusFilter<"Transactions"> | $Enums.TransactionStatus
    customer_id?: StringFilter<"Transactions"> | string
    address_id?: StringFilter<"Transactions"> | string
    project_id?: StringFilter<"Transactions"> | string
    product_id?: StringFilter<"Transactions"> | string
    subscription_id?: StringNullableFilter<"Transactions"> | string | null
    subtotal?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    discount_id?: StringNullableFilter<"Transactions"> | string | null
    invoice_id?: StringFilter<"Transactions"> | string
    current_period_starts?: DateTimeNullableFilter<"Transactions"> | Date | string | null
    current_period_ends?: DateTimeNullableFilter<"Transactions"> | Date | string | null
    custom_data?: JsonNullableFilter<"Transactions">
    currency_code?: StringFilter<"Transactions"> | string
    collection_mode?: EnumCollectionModeFilter<"Transactions"> | $Enums.CollectionMode
    created_at?: DateTimeFilter<"Transactions"> | Date | string
    updated_at?: DateTimeNullableFilter<"Transactions"> | Date | string | null
    customer?: XOR<CustomersRelationFilter, CustomersWhereInput>
    address?: XOR<AddressesRelationFilter, AddressesWhereInput>
    project?: XOR<ProjectRelationFilter, ProjectWhereInput>
    product?: XOR<ProductsRelationFilter, ProductsWhereInput>
    subscription?: XOR<SubscriptionsNullableRelationFilter, SubscriptionsWhereInput> | null
    TransactionPayment?: XOR<TransactionPaymentNullableRelationFilter, TransactionPaymentWhereInput> | null
    transactionItems?: TransactionItemsListRelationFilter
    discount?: XOR<DiscountsNullableRelationFilter, DiscountsWhereInput> | null
  }, "id">

  export type TransactionsOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    customer_id?: SortOrder
    address_id?: SortOrder
    project_id?: SortOrder
    product_id?: SortOrder
    subscription_id?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    discount_ammount?: SortOrder
    total?: SortOrder
    grand_total?: SortOrder
    discount_id?: SortOrderInput | SortOrder
    invoice_id?: SortOrder
    current_period_starts?: SortOrderInput | SortOrder
    current_period_ends?: SortOrderInput | SortOrder
    custom_data?: SortOrderInput | SortOrder
    currency_code?: SortOrder
    collection_mode?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: TransactionsCountOrderByAggregateInput
    _avg?: TransactionsAvgOrderByAggregateInput
    _max?: TransactionsMaxOrderByAggregateInput
    _min?: TransactionsMinOrderByAggregateInput
    _sum?: TransactionsSumOrderByAggregateInput
  }

  export type TransactionsScalarWhereWithAggregatesInput = {
    AND?: TransactionsScalarWhereWithAggregatesInput | TransactionsScalarWhereWithAggregatesInput[]
    OR?: TransactionsScalarWhereWithAggregatesInput[]
    NOT?: TransactionsScalarWhereWithAggregatesInput | TransactionsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Transactions"> | string
    status?: EnumTransactionStatusWithAggregatesFilter<"Transactions"> | $Enums.TransactionStatus
    customer_id?: StringWithAggregatesFilter<"Transactions"> | string
    address_id?: StringWithAggregatesFilter<"Transactions"> | string
    project_id?: StringWithAggregatesFilter<"Transactions"> | string
    product_id?: StringWithAggregatesFilter<"Transactions"> | string
    subscription_id?: StringNullableWithAggregatesFilter<"Transactions"> | string | null
    subtotal?: DecimalWithAggregatesFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalWithAggregatesFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    total?: DecimalWithAggregatesFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalWithAggregatesFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    discount_id?: StringNullableWithAggregatesFilter<"Transactions"> | string | null
    invoice_id?: StringWithAggregatesFilter<"Transactions"> | string
    current_period_starts?: DateTimeNullableWithAggregatesFilter<"Transactions"> | Date | string | null
    current_period_ends?: DateTimeNullableWithAggregatesFilter<"Transactions"> | Date | string | null
    custom_data?: JsonNullableWithAggregatesFilter<"Transactions">
    currency_code?: StringWithAggregatesFilter<"Transactions"> | string
    collection_mode?: EnumCollectionModeWithAggregatesFilter<"Transactions"> | $Enums.CollectionMode
    created_at?: DateTimeWithAggregatesFilter<"Transactions"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"Transactions"> | Date | string | null
  }

  export type ProjectCreateInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailCreateNestedManyWithoutProjectInput
    products?: ProductsCreateNestedManyWithoutProjectInput
    prices?: PricesCreateNestedManyWithoutProjectInput
    discounts?: DiscountsCreateNestedManyWithoutProjectInput
    customers?: CustomersCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersUncheckedCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteUncheckedCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailUncheckedCreateNestedManyWithoutProjectInput
    products?: ProductsUncheckedCreateNestedManyWithoutProjectInput
    prices?: PricesUncheckedCreateNestedManyWithoutProjectInput
    discounts?: DiscountsUncheckedCreateNestedManyWithoutProjectInput
    customers?: CustomersUncheckedCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUpdateManyWithoutProjectNestedInput
    products?: ProductsUpdateManyWithoutProjectNestedInput
    prices?: PricesUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUpdateManyWithoutProjectNestedInput
    customers?: CustomersUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUncheckedUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUncheckedUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUncheckedUpdateManyWithoutProjectNestedInput
    products?: ProductsUncheckedUpdateManyWithoutProjectNestedInput
    prices?: PricesUncheckedUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUncheckedUpdateManyWithoutProjectNestedInput
    customers?: CustomersUncheckedUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectCreateManyInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
  }

  export type ProjectUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectUsersCreateInput = {
    id?: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutProjectUsersInput
    project: ProjectCreateNestedOneWithoutUsersInput
  }

  export type ProjectUsersUncheckedCreateInput = {
    id?: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    projectId: string
  }

  export type ProjectUsersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProjectUsersNestedInput
    project?: ProjectUpdateOneRequiredWithoutUsersNestedInput
  }

  export type ProjectUsersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    projectId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectUsersCreateManyInput = {
    id?: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    projectId: string
  }

  export type ProjectUsersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectUsersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    projectId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectInviteCreateInput = {
    email: string
    expires: Date | string
    createdAt?: Date | string
    project: ProjectCreateNestedOneWithoutInvitesInput
  }

  export type ProjectInviteUncheckedCreateInput = {
    email: string
    expires: Date | string
    projectId: string
    createdAt?: Date | string
  }

  export type ProjectInviteUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    project?: ProjectUpdateOneRequiredWithoutInvitesNestedInput
  }

  export type ProjectInviteUncheckedUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectInviteCreateManyInput = {
    email: string
    expires: Date | string
    projectId: string
    createdAt?: Date | string
  }

  export type ProjectInviteUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectInviteUncheckedUpdateManyInput = {
    email?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SentEmailCreateInput = {
    id?: string
    type: string
    createdAt?: Date | string
    project?: ProjectCreateNestedOneWithoutSentEmailsInput
  }

  export type SentEmailUncheckedCreateInput = {
    id?: string
    type: string
    createdAt?: Date | string
    projectId?: string | null
  }

  export type SentEmailUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    project?: ProjectUpdateOneWithoutSentEmailsNestedInput
  }

  export type SentEmailUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SentEmailCreateManyInput = {
    id?: string
    type: string
    createdAt?: Date | string
    projectId?: string | null
  }

  export type SentEmailUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SentEmailUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    id?: string
    name?: string | null
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    source?: string | null
    defaultWorkspace?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    ProjectUsers?: ProjectUsersCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    api_keys?: Api_keysCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    name?: string | null
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    source?: string | null
    defaultWorkspace?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    ProjectUsers?: ProjectUsersUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    api_keys?: Api_keysUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    ProjectUsers?: ProjectUsersUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    api_keys?: Api_keysUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    ProjectUsers?: ProjectUsersUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    api_keys?: Api_keysUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    name?: string | null
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    source?: string | null
    defaultWorkspace?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountCreateInput = {
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAccountsInput
  }

  export type AccountUncheckedCreateInput = {
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountCreateManyInput = {
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateManyInput = {
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateInput = {
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    sessionToken: string
    userId: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUpdateInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateManyInput = {
    sessionToken: string
    userId: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUpdateManyMutationInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUncheckedCreateInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateManyInput = {
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateManyMutationInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateManyInput = {
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductsCreateInput = {
    id?: string
    name: string
    description: string
    status?: $Enums.product_status
    createdAt?: Date | string
    updatedAt: Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    Project: ProjectCreateNestedOneWithoutProductsInput
    prices?: PricesCreateNestedManyWithoutProductsInput
    Transactions?: TransactionsCreateNestedManyWithoutProductInput
  }

  export type ProductsUncheckedCreateInput = {
    id?: string
    name: string
    description: string
    status?: $Enums.product_status
    createdAt?: Date | string
    updatedAt: Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    project_id: string
    prices?: PricesUncheckedCreateNestedManyWithoutProductsInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumproduct_statusFieldUpdateOperationsInput | $Enums.product_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    Project?: ProjectUpdateOneRequiredWithoutProductsNestedInput
    prices?: PricesUpdateManyWithoutProductsNestedInput
    Transactions?: TransactionsUpdateManyWithoutProductNestedInput
  }

  export type ProductsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumproduct_statusFieldUpdateOperationsInput | $Enums.product_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    project_id?: StringFieldUpdateOperationsInput | string
    prices?: PricesUncheckedUpdateManyWithoutProductsNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductsCreateManyInput = {
    id?: string
    name: string
    description: string
    status?: $Enums.product_status
    createdAt?: Date | string
    updatedAt: Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    project_id: string
  }

  export type ProductsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumproduct_statusFieldUpdateOperationsInput | $Enums.product_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumproduct_statusFieldUpdateOperationsInput | $Enums.product_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    project_id?: StringFieldUpdateOperationsInput | string
  }

  export type Api_keysCreateInput = {
    id?: string
    prefix?: string | null
    description?: string | null
    createdAt?: Date | string
    key: string
    User: UserCreateNestedOneWithoutApi_keysInput
  }

  export type Api_keysUncheckedCreateInput = {
    id?: string
    prefix?: string | null
    description?: string | null
    createdAt?: Date | string
    key: string
    userId: string
  }

  export type Api_keysUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    prefix?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    key?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateOneRequiredWithoutApi_keysNestedInput
  }

  export type Api_keysUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    prefix?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    key?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type Api_keysCreateManyInput = {
    id?: string
    prefix?: string | null
    description?: string | null
    createdAt?: Date | string
    key: string
    userId: string
  }

  export type Api_keysUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    prefix?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    key?: StringFieldUpdateOperationsInput | string
  }

  export type Api_keysUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    prefix?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    key?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PricesCreateInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    Products?: ProductsCreateNestedOneWithoutPricesInput
    Project: ProjectCreateNestedOneWithoutPricesInput
    Discount_Prices?: Discount_PricesCreateNestedManyWithoutPriceInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutPriceInput
    TransactionItems?: TransactionItemsCreateNestedManyWithoutPriceInput
  }

  export type PricesUncheckedCreateInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    product_id: string
    projectId: string
    Discount_Prices?: Discount_PricesUncheckedCreateNestedManyWithoutPriceInput
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutPriceInput
    TransactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutPriceInput
  }

  export type PricesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Products?: ProductsUpdateOneWithoutPricesNestedInput
    Project?: ProjectUpdateOneRequiredWithoutPricesNestedInput
    Discount_Prices?: Discount_PricesUpdateManyWithoutPriceNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutPriceNestedInput
    TransactionItems?: TransactionItemsUpdateManyWithoutPriceNestedInput
  }

  export type PricesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_id?: StringFieldUpdateOperationsInput | string
    projectId?: StringFieldUpdateOperationsInput | string
    Discount_Prices?: Discount_PricesUncheckedUpdateManyWithoutPriceNestedInput
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutPriceNestedInput
    TransactionItems?: TransactionItemsUncheckedUpdateManyWithoutPriceNestedInput
  }

  export type PricesCreateManyInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    product_id: string
    projectId: string
  }

  export type PricesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PricesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_id?: StringFieldUpdateOperationsInput | string
    projectId?: StringFieldUpdateOperationsInput | string
  }

  export type DiscountsCreateInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
    discount_prices?: Discount_PricesCreateNestedManyWithoutDiscountInput
    Project?: ProjectCreateNestedOneWithoutDiscountsInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutDiscountInput
    Transactions?: TransactionsCreateNestedManyWithoutDiscountInput
  }

  export type DiscountsUncheckedCreateInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
    projectId?: string | null
    discount_prices?: Discount_PricesUncheckedCreateNestedManyWithoutDiscountInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutDiscountInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutDiscountInput
  }

  export type DiscountsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    discount_prices?: Discount_PricesUpdateManyWithoutDiscountNestedInput
    Project?: ProjectUpdateOneWithoutDiscountsNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutDiscountNestedInput
    Transactions?: TransactionsUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    discount_prices?: Discount_PricesUncheckedUpdateManyWithoutDiscountNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutDiscountNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountsCreateManyInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
    projectId?: string | null
  }

  export type DiscountsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscountsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Discount_PricesCreateInput = {
    discount?: DiscountsCreateNestedOneWithoutDiscount_pricesInput
    price: PricesCreateNestedOneWithoutDiscount_PricesInput
  }

  export type Discount_PricesUncheckedCreateInput = {
    discount_Id: string
    price_id: string
  }

  export type Discount_PricesUpdateInput = {
    discount?: DiscountsUpdateOneWithoutDiscount_pricesNestedInput
    price?: PricesUpdateOneRequiredWithoutDiscount_PricesNestedInput
  }

  export type Discount_PricesUncheckedUpdateInput = {
    discount_Id?: StringFieldUpdateOperationsInput | string
    price_id?: StringFieldUpdateOperationsInput | string
  }

  export type Discount_PricesCreateManyInput = {
    discount_Id: string
    price_id: string
  }

  export type Discount_PricesUpdateManyMutationInput = {

  }

  export type Discount_PricesUncheckedUpdateManyInput = {
    discount_Id?: StringFieldUpdateOperationsInput | string
    price_id?: StringFieldUpdateOperationsInput | string
  }

  export type CustomersCreateInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
    Project?: ProjectCreateNestedOneWithoutCustomersInput
    Addresses?: AddressesCreateNestedManyWithoutCustomersInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutCustomerInput
    Transactions?: TransactionsCreateNestedManyWithoutCustomerInput
  }

  export type CustomersUncheckedCreateInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
    projectId?: string | null
    Addresses?: AddressesUncheckedCreateNestedManyWithoutCustomersInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutCustomerInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Project?: ProjectUpdateOneWithoutCustomersNestedInput
    Addresses?: AddressesUpdateManyWithoutCustomersNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutCustomerNestedInput
    Transactions?: TransactionsUpdateManyWithoutCustomerNestedInput
  }

  export type CustomersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    Addresses?: AddressesUncheckedUpdateManyWithoutCustomersNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutCustomerNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomersCreateManyInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
    projectId?: string | null
  }

  export type CustomersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AddressesCreateInput = {
    id: string
    description?: string | null
    first_line?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: string | null
    status?: $Enums.Entity_Status | null
    created_at?: Date | string
    updated_at: Date | string
    Customers?: CustomersCreateNestedOneWithoutAddressesInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutAddressInput
    Transactions?: TransactionsCreateNestedManyWithoutAddressInput
  }

  export type AddressesUncheckedCreateInput = {
    id: string
    description?: string | null
    first_line?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: string | null
    status?: $Enums.Entity_Status | null
    created_at?: Date | string
    updated_at: Date | string
    customer_id?: string | null
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutAddressInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    first_line?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Customers?: CustomersUpdateOneWithoutAddressesNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutAddressNestedInput
    Transactions?: TransactionsUpdateManyWithoutAddressNestedInput
  }

  export type AddressesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    first_line?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_id?: NullableStringFieldUpdateOperationsInput | string | null
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutAddressNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type AddressesCreateManyInput = {
    id: string
    description?: string | null
    first_line?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: string | null
    status?: $Enums.Entity_Status | null
    created_at?: Date | string
    updated_at: Date | string
    customer_id?: string | null
  }

  export type AddressesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    first_line?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AddressesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    first_line?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SubscriptionItemsCreateInput = {
    id: string
    quantity: number
    status: $Enums.SubscriptionItemsStatus
    recurring: boolean
    created_at?: Date | string
    updated_at?: Date | string
    previously_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    trial_started_at?: Date | string | null
    trial_ended_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    subscription: SubscriptionsCreateNestedOneWithoutSubscription_ItemsInput
    price: PricesCreateNestedOneWithoutSubscription_ItemsInput
  }

  export type SubscriptionItemsUncheckedCreateInput = {
    id: string
    subscription_id: string
    price_id: string
    quantity: number
    status: $Enums.SubscriptionItemsStatus
    recurring: boolean
    created_at?: Date | string
    updated_at?: Date | string
    previously_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    trial_started_at?: Date | string | null
    trial_ended_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SubscriptionItemsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumSubscriptionItemsStatusFieldUpdateOperationsInput | $Enums.SubscriptionItemsStatus
    recurring?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    previously_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_ended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    subscription?: SubscriptionsUpdateOneRequiredWithoutSubscription_ItemsNestedInput
    price?: PricesUpdateOneRequiredWithoutSubscription_ItemsNestedInput
  }

  export type SubscriptionItemsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    price_id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumSubscriptionItemsStatusFieldUpdateOperationsInput | $Enums.SubscriptionItemsStatus
    recurring?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    previously_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_ended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SubscriptionItemsCreateManyInput = {
    id: string
    subscription_id: string
    price_id: string
    quantity: number
    status: $Enums.SubscriptionItemsStatus
    recurring: boolean
    created_at?: Date | string
    updated_at?: Date | string
    previously_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    trial_started_at?: Date | string | null
    trial_ended_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SubscriptionItemsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumSubscriptionItemsStatusFieldUpdateOperationsInput | $Enums.SubscriptionItemsStatus
    recurring?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    previously_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_ended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SubscriptionItemsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    price_id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumSubscriptionItemsStatusFieldUpdateOperationsInput | $Enums.SubscriptionItemsStatus
    recurring?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    previously_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_ended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type Subscription_Scheduled_ChangesCreateInput = {
    id?: string
    action: $Enums.ScheduledChangeAction
    effective_at: Date | string
    resumes_at?: Date | string | null
    status?: $Enums.ScheduledChangesStatus
    subscription: SubscriptionsCreateNestedOneWithoutSubscription_Scheduled_ChangesInput
  }

  export type Subscription_Scheduled_ChangesUncheckedCreateInput = {
    id?: string
    subscription_id: string
    action: $Enums.ScheduledChangeAction
    effective_at: Date | string
    resumes_at?: Date | string | null
    status?: $Enums.ScheduledChangesStatus
  }

  export type Subscription_Scheduled_ChangesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: EnumScheduledChangeActionFieldUpdateOperationsInput | $Enums.ScheduledChangeAction
    effective_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resumes_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumScheduledChangesStatusFieldUpdateOperationsInput | $Enums.ScheduledChangesStatus
    subscription?: SubscriptionsUpdateOneRequiredWithoutSubscription_Scheduled_ChangesNestedInput
  }

  export type Subscription_Scheduled_ChangesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    action?: EnumScheduledChangeActionFieldUpdateOperationsInput | $Enums.ScheduledChangeAction
    effective_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resumes_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumScheduledChangesStatusFieldUpdateOperationsInput | $Enums.ScheduledChangesStatus
  }

  export type Subscription_Scheduled_ChangesCreateManyInput = {
    id?: string
    subscription_id: string
    action: $Enums.ScheduledChangeAction
    effective_at: Date | string
    resumes_at?: Date | string | null
    status?: $Enums.ScheduledChangesStatus
  }

  export type Subscription_Scheduled_ChangesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: EnumScheduledChangeActionFieldUpdateOperationsInput | $Enums.ScheduledChangeAction
    effective_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resumes_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumScheduledChangesStatusFieldUpdateOperationsInput | $Enums.ScheduledChangesStatus
  }

  export type Subscription_Scheduled_ChangesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    action?: EnumScheduledChangeActionFieldUpdateOperationsInput | $Enums.ScheduledChangeAction
    effective_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resumes_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumScheduledChangesStatusFieldUpdateOperationsInput | $Enums.ScheduledChangesStatus
  }

  export type BillingDetailsCreateInput = {
    id?: string
    payment_interval: $Enums.BillingInterval
    payment_frequency: number
    enable_checkout?: boolean
    purchase_order_number?: string | null
    additional_information?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    subscription: SubscriptionsCreateNestedOneWithoutBillingDetailsInput
  }

  export type BillingDetailsUncheckedCreateInput = {
    id?: string
    subscription_id: string
    payment_interval: $Enums.BillingInterval
    payment_frequency: number
    enable_checkout?: boolean
    purchase_order_number?: string | null
    additional_information?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type BillingDetailsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    payment_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    payment_frequency?: IntFieldUpdateOperationsInput | number
    enable_checkout?: BoolFieldUpdateOperationsInput | boolean
    purchase_order_number?: NullableStringFieldUpdateOperationsInput | string | null
    additional_information?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    subscription?: SubscriptionsUpdateOneRequiredWithoutBillingDetailsNestedInput
  }

  export type BillingDetailsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    payment_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    payment_frequency?: IntFieldUpdateOperationsInput | number
    enable_checkout?: BoolFieldUpdateOperationsInput | boolean
    purchase_order_number?: NullableStringFieldUpdateOperationsInput | string | null
    additional_information?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BillingDetailsCreateManyInput = {
    id?: string
    subscription_id: string
    payment_interval: $Enums.BillingInterval
    payment_frequency: number
    enable_checkout?: boolean
    purchase_order_number?: string | null
    additional_information?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type BillingDetailsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    payment_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    payment_frequency?: IntFieldUpdateOperationsInput | number
    enable_checkout?: BoolFieldUpdateOperationsInput | boolean
    purchase_order_number?: NullableStringFieldUpdateOperationsInput | string | null
    additional_information?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BillingDetailsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    payment_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    payment_frequency?: IntFieldUpdateOperationsInput | number
    enable_checkout?: BoolFieldUpdateOperationsInput | boolean
    purchase_order_number?: NullableStringFieldUpdateOperationsInput | string | null
    additional_information?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionsCreateInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    collection_mode: $Enums.CollectionMode
    customer: CustomersCreateNestedOneWithoutSubscriptionsInput
    address: AddressesCreateNestedOneWithoutSubscriptionsInput
    project: ProjectCreateNestedOneWithoutSubscriptionsInput
    discount?: DiscountsCreateNestedOneWithoutSubscriptionsInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsUncheckedCreateInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    address_id: string
    project_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsUncheckedCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    customer?: CustomersUpdateOneRequiredWithoutSubscriptionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutSubscriptionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutSubscriptionsNestedInput
    discount?: DiscountsUpdateOneWithoutSubscriptionsNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUncheckedUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsCreateManyInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    address_id: string
    project_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
  }

  export type SubscriptionsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
  }

  export type SubscriptionsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
  }

  export type TransactionItemsCreateInput = {
    id?: string
    quantity: number
    price: PricesCreateNestedOneWithoutTransactionItemsInput
    Transactions?: TransactionsCreateNestedOneWithoutTransactionItemsInput
  }

  export type TransactionItemsUncheckedCreateInput = {
    id?: string
    price_id: string
    quantity: number
    transactionsId?: string | null
  }

  export type TransactionItemsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    price?: PricesUpdateOneRequiredWithoutTransactionItemsNestedInput
    Transactions?: TransactionsUpdateOneWithoutTransactionItemsNestedInput
  }

  export type TransactionItemsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    price_id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    transactionsId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionItemsCreateManyInput = {
    id?: string
    price_id: string
    quantity: number
    transactionsId?: string | null
  }

  export type TransactionItemsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
  }

  export type TransactionItemsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    price_id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    transactionsId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionPaymentCreateInput = {
    id?: string
    payment_method: $Enums.PaymentMethod
    payment_provider: $Enums.PaymentProvider
    status?: $Enums.PaymentStatus
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    mobile_network?: string | null
    phone_suffix?: string | null
    card_last4?: string | null
    card_brand?: string | null
    card_exp_month?: number | null
    card_exp_year?: number | null
    card_holder_name?: string | null
    bank_reference?: string | null
    bank_name?: string | null
    provider_reference?: string | null
    provider_metadata?: NullableJsonNullValueInput | InputJsonValue
    error_message?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    transaction: TransactionsCreateNestedOneWithoutTransactionPaymentInput
  }

  export type TransactionPaymentUncheckedCreateInput = {
    id?: string
    transaction_id: string
    payment_method: $Enums.PaymentMethod
    payment_provider: $Enums.PaymentProvider
    status?: $Enums.PaymentStatus
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    mobile_network?: string | null
    phone_suffix?: string | null
    card_last4?: string | null
    card_brand?: string | null
    card_exp_month?: number | null
    card_exp_year?: number | null
    card_holder_name?: string | null
    bank_reference?: string | null
    bank_name?: string | null
    provider_reference?: string | null
    provider_metadata?: NullableJsonNullValueInput | InputJsonValue
    error_message?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type TransactionPaymentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    payment_method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    payment_provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    mobile_network?: NullableStringFieldUpdateOperationsInput | string | null
    phone_suffix?: NullableStringFieldUpdateOperationsInput | string | null
    card_last4?: NullableStringFieldUpdateOperationsInput | string | null
    card_brand?: NullableStringFieldUpdateOperationsInput | string | null
    card_exp_month?: NullableIntFieldUpdateOperationsInput | number | null
    card_exp_year?: NullableIntFieldUpdateOperationsInput | number | null
    card_holder_name?: NullableStringFieldUpdateOperationsInput | string | null
    bank_reference?: NullableStringFieldUpdateOperationsInput | string | null
    bank_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider_reference?: NullableStringFieldUpdateOperationsInput | string | null
    provider_metadata?: NullableJsonNullValueInput | InputJsonValue
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaction?: TransactionsUpdateOneRequiredWithoutTransactionPaymentNestedInput
  }

  export type TransactionPaymentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    transaction_id?: StringFieldUpdateOperationsInput | string
    payment_method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    payment_provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    mobile_network?: NullableStringFieldUpdateOperationsInput | string | null
    phone_suffix?: NullableStringFieldUpdateOperationsInput | string | null
    card_last4?: NullableStringFieldUpdateOperationsInput | string | null
    card_brand?: NullableStringFieldUpdateOperationsInput | string | null
    card_exp_month?: NullableIntFieldUpdateOperationsInput | number | null
    card_exp_year?: NullableIntFieldUpdateOperationsInput | number | null
    card_holder_name?: NullableStringFieldUpdateOperationsInput | string | null
    bank_reference?: NullableStringFieldUpdateOperationsInput | string | null
    bank_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider_reference?: NullableStringFieldUpdateOperationsInput | string | null
    provider_metadata?: NullableJsonNullValueInput | InputJsonValue
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransactionPaymentCreateManyInput = {
    id?: string
    transaction_id: string
    payment_method: $Enums.PaymentMethod
    payment_provider: $Enums.PaymentProvider
    status?: $Enums.PaymentStatus
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    mobile_network?: string | null
    phone_suffix?: string | null
    card_last4?: string | null
    card_brand?: string | null
    card_exp_month?: number | null
    card_exp_year?: number | null
    card_holder_name?: string | null
    bank_reference?: string | null
    bank_name?: string | null
    provider_reference?: string | null
    provider_metadata?: NullableJsonNullValueInput | InputJsonValue
    error_message?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type TransactionPaymentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    payment_method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    payment_provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    mobile_network?: NullableStringFieldUpdateOperationsInput | string | null
    phone_suffix?: NullableStringFieldUpdateOperationsInput | string | null
    card_last4?: NullableStringFieldUpdateOperationsInput | string | null
    card_brand?: NullableStringFieldUpdateOperationsInput | string | null
    card_exp_month?: NullableIntFieldUpdateOperationsInput | number | null
    card_exp_year?: NullableIntFieldUpdateOperationsInput | number | null
    card_holder_name?: NullableStringFieldUpdateOperationsInput | string | null
    bank_reference?: NullableStringFieldUpdateOperationsInput | string | null
    bank_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider_reference?: NullableStringFieldUpdateOperationsInput | string | null
    provider_metadata?: NullableJsonNullValueInput | InputJsonValue
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransactionPaymentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    transaction_id?: StringFieldUpdateOperationsInput | string
    payment_method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    payment_provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    mobile_network?: NullableStringFieldUpdateOperationsInput | string | null
    phone_suffix?: NullableStringFieldUpdateOperationsInput | string | null
    card_last4?: NullableStringFieldUpdateOperationsInput | string | null
    card_brand?: NullableStringFieldUpdateOperationsInput | string | null
    card_exp_month?: NullableIntFieldUpdateOperationsInput | number | null
    card_exp_year?: NullableIntFieldUpdateOperationsInput | number | null
    card_holder_name?: NullableStringFieldUpdateOperationsInput | string | null
    bank_reference?: NullableStringFieldUpdateOperationsInput | string | null
    bank_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider_reference?: NullableStringFieldUpdateOperationsInput | string | null
    provider_metadata?: NullableJsonNullValueInput | InputJsonValue
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransactionsCreateInput = {
    id: string
    status: $Enums.TransactionStatus
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    customer: CustomersCreateNestedOneWithoutTransactionsInput
    address: AddressesCreateNestedOneWithoutTransactionsInput
    project: ProjectCreateNestedOneWithoutTransactionsInput
    product: ProductsCreateNestedOneWithoutTransactionsInput
    subscription?: SubscriptionsCreateNestedOneWithoutTransactionInput
    TransactionPayment?: TransactionPaymentCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsCreateNestedManyWithoutTransactionsInput
    discount?: DiscountsCreateNestedOneWithoutTransactionsInput
  }

  export type TransactionsUncheckedCreateInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    project_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutTransactionsInput
  }

  export type TransactionsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer?: CustomersUpdateOneRequiredWithoutTransactionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutTransactionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutTransactionsNestedInput
    product?: ProductsUpdateOneRequiredWithoutTransactionsNestedInput
    subscription?: SubscriptionsUpdateOneWithoutTransactionNestedInput
    TransactionPayment?: TransactionPaymentUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUpdateManyWithoutTransactionsNestedInput
    discount?: DiscountsUpdateOneWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUncheckedUpdateManyWithoutTransactionsNestedInput
  }

  export type TransactionsCreateManyInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    project_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type TransactionsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransactionsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ProjectUsersListRelationFilter = {
    every?: ProjectUsersWhereInput
    some?: ProjectUsersWhereInput
    none?: ProjectUsersWhereInput
  }

  export type ProjectInviteListRelationFilter = {
    every?: ProjectInviteWhereInput
    some?: ProjectInviteWhereInput
    none?: ProjectInviteWhereInput
  }

  export type SentEmailListRelationFilter = {
    every?: SentEmailWhereInput
    some?: SentEmailWhereInput
    none?: SentEmailWhereInput
  }

  export type ProductsListRelationFilter = {
    every?: ProductsWhereInput
    some?: ProductsWhereInput
    none?: ProductsWhereInput
  }

  export type PricesListRelationFilter = {
    every?: PricesWhereInput
    some?: PricesWhereInput
    none?: PricesWhereInput
  }

  export type DiscountsListRelationFilter = {
    every?: DiscountsWhereInput
    some?: DiscountsWhereInput
    none?: DiscountsWhereInput
  }

  export type CustomersListRelationFilter = {
    every?: CustomersWhereInput
    some?: CustomersWhereInput
    none?: CustomersWhereInput
  }

  export type SubscriptionsListRelationFilter = {
    every?: SubscriptionsWhereInput
    some?: SubscriptionsWhereInput
    none?: SubscriptionsWhereInput
  }

  export type TransactionsListRelationFilter = {
    every?: TransactionsWhereInput
    some?: TransactionsWhereInput
    none?: TransactionsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ProjectUsersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectInviteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SentEmailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PricesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DiscountsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubscriptionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TransactionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    plan?: SortOrder
    billingCycleStart?: SortOrder
    inviteCode?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    usageLastChecked?: SortOrder
  }

  export type ProjectAvgOrderByAggregateInput = {
    billingCycleStart?: SortOrder
  }

  export type ProjectMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    plan?: SortOrder
    billingCycleStart?: SortOrder
    inviteCode?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    usageLastChecked?: SortOrder
  }

  export type ProjectMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    plan?: SortOrder
    billingCycleStart?: SortOrder
    inviteCode?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    usageLastChecked?: SortOrder
  }

  export type ProjectSumOrderByAggregateInput = {
    billingCycleStart?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type ProjectRelationFilter = {
    is?: ProjectWhereInput
    isNot?: ProjectWhereInput
  }

  export type ProjectUsersUserIdProjectIdCompoundUniqueInput = {
    userId: string
    projectId: string
  }

  export type ProjectUsersCountOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    projectId?: SortOrder
  }

  export type ProjectUsersMaxOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    projectId?: SortOrder
  }

  export type ProjectUsersMinOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    projectId?: SortOrder
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type ProjectInviteEmailProjectIdCompoundUniqueInput = {
    email: string
    projectId: string
  }

  export type ProjectInviteCountOrderByAggregateInput = {
    email?: SortOrder
    expires?: SortOrder
    projectId?: SortOrder
    createdAt?: SortOrder
  }

  export type ProjectInviteMaxOrderByAggregateInput = {
    email?: SortOrder
    expires?: SortOrder
    projectId?: SortOrder
    createdAt?: SortOrder
  }

  export type ProjectInviteMinOrderByAggregateInput = {
    email?: SortOrder
    expires?: SortOrder
    projectId?: SortOrder
    createdAt?: SortOrder
  }

  export type ProjectNullableRelationFilter = {
    is?: ProjectWhereInput | null
    isNot?: ProjectWhereInput | null
  }

  export type SentEmailCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    projectId?: SortOrder
  }

  export type SentEmailMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    projectId?: SortOrder
  }

  export type SentEmailMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    projectId?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type Api_keysListRelationFilter = {
    every?: Api_keysWhereInput
    some?: Api_keysWhereInput
    none?: Api_keysWhereInput
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Api_keysOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    source?: SortOrder
    defaultWorkspace?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    source?: SortOrder
    defaultWorkspace?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    source?: SortOrder
    defaultWorkspace?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type AccountProviderProviderAccountIdCompoundUniqueInput = {
    provider: string
    providerAccountId: string
  }

  export type AccountCountOrderByAggregateInput = {
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type SessionCountOrderByAggregateInput = {
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationTokenIdentifierTokenCompoundUniqueInput = {
    identifier: string
    token: string
  }

  export type VerificationTokenCountOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMaxOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMinOrderByAggregateInput = {
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type Enumproduct_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.product_status | Enumproduct_statusFieldRefInput<$PrismaModel>
    in?: $Enums.product_status[] | ListEnumproduct_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.product_status[] | ListEnumproduct_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumproduct_statusFilter<$PrismaModel> | $Enums.product_status
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ProductsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    custom_data?: SortOrder
    project_id?: SortOrder
  }

  export type ProductsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    project_id?: SortOrder
  }

  export type ProductsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    project_id?: SortOrder
  }

  export type Enumproduct_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.product_status | Enumproduct_statusFieldRefInput<$PrismaModel>
    in?: $Enums.product_status[] | ListEnumproduct_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.product_status[] | ListEnumproduct_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumproduct_statusWithAggregatesFilter<$PrismaModel> | $Enums.product_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumproduct_statusFilter<$PrismaModel>
    _max?: NestedEnumproduct_statusFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type Api_keysCountOrderByAggregateInput = {
    id?: SortOrder
    prefix?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    key?: SortOrder
    userId?: SortOrder
  }

  export type Api_keysMaxOrderByAggregateInput = {
    id?: SortOrder
    prefix?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    key?: SortOrder
    userId?: SortOrder
  }

  export type Api_keysMinOrderByAggregateInput = {
    id?: SortOrder
    prefix?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    key?: SortOrder
    userId?: SortOrder
  }

  export type EnumPriceTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PriceType | EnumPriceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPriceTypeFilter<$PrismaModel> | $Enums.PriceType
  }

  export type EnumBillingIntervalFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingInterval | EnumBillingIntervalFieldRefInput<$PrismaModel>
    in?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel>
    notIn?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel>
    not?: NestedEnumBillingIntervalFilter<$PrismaModel> | $Enums.BillingInterval
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type EnumEntity_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.Entity_Status | EnumEntity_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEntity_StatusFilter<$PrismaModel> | $Enums.Entity_Status
  }

  export type ProductsNullableRelationFilter = {
    is?: ProductsWhereInput | null
    isNot?: ProductsWhereInput | null
  }

  export type Discount_PricesListRelationFilter = {
    every?: Discount_PricesWhereInput
    some?: Discount_PricesWhereInput
    none?: Discount_PricesWhereInput
  }

  export type SubscriptionItemsListRelationFilter = {
    every?: SubscriptionItemsWhereInput
    some?: SubscriptionItemsWhereInput
    none?: SubscriptionItemsWhereInput
  }

  export type TransactionItemsListRelationFilter = {
    every?: TransactionItemsWhereInput
    some?: TransactionItemsWhereInput
    none?: TransactionItemsWhereInput
  }

  export type Discount_PricesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubscriptionItemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TransactionItemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PricesCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    description?: SortOrder
    name?: SortOrder
    billing_cycle_frequency?: SortOrder
    billing_cycle_interval?: SortOrder
    trial_period_frequency?: SortOrder
    trial_period_interval?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    custom_data?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    product_id?: SortOrder
    projectId?: SortOrder
  }

  export type PricesAvgOrderByAggregateInput = {
    billing_cycle_frequency?: SortOrder
    trial_period_frequency?: SortOrder
    amount?: SortOrder
  }

  export type PricesMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    description?: SortOrder
    name?: SortOrder
    billing_cycle_frequency?: SortOrder
    billing_cycle_interval?: SortOrder
    trial_period_frequency?: SortOrder
    trial_period_interval?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    product_id?: SortOrder
    projectId?: SortOrder
  }

  export type PricesMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    description?: SortOrder
    name?: SortOrder
    billing_cycle_frequency?: SortOrder
    billing_cycle_interval?: SortOrder
    trial_period_frequency?: SortOrder
    trial_period_interval?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    product_id?: SortOrder
    projectId?: SortOrder
  }

  export type PricesSumOrderByAggregateInput = {
    billing_cycle_frequency?: SortOrder
    trial_period_frequency?: SortOrder
    amount?: SortOrder
  }

  export type EnumPriceTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PriceType | EnumPriceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPriceTypeWithAggregatesFilter<$PrismaModel> | $Enums.PriceType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPriceTypeFilter<$PrismaModel>
    _max?: NestedEnumPriceTypeFilter<$PrismaModel>
  }

  export type EnumBillingIntervalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingInterval | EnumBillingIntervalFieldRefInput<$PrismaModel>
    in?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel>
    notIn?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel>
    not?: NestedEnumBillingIntervalWithAggregatesFilter<$PrismaModel> | $Enums.BillingInterval
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBillingIntervalFilter<$PrismaModel>
    _max?: NestedEnumBillingIntervalFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumEntity_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Entity_Status | EnumEntity_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEntity_StatusWithAggregatesFilter<$PrismaModel> | $Enums.Entity_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEntity_StatusFilter<$PrismaModel>
    _max?: NestedEnumEntity_StatusFilter<$PrismaModel>
  }

  export type EnumEntity_StatusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Entity_Status | EnumEntity_StatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEntity_StatusNullableFilter<$PrismaModel> | $Enums.Entity_Status | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type EnumDiscount_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.Discount_type | EnumDiscount_typeFieldRefInput<$PrismaModel>
    in?: $Enums.Discount_type[] | ListEnumDiscount_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Discount_type[] | ListEnumDiscount_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumDiscount_typeFilter<$PrismaModel> | $Enums.Discount_type
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type DiscountsCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    description?: SortOrder
    enabled_for_checkout?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    type?: SortOrder
    recur?: SortOrder
    max_recurring_intervals?: SortOrder
    usage_limit?: SortOrder
    expires_at?: SortOrder
    custom_data?: SortOrder
    times_used?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    projectId?: SortOrder
  }

  export type DiscountsAvgOrderByAggregateInput = {
    amount?: SortOrder
    max_recurring_intervals?: SortOrder
    usage_limit?: SortOrder
    times_used?: SortOrder
  }

  export type DiscountsMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    description?: SortOrder
    enabled_for_checkout?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    type?: SortOrder
    recur?: SortOrder
    max_recurring_intervals?: SortOrder
    usage_limit?: SortOrder
    expires_at?: SortOrder
    times_used?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    projectId?: SortOrder
  }

  export type DiscountsMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    description?: SortOrder
    enabled_for_checkout?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    type?: SortOrder
    recur?: SortOrder
    max_recurring_intervals?: SortOrder
    usage_limit?: SortOrder
    expires_at?: SortOrder
    times_used?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    projectId?: SortOrder
  }

  export type DiscountsSumOrderByAggregateInput = {
    amount?: SortOrder
    max_recurring_intervals?: SortOrder
    usage_limit?: SortOrder
    times_used?: SortOrder
  }

  export type EnumEntity_StatusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Entity_Status | EnumEntity_StatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEntity_StatusNullableWithAggregatesFilter<$PrismaModel> | $Enums.Entity_Status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEntity_StatusNullableFilter<$PrismaModel>
    _max?: NestedEnumEntity_StatusNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type EnumDiscount_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Discount_type | EnumDiscount_typeFieldRefInput<$PrismaModel>
    in?: $Enums.Discount_type[] | ListEnumDiscount_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Discount_type[] | ListEnumDiscount_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumDiscount_typeWithAggregatesFilter<$PrismaModel> | $Enums.Discount_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDiscount_typeFilter<$PrismaModel>
    _max?: NestedEnumDiscount_typeFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DiscountsNullableRelationFilter = {
    is?: DiscountsWhereInput | null
    isNot?: DiscountsWhereInput | null
  }

  export type PricesRelationFilter = {
    is?: PricesWhereInput
    isNot?: PricesWhereInput
  }

  export type Discount_PricesDiscount_IdPrice_idCompoundUniqueInput = {
    discount_Id: string
    price_id: string
  }

  export type Discount_PricesCountOrderByAggregateInput = {
    discount_Id?: SortOrder
    price_id?: SortOrder
  }

  export type Discount_PricesMaxOrderByAggregateInput = {
    discount_Id?: SortOrder
    price_id?: SortOrder
  }

  export type Discount_PricesMinOrderByAggregateInput = {
    discount_Id?: SortOrder
    price_id?: SortOrder
  }

  export type AddressesListRelationFilter = {
    every?: AddressesWhereInput
    some?: AddressesWhereInput
    none?: AddressesWhereInput
  }

  export type AddressesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomersCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    status?: SortOrder
    description?: SortOrder
    custom_data?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    projectId?: SortOrder
  }

  export type CustomersMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    status?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    projectId?: SortOrder
  }

  export type CustomersMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    status?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    projectId?: SortOrder
  }

  export type CustomersNullableRelationFilter = {
    is?: CustomersWhereInput | null
    isNot?: CustomersWhereInput | null
  }

  export type AddressesCountOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    first_line?: SortOrder
    custom_data?: SortOrder
    city?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    customer_id?: SortOrder
  }

  export type AddressesMaxOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    first_line?: SortOrder
    city?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    customer_id?: SortOrder
  }

  export type AddressesMinOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    first_line?: SortOrder
    city?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    customer_id?: SortOrder
  }

  export type EnumSubscriptionItemsStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionItemsStatus | EnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionItemsStatus[] | ListEnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionItemsStatus[] | ListEnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionItemsStatusFilter<$PrismaModel> | $Enums.SubscriptionItemsStatus
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type SubscriptionsRelationFilter = {
    is?: SubscriptionsWhereInput
    isNot?: SubscriptionsWhereInput
  }

  export type SubscriptionItemsCountOrderByAggregateInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    price_id?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    recurring?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    previously_billed_at?: SortOrder
    next_billed_at?: SortOrder
    trial_started_at?: SortOrder
    trial_ended_at?: SortOrder
    custom_data?: SortOrder
  }

  export type SubscriptionItemsAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type SubscriptionItemsMaxOrderByAggregateInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    price_id?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    recurring?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    previously_billed_at?: SortOrder
    next_billed_at?: SortOrder
    trial_started_at?: SortOrder
    trial_ended_at?: SortOrder
  }

  export type SubscriptionItemsMinOrderByAggregateInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    price_id?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    recurring?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    previously_billed_at?: SortOrder
    next_billed_at?: SortOrder
    trial_started_at?: SortOrder
    trial_ended_at?: SortOrder
  }

  export type SubscriptionItemsSumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type EnumSubscriptionItemsStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionItemsStatus | EnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionItemsStatus[] | ListEnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionItemsStatus[] | ListEnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionItemsStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionItemsStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionItemsStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionItemsStatusFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumScheduledChangeActionFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduledChangeAction | EnumScheduledChangeActionFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduledChangeAction[] | ListEnumScheduledChangeActionFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduledChangeAction[] | ListEnumScheduledChangeActionFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduledChangeActionFilter<$PrismaModel> | $Enums.ScheduledChangeAction
  }

  export type EnumScheduledChangesStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduledChangesStatus | EnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduledChangesStatus[] | ListEnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduledChangesStatus[] | ListEnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduledChangesStatusFilter<$PrismaModel> | $Enums.ScheduledChangesStatus
  }

  export type Subscription_Scheduled_ChangesCountOrderByAggregateInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    action?: SortOrder
    effective_at?: SortOrder
    resumes_at?: SortOrder
    status?: SortOrder
  }

  export type Subscription_Scheduled_ChangesMaxOrderByAggregateInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    action?: SortOrder
    effective_at?: SortOrder
    resumes_at?: SortOrder
    status?: SortOrder
  }

  export type Subscription_Scheduled_ChangesMinOrderByAggregateInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    action?: SortOrder
    effective_at?: SortOrder
    resumes_at?: SortOrder
    status?: SortOrder
  }

  export type EnumScheduledChangeActionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduledChangeAction | EnumScheduledChangeActionFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduledChangeAction[] | ListEnumScheduledChangeActionFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduledChangeAction[] | ListEnumScheduledChangeActionFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduledChangeActionWithAggregatesFilter<$PrismaModel> | $Enums.ScheduledChangeAction
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumScheduledChangeActionFilter<$PrismaModel>
    _max?: NestedEnumScheduledChangeActionFilter<$PrismaModel>
  }

  export type EnumScheduledChangesStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduledChangesStatus | EnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduledChangesStatus[] | ListEnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduledChangesStatus[] | ListEnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduledChangesStatusWithAggregatesFilter<$PrismaModel> | $Enums.ScheduledChangesStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumScheduledChangesStatusFilter<$PrismaModel>
    _max?: NestedEnumScheduledChangesStatusFilter<$PrismaModel>
  }

  export type BillingDetailsCountOrderByAggregateInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    payment_interval?: SortOrder
    payment_frequency?: SortOrder
    enable_checkout?: SortOrder
    purchase_order_number?: SortOrder
    additional_information?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type BillingDetailsAvgOrderByAggregateInput = {
    payment_frequency?: SortOrder
  }

  export type BillingDetailsMaxOrderByAggregateInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    payment_interval?: SortOrder
    payment_frequency?: SortOrder
    enable_checkout?: SortOrder
    purchase_order_number?: SortOrder
    additional_information?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type BillingDetailsMinOrderByAggregateInput = {
    id?: SortOrder
    subscription_id?: SortOrder
    payment_interval?: SortOrder
    payment_frequency?: SortOrder
    enable_checkout?: SortOrder
    purchase_order_number?: SortOrder
    additional_information?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type BillingDetailsSumOrderByAggregateInput = {
    payment_frequency?: SortOrder
  }

  export type EnumSubscriptionsStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionsStatus | EnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionsStatus[] | ListEnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionsStatus[] | ListEnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionsStatusFilter<$PrismaModel> | $Enums.SubscriptionsStatus
  }

  export type EnumCollectionModeFilter<$PrismaModel = never> = {
    equals?: $Enums.CollectionMode | EnumCollectionModeFieldRefInput<$PrismaModel>
    in?: $Enums.CollectionMode[] | ListEnumCollectionModeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CollectionMode[] | ListEnumCollectionModeFieldRefInput<$PrismaModel>
    not?: NestedEnumCollectionModeFilter<$PrismaModel> | $Enums.CollectionMode
  }

  export type CustomersRelationFilter = {
    is?: CustomersWhereInput
    isNot?: CustomersWhereInput
  }

  export type AddressesRelationFilter = {
    is?: AddressesWhereInput
    isNot?: AddressesWhereInput
  }

  export type Subscription_Scheduled_ChangesListRelationFilter = {
    every?: Subscription_Scheduled_ChangesWhereInput
    some?: Subscription_Scheduled_ChangesWhereInput
    none?: Subscription_Scheduled_ChangesWhereInput
  }

  export type BillingDetailsNullableRelationFilter = {
    is?: BillingDetailsWhereInput | null
    isNot?: BillingDetailsWhereInput | null
  }

  export type Subscription_Scheduled_ChangesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubscriptionsCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    currency_code?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    started_at?: SortOrder
    first_billed_at?: SortOrder
    next_billed_at?: SortOrder
    paused_at?: SortOrder
    canceled_at?: SortOrder
    current_period_starts?: SortOrder
    current_period_ends?: SortOrder
    billing_cycle_interval?: SortOrder
    billing_cycle_frequency?: SortOrder
    update_payment_method_url?: SortOrder
    cancel_url?: SortOrder
    customer_id?: SortOrder
    address_id?: SortOrder
    project_id?: SortOrder
    discount_id?: SortOrder
    collection_mode?: SortOrder
  }

  export type SubscriptionsAvgOrderByAggregateInput = {
    billing_cycle_frequency?: SortOrder
  }

  export type SubscriptionsMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    currency_code?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    started_at?: SortOrder
    first_billed_at?: SortOrder
    next_billed_at?: SortOrder
    paused_at?: SortOrder
    canceled_at?: SortOrder
    current_period_starts?: SortOrder
    current_period_ends?: SortOrder
    billing_cycle_interval?: SortOrder
    billing_cycle_frequency?: SortOrder
    update_payment_method_url?: SortOrder
    cancel_url?: SortOrder
    customer_id?: SortOrder
    address_id?: SortOrder
    project_id?: SortOrder
    discount_id?: SortOrder
    collection_mode?: SortOrder
  }

  export type SubscriptionsMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    currency_code?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    started_at?: SortOrder
    first_billed_at?: SortOrder
    next_billed_at?: SortOrder
    paused_at?: SortOrder
    canceled_at?: SortOrder
    current_period_starts?: SortOrder
    current_period_ends?: SortOrder
    billing_cycle_interval?: SortOrder
    billing_cycle_frequency?: SortOrder
    update_payment_method_url?: SortOrder
    cancel_url?: SortOrder
    customer_id?: SortOrder
    address_id?: SortOrder
    project_id?: SortOrder
    discount_id?: SortOrder
    collection_mode?: SortOrder
  }

  export type SubscriptionsSumOrderByAggregateInput = {
    billing_cycle_frequency?: SortOrder
  }

  export type EnumSubscriptionsStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionsStatus | EnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionsStatus[] | ListEnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionsStatus[] | ListEnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionsStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionsStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionsStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionsStatusFilter<$PrismaModel>
  }

  export type EnumCollectionModeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CollectionMode | EnumCollectionModeFieldRefInput<$PrismaModel>
    in?: $Enums.CollectionMode[] | ListEnumCollectionModeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CollectionMode[] | ListEnumCollectionModeFieldRefInput<$PrismaModel>
    not?: NestedEnumCollectionModeWithAggregatesFilter<$PrismaModel> | $Enums.CollectionMode
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCollectionModeFilter<$PrismaModel>
    _max?: NestedEnumCollectionModeFilter<$PrismaModel>
  }

  export type TransactionsNullableRelationFilter = {
    is?: TransactionsWhereInput | null
    isNot?: TransactionsWhereInput | null
  }

  export type TransactionItemsCountOrderByAggregateInput = {
    id?: SortOrder
    price_id?: SortOrder
    quantity?: SortOrder
    transactionsId?: SortOrder
  }

  export type TransactionItemsAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type TransactionItemsMaxOrderByAggregateInput = {
    id?: SortOrder
    price_id?: SortOrder
    quantity?: SortOrder
    transactionsId?: SortOrder
  }

  export type TransactionItemsMinOrderByAggregateInput = {
    id?: SortOrder
    price_id?: SortOrder
    quantity?: SortOrder
    transactionsId?: SortOrder
  }

  export type TransactionItemsSumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type EnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type EnumPaymentProviderFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentProvider | EnumPaymentProviderFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentProviderFilter<$PrismaModel> | $Enums.PaymentProvider
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type TransactionsRelationFilter = {
    is?: TransactionsWhereInput
    isNot?: TransactionsWhereInput
  }

  export type TransactionPaymentCountOrderByAggregateInput = {
    id?: SortOrder
    transaction_id?: SortOrder
    payment_method?: SortOrder
    payment_provider?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    mobile_network?: SortOrder
    phone_suffix?: SortOrder
    card_last4?: SortOrder
    card_brand?: SortOrder
    card_exp_month?: SortOrder
    card_exp_year?: SortOrder
    card_holder_name?: SortOrder
    bank_reference?: SortOrder
    bank_name?: SortOrder
    provider_reference?: SortOrder
    provider_metadata?: SortOrder
    error_message?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type TransactionPaymentAvgOrderByAggregateInput = {
    amount?: SortOrder
    card_exp_month?: SortOrder
    card_exp_year?: SortOrder
  }

  export type TransactionPaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    transaction_id?: SortOrder
    payment_method?: SortOrder
    payment_provider?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    mobile_network?: SortOrder
    phone_suffix?: SortOrder
    card_last4?: SortOrder
    card_brand?: SortOrder
    card_exp_month?: SortOrder
    card_exp_year?: SortOrder
    card_holder_name?: SortOrder
    bank_reference?: SortOrder
    bank_name?: SortOrder
    provider_reference?: SortOrder
    error_message?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type TransactionPaymentMinOrderByAggregateInput = {
    id?: SortOrder
    transaction_id?: SortOrder
    payment_method?: SortOrder
    payment_provider?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    currency_code?: SortOrder
    mobile_network?: SortOrder
    phone_suffix?: SortOrder
    card_last4?: SortOrder
    card_brand?: SortOrder
    card_exp_month?: SortOrder
    card_exp_year?: SortOrder
    card_holder_name?: SortOrder
    bank_reference?: SortOrder
    bank_name?: SortOrder
    provider_reference?: SortOrder
    error_message?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type TransactionPaymentSumOrderByAggregateInput = {
    amount?: SortOrder
    card_exp_month?: SortOrder
    card_exp_year?: SortOrder
  }

  export type EnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type EnumPaymentProviderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentProvider | EnumPaymentProviderFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentProviderWithAggregatesFilter<$PrismaModel> | $Enums.PaymentProvider
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentProviderFilter<$PrismaModel>
    _max?: NestedEnumPaymentProviderFilter<$PrismaModel>
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type EnumTransactionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusFilter<$PrismaModel> | $Enums.TransactionStatus
  }

  export type ProductsRelationFilter = {
    is?: ProductsWhereInput
    isNot?: ProductsWhereInput
  }

  export type SubscriptionsNullableRelationFilter = {
    is?: SubscriptionsWhereInput | null
    isNot?: SubscriptionsWhereInput | null
  }

  export type TransactionPaymentNullableRelationFilter = {
    is?: TransactionPaymentWhereInput | null
    isNot?: TransactionPaymentWhereInput | null
  }

  export type TransactionsCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    customer_id?: SortOrder
    address_id?: SortOrder
    project_id?: SortOrder
    product_id?: SortOrder
    subscription_id?: SortOrder
    subtotal?: SortOrder
    discount_ammount?: SortOrder
    total?: SortOrder
    grand_total?: SortOrder
    discount_id?: SortOrder
    invoice_id?: SortOrder
    current_period_starts?: SortOrder
    current_period_ends?: SortOrder
    custom_data?: SortOrder
    currency_code?: SortOrder
    collection_mode?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type TransactionsAvgOrderByAggregateInput = {
    subtotal?: SortOrder
    discount_ammount?: SortOrder
    total?: SortOrder
    grand_total?: SortOrder
  }

  export type TransactionsMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    customer_id?: SortOrder
    address_id?: SortOrder
    project_id?: SortOrder
    product_id?: SortOrder
    subscription_id?: SortOrder
    subtotal?: SortOrder
    discount_ammount?: SortOrder
    total?: SortOrder
    grand_total?: SortOrder
    discount_id?: SortOrder
    invoice_id?: SortOrder
    current_period_starts?: SortOrder
    current_period_ends?: SortOrder
    currency_code?: SortOrder
    collection_mode?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type TransactionsMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    customer_id?: SortOrder
    address_id?: SortOrder
    project_id?: SortOrder
    product_id?: SortOrder
    subscription_id?: SortOrder
    subtotal?: SortOrder
    discount_ammount?: SortOrder
    total?: SortOrder
    grand_total?: SortOrder
    discount_id?: SortOrder
    invoice_id?: SortOrder
    current_period_starts?: SortOrder
    current_period_ends?: SortOrder
    currency_code?: SortOrder
    collection_mode?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type TransactionsSumOrderByAggregateInput = {
    subtotal?: SortOrder
    discount_ammount?: SortOrder
    total?: SortOrder
    grand_total?: SortOrder
  }

  export type EnumTransactionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransactionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionStatusFilter<$PrismaModel>
    _max?: NestedEnumTransactionStatusFilter<$PrismaModel>
  }

  export type ProjectUsersCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProjectUsersCreateWithoutProjectInput, ProjectUsersUncheckedCreateWithoutProjectInput> | ProjectUsersCreateWithoutProjectInput[] | ProjectUsersUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectUsersCreateOrConnectWithoutProjectInput | ProjectUsersCreateOrConnectWithoutProjectInput[]
    createMany?: ProjectUsersCreateManyProjectInputEnvelope
    connect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
  }

  export type ProjectInviteCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProjectInviteCreateWithoutProjectInput, ProjectInviteUncheckedCreateWithoutProjectInput> | ProjectInviteCreateWithoutProjectInput[] | ProjectInviteUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectInviteCreateOrConnectWithoutProjectInput | ProjectInviteCreateOrConnectWithoutProjectInput[]
    createMany?: ProjectInviteCreateManyProjectInputEnvelope
    connect?: ProjectInviteWhereUniqueInput | ProjectInviteWhereUniqueInput[]
  }

  export type SentEmailCreateNestedManyWithoutProjectInput = {
    create?: XOR<SentEmailCreateWithoutProjectInput, SentEmailUncheckedCreateWithoutProjectInput> | SentEmailCreateWithoutProjectInput[] | SentEmailUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: SentEmailCreateOrConnectWithoutProjectInput | SentEmailCreateOrConnectWithoutProjectInput[]
    createMany?: SentEmailCreateManyProjectInputEnvelope
    connect?: SentEmailWhereUniqueInput | SentEmailWhereUniqueInput[]
  }

  export type ProductsCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProductsCreateWithoutProjectInput, ProductsUncheckedCreateWithoutProjectInput> | ProductsCreateWithoutProjectInput[] | ProductsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProductsCreateOrConnectWithoutProjectInput | ProductsCreateOrConnectWithoutProjectInput[]
    createMany?: ProductsCreateManyProjectInputEnvelope
    connect?: ProductsWhereUniqueInput | ProductsWhereUniqueInput[]
  }

  export type PricesCreateNestedManyWithoutProjectInput = {
    create?: XOR<PricesCreateWithoutProjectInput, PricesUncheckedCreateWithoutProjectInput> | PricesCreateWithoutProjectInput[] | PricesUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: PricesCreateOrConnectWithoutProjectInput | PricesCreateOrConnectWithoutProjectInput[]
    createMany?: PricesCreateManyProjectInputEnvelope
    connect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
  }

  export type DiscountsCreateNestedManyWithoutProjectInput = {
    create?: XOR<DiscountsCreateWithoutProjectInput, DiscountsUncheckedCreateWithoutProjectInput> | DiscountsCreateWithoutProjectInput[] | DiscountsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: DiscountsCreateOrConnectWithoutProjectInput | DiscountsCreateOrConnectWithoutProjectInput[]
    createMany?: DiscountsCreateManyProjectInputEnvelope
    connect?: DiscountsWhereUniqueInput | DiscountsWhereUniqueInput[]
  }

  export type CustomersCreateNestedManyWithoutProjectInput = {
    create?: XOR<CustomersCreateWithoutProjectInput, CustomersUncheckedCreateWithoutProjectInput> | CustomersCreateWithoutProjectInput[] | CustomersUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: CustomersCreateOrConnectWithoutProjectInput | CustomersCreateOrConnectWithoutProjectInput[]
    createMany?: CustomersCreateManyProjectInputEnvelope
    connect?: CustomersWhereUniqueInput | CustomersWhereUniqueInput[]
  }

  export type SubscriptionsCreateNestedManyWithoutProjectInput = {
    create?: XOR<SubscriptionsCreateWithoutProjectInput, SubscriptionsUncheckedCreateWithoutProjectInput> | SubscriptionsCreateWithoutProjectInput[] | SubscriptionsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutProjectInput | SubscriptionsCreateOrConnectWithoutProjectInput[]
    createMany?: SubscriptionsCreateManyProjectInputEnvelope
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
  }

  export type TransactionsCreateNestedManyWithoutProjectInput = {
    create?: XOR<TransactionsCreateWithoutProjectInput, TransactionsUncheckedCreateWithoutProjectInput> | TransactionsCreateWithoutProjectInput[] | TransactionsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutProjectInput | TransactionsCreateOrConnectWithoutProjectInput[]
    createMany?: TransactionsCreateManyProjectInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type ProjectUsersUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProjectUsersCreateWithoutProjectInput, ProjectUsersUncheckedCreateWithoutProjectInput> | ProjectUsersCreateWithoutProjectInput[] | ProjectUsersUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectUsersCreateOrConnectWithoutProjectInput | ProjectUsersCreateOrConnectWithoutProjectInput[]
    createMany?: ProjectUsersCreateManyProjectInputEnvelope
    connect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
  }

  export type ProjectInviteUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProjectInviteCreateWithoutProjectInput, ProjectInviteUncheckedCreateWithoutProjectInput> | ProjectInviteCreateWithoutProjectInput[] | ProjectInviteUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectInviteCreateOrConnectWithoutProjectInput | ProjectInviteCreateOrConnectWithoutProjectInput[]
    createMany?: ProjectInviteCreateManyProjectInputEnvelope
    connect?: ProjectInviteWhereUniqueInput | ProjectInviteWhereUniqueInput[]
  }

  export type SentEmailUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<SentEmailCreateWithoutProjectInput, SentEmailUncheckedCreateWithoutProjectInput> | SentEmailCreateWithoutProjectInput[] | SentEmailUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: SentEmailCreateOrConnectWithoutProjectInput | SentEmailCreateOrConnectWithoutProjectInput[]
    createMany?: SentEmailCreateManyProjectInputEnvelope
    connect?: SentEmailWhereUniqueInput | SentEmailWhereUniqueInput[]
  }

  export type ProductsUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<ProductsCreateWithoutProjectInput, ProductsUncheckedCreateWithoutProjectInput> | ProductsCreateWithoutProjectInput[] | ProductsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProductsCreateOrConnectWithoutProjectInput | ProductsCreateOrConnectWithoutProjectInput[]
    createMany?: ProductsCreateManyProjectInputEnvelope
    connect?: ProductsWhereUniqueInput | ProductsWhereUniqueInput[]
  }

  export type PricesUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<PricesCreateWithoutProjectInput, PricesUncheckedCreateWithoutProjectInput> | PricesCreateWithoutProjectInput[] | PricesUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: PricesCreateOrConnectWithoutProjectInput | PricesCreateOrConnectWithoutProjectInput[]
    createMany?: PricesCreateManyProjectInputEnvelope
    connect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
  }

  export type DiscountsUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<DiscountsCreateWithoutProjectInput, DiscountsUncheckedCreateWithoutProjectInput> | DiscountsCreateWithoutProjectInput[] | DiscountsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: DiscountsCreateOrConnectWithoutProjectInput | DiscountsCreateOrConnectWithoutProjectInput[]
    createMany?: DiscountsCreateManyProjectInputEnvelope
    connect?: DiscountsWhereUniqueInput | DiscountsWhereUniqueInput[]
  }

  export type CustomersUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<CustomersCreateWithoutProjectInput, CustomersUncheckedCreateWithoutProjectInput> | CustomersCreateWithoutProjectInput[] | CustomersUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: CustomersCreateOrConnectWithoutProjectInput | CustomersCreateOrConnectWithoutProjectInput[]
    createMany?: CustomersCreateManyProjectInputEnvelope
    connect?: CustomersWhereUniqueInput | CustomersWhereUniqueInput[]
  }

  export type SubscriptionsUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<SubscriptionsCreateWithoutProjectInput, SubscriptionsUncheckedCreateWithoutProjectInput> | SubscriptionsCreateWithoutProjectInput[] | SubscriptionsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutProjectInput | SubscriptionsCreateOrConnectWithoutProjectInput[]
    createMany?: SubscriptionsCreateManyProjectInputEnvelope
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
  }

  export type TransactionsUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<TransactionsCreateWithoutProjectInput, TransactionsUncheckedCreateWithoutProjectInput> | TransactionsCreateWithoutProjectInput[] | TransactionsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutProjectInput | TransactionsCreateOrConnectWithoutProjectInput[]
    createMany?: TransactionsCreateManyProjectInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type ProjectUsersUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProjectUsersCreateWithoutProjectInput, ProjectUsersUncheckedCreateWithoutProjectInput> | ProjectUsersCreateWithoutProjectInput[] | ProjectUsersUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectUsersCreateOrConnectWithoutProjectInput | ProjectUsersCreateOrConnectWithoutProjectInput[]
    upsert?: ProjectUsersUpsertWithWhereUniqueWithoutProjectInput | ProjectUsersUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProjectUsersCreateManyProjectInputEnvelope
    set?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    disconnect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    delete?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    connect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    update?: ProjectUsersUpdateWithWhereUniqueWithoutProjectInput | ProjectUsersUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProjectUsersUpdateManyWithWhereWithoutProjectInput | ProjectUsersUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProjectUsersScalarWhereInput | ProjectUsersScalarWhereInput[]
  }

  export type ProjectInviteUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProjectInviteCreateWithoutProjectInput, ProjectInviteUncheckedCreateWithoutProjectInput> | ProjectInviteCreateWithoutProjectInput[] | ProjectInviteUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectInviteCreateOrConnectWithoutProjectInput | ProjectInviteCreateOrConnectWithoutProjectInput[]
    upsert?: ProjectInviteUpsertWithWhereUniqueWithoutProjectInput | ProjectInviteUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProjectInviteCreateManyProjectInputEnvelope
    set?: ProjectInviteWhereUniqueInput | ProjectInviteWhereUniqueInput[]
    disconnect?: ProjectInviteWhereUniqueInput | ProjectInviteWhereUniqueInput[]
    delete?: ProjectInviteWhereUniqueInput | ProjectInviteWhereUniqueInput[]
    connect?: ProjectInviteWhereUniqueInput | ProjectInviteWhereUniqueInput[]
    update?: ProjectInviteUpdateWithWhereUniqueWithoutProjectInput | ProjectInviteUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProjectInviteUpdateManyWithWhereWithoutProjectInput | ProjectInviteUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProjectInviteScalarWhereInput | ProjectInviteScalarWhereInput[]
  }

  export type SentEmailUpdateManyWithoutProjectNestedInput = {
    create?: XOR<SentEmailCreateWithoutProjectInput, SentEmailUncheckedCreateWithoutProjectInput> | SentEmailCreateWithoutProjectInput[] | SentEmailUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: SentEmailCreateOrConnectWithoutProjectInput | SentEmailCreateOrConnectWithoutProjectInput[]
    upsert?: SentEmailUpsertWithWhereUniqueWithoutProjectInput | SentEmailUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: SentEmailCreateManyProjectInputEnvelope
    set?: SentEmailWhereUniqueInput | SentEmailWhereUniqueInput[]
    disconnect?: SentEmailWhereUniqueInput | SentEmailWhereUniqueInput[]
    delete?: SentEmailWhereUniqueInput | SentEmailWhereUniqueInput[]
    connect?: SentEmailWhereUniqueInput | SentEmailWhereUniqueInput[]
    update?: SentEmailUpdateWithWhereUniqueWithoutProjectInput | SentEmailUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: SentEmailUpdateManyWithWhereWithoutProjectInput | SentEmailUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: SentEmailScalarWhereInput | SentEmailScalarWhereInput[]
  }

  export type ProductsUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProductsCreateWithoutProjectInput, ProductsUncheckedCreateWithoutProjectInput> | ProductsCreateWithoutProjectInput[] | ProductsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProductsCreateOrConnectWithoutProjectInput | ProductsCreateOrConnectWithoutProjectInput[]
    upsert?: ProductsUpsertWithWhereUniqueWithoutProjectInput | ProductsUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProductsCreateManyProjectInputEnvelope
    set?: ProductsWhereUniqueInput | ProductsWhereUniqueInput[]
    disconnect?: ProductsWhereUniqueInput | ProductsWhereUniqueInput[]
    delete?: ProductsWhereUniqueInput | ProductsWhereUniqueInput[]
    connect?: ProductsWhereUniqueInput | ProductsWhereUniqueInput[]
    update?: ProductsUpdateWithWhereUniqueWithoutProjectInput | ProductsUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProductsUpdateManyWithWhereWithoutProjectInput | ProductsUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProductsScalarWhereInput | ProductsScalarWhereInput[]
  }

  export type PricesUpdateManyWithoutProjectNestedInput = {
    create?: XOR<PricesCreateWithoutProjectInput, PricesUncheckedCreateWithoutProjectInput> | PricesCreateWithoutProjectInput[] | PricesUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: PricesCreateOrConnectWithoutProjectInput | PricesCreateOrConnectWithoutProjectInput[]
    upsert?: PricesUpsertWithWhereUniqueWithoutProjectInput | PricesUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: PricesCreateManyProjectInputEnvelope
    set?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    disconnect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    delete?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    connect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    update?: PricesUpdateWithWhereUniqueWithoutProjectInput | PricesUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: PricesUpdateManyWithWhereWithoutProjectInput | PricesUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: PricesScalarWhereInput | PricesScalarWhereInput[]
  }

  export type DiscountsUpdateManyWithoutProjectNestedInput = {
    create?: XOR<DiscountsCreateWithoutProjectInput, DiscountsUncheckedCreateWithoutProjectInput> | DiscountsCreateWithoutProjectInput[] | DiscountsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: DiscountsCreateOrConnectWithoutProjectInput | DiscountsCreateOrConnectWithoutProjectInput[]
    upsert?: DiscountsUpsertWithWhereUniqueWithoutProjectInput | DiscountsUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: DiscountsCreateManyProjectInputEnvelope
    set?: DiscountsWhereUniqueInput | DiscountsWhereUniqueInput[]
    disconnect?: DiscountsWhereUniqueInput | DiscountsWhereUniqueInput[]
    delete?: DiscountsWhereUniqueInput | DiscountsWhereUniqueInput[]
    connect?: DiscountsWhereUniqueInput | DiscountsWhereUniqueInput[]
    update?: DiscountsUpdateWithWhereUniqueWithoutProjectInput | DiscountsUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: DiscountsUpdateManyWithWhereWithoutProjectInput | DiscountsUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: DiscountsScalarWhereInput | DiscountsScalarWhereInput[]
  }

  export type CustomersUpdateManyWithoutProjectNestedInput = {
    create?: XOR<CustomersCreateWithoutProjectInput, CustomersUncheckedCreateWithoutProjectInput> | CustomersCreateWithoutProjectInput[] | CustomersUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: CustomersCreateOrConnectWithoutProjectInput | CustomersCreateOrConnectWithoutProjectInput[]
    upsert?: CustomersUpsertWithWhereUniqueWithoutProjectInput | CustomersUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: CustomersCreateManyProjectInputEnvelope
    set?: CustomersWhereUniqueInput | CustomersWhereUniqueInput[]
    disconnect?: CustomersWhereUniqueInput | CustomersWhereUniqueInput[]
    delete?: CustomersWhereUniqueInput | CustomersWhereUniqueInput[]
    connect?: CustomersWhereUniqueInput | CustomersWhereUniqueInput[]
    update?: CustomersUpdateWithWhereUniqueWithoutProjectInput | CustomersUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: CustomersUpdateManyWithWhereWithoutProjectInput | CustomersUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: CustomersScalarWhereInput | CustomersScalarWhereInput[]
  }

  export type SubscriptionsUpdateManyWithoutProjectNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutProjectInput, SubscriptionsUncheckedCreateWithoutProjectInput> | SubscriptionsCreateWithoutProjectInput[] | SubscriptionsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutProjectInput | SubscriptionsCreateOrConnectWithoutProjectInput[]
    upsert?: SubscriptionsUpsertWithWhereUniqueWithoutProjectInput | SubscriptionsUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: SubscriptionsCreateManyProjectInputEnvelope
    set?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    disconnect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    delete?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    update?: SubscriptionsUpdateWithWhereUniqueWithoutProjectInput | SubscriptionsUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: SubscriptionsUpdateManyWithWhereWithoutProjectInput | SubscriptionsUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: SubscriptionsScalarWhereInput | SubscriptionsScalarWhereInput[]
  }

  export type TransactionsUpdateManyWithoutProjectNestedInput = {
    create?: XOR<TransactionsCreateWithoutProjectInput, TransactionsUncheckedCreateWithoutProjectInput> | TransactionsCreateWithoutProjectInput[] | TransactionsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutProjectInput | TransactionsCreateOrConnectWithoutProjectInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutProjectInput | TransactionsUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: TransactionsCreateManyProjectInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutProjectInput | TransactionsUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutProjectInput | TransactionsUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type ProjectUsersUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProjectUsersCreateWithoutProjectInput, ProjectUsersUncheckedCreateWithoutProjectInput> | ProjectUsersCreateWithoutProjectInput[] | ProjectUsersUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectUsersCreateOrConnectWithoutProjectInput | ProjectUsersCreateOrConnectWithoutProjectInput[]
    upsert?: ProjectUsersUpsertWithWhereUniqueWithoutProjectInput | ProjectUsersUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProjectUsersCreateManyProjectInputEnvelope
    set?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    disconnect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    delete?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    connect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    update?: ProjectUsersUpdateWithWhereUniqueWithoutProjectInput | ProjectUsersUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProjectUsersUpdateManyWithWhereWithoutProjectInput | ProjectUsersUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProjectUsersScalarWhereInput | ProjectUsersScalarWhereInput[]
  }

  export type ProjectInviteUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProjectInviteCreateWithoutProjectInput, ProjectInviteUncheckedCreateWithoutProjectInput> | ProjectInviteCreateWithoutProjectInput[] | ProjectInviteUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProjectInviteCreateOrConnectWithoutProjectInput | ProjectInviteCreateOrConnectWithoutProjectInput[]
    upsert?: ProjectInviteUpsertWithWhereUniqueWithoutProjectInput | ProjectInviteUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProjectInviteCreateManyProjectInputEnvelope
    set?: ProjectInviteWhereUniqueInput | ProjectInviteWhereUniqueInput[]
    disconnect?: ProjectInviteWhereUniqueInput | ProjectInviteWhereUniqueInput[]
    delete?: ProjectInviteWhereUniqueInput | ProjectInviteWhereUniqueInput[]
    connect?: ProjectInviteWhereUniqueInput | ProjectInviteWhereUniqueInput[]
    update?: ProjectInviteUpdateWithWhereUniqueWithoutProjectInput | ProjectInviteUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProjectInviteUpdateManyWithWhereWithoutProjectInput | ProjectInviteUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProjectInviteScalarWhereInput | ProjectInviteScalarWhereInput[]
  }

  export type SentEmailUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<SentEmailCreateWithoutProjectInput, SentEmailUncheckedCreateWithoutProjectInput> | SentEmailCreateWithoutProjectInput[] | SentEmailUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: SentEmailCreateOrConnectWithoutProjectInput | SentEmailCreateOrConnectWithoutProjectInput[]
    upsert?: SentEmailUpsertWithWhereUniqueWithoutProjectInput | SentEmailUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: SentEmailCreateManyProjectInputEnvelope
    set?: SentEmailWhereUniqueInput | SentEmailWhereUniqueInput[]
    disconnect?: SentEmailWhereUniqueInput | SentEmailWhereUniqueInput[]
    delete?: SentEmailWhereUniqueInput | SentEmailWhereUniqueInput[]
    connect?: SentEmailWhereUniqueInput | SentEmailWhereUniqueInput[]
    update?: SentEmailUpdateWithWhereUniqueWithoutProjectInput | SentEmailUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: SentEmailUpdateManyWithWhereWithoutProjectInput | SentEmailUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: SentEmailScalarWhereInput | SentEmailScalarWhereInput[]
  }

  export type ProductsUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<ProductsCreateWithoutProjectInput, ProductsUncheckedCreateWithoutProjectInput> | ProductsCreateWithoutProjectInput[] | ProductsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: ProductsCreateOrConnectWithoutProjectInput | ProductsCreateOrConnectWithoutProjectInput[]
    upsert?: ProductsUpsertWithWhereUniqueWithoutProjectInput | ProductsUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: ProductsCreateManyProjectInputEnvelope
    set?: ProductsWhereUniqueInput | ProductsWhereUniqueInput[]
    disconnect?: ProductsWhereUniqueInput | ProductsWhereUniqueInput[]
    delete?: ProductsWhereUniqueInput | ProductsWhereUniqueInput[]
    connect?: ProductsWhereUniqueInput | ProductsWhereUniqueInput[]
    update?: ProductsUpdateWithWhereUniqueWithoutProjectInput | ProductsUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: ProductsUpdateManyWithWhereWithoutProjectInput | ProductsUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: ProductsScalarWhereInput | ProductsScalarWhereInput[]
  }

  export type PricesUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<PricesCreateWithoutProjectInput, PricesUncheckedCreateWithoutProjectInput> | PricesCreateWithoutProjectInput[] | PricesUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: PricesCreateOrConnectWithoutProjectInput | PricesCreateOrConnectWithoutProjectInput[]
    upsert?: PricesUpsertWithWhereUniqueWithoutProjectInput | PricesUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: PricesCreateManyProjectInputEnvelope
    set?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    disconnect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    delete?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    connect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    update?: PricesUpdateWithWhereUniqueWithoutProjectInput | PricesUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: PricesUpdateManyWithWhereWithoutProjectInput | PricesUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: PricesScalarWhereInput | PricesScalarWhereInput[]
  }

  export type DiscountsUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<DiscountsCreateWithoutProjectInput, DiscountsUncheckedCreateWithoutProjectInput> | DiscountsCreateWithoutProjectInput[] | DiscountsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: DiscountsCreateOrConnectWithoutProjectInput | DiscountsCreateOrConnectWithoutProjectInput[]
    upsert?: DiscountsUpsertWithWhereUniqueWithoutProjectInput | DiscountsUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: DiscountsCreateManyProjectInputEnvelope
    set?: DiscountsWhereUniqueInput | DiscountsWhereUniqueInput[]
    disconnect?: DiscountsWhereUniqueInput | DiscountsWhereUniqueInput[]
    delete?: DiscountsWhereUniqueInput | DiscountsWhereUniqueInput[]
    connect?: DiscountsWhereUniqueInput | DiscountsWhereUniqueInput[]
    update?: DiscountsUpdateWithWhereUniqueWithoutProjectInput | DiscountsUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: DiscountsUpdateManyWithWhereWithoutProjectInput | DiscountsUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: DiscountsScalarWhereInput | DiscountsScalarWhereInput[]
  }

  export type CustomersUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<CustomersCreateWithoutProjectInput, CustomersUncheckedCreateWithoutProjectInput> | CustomersCreateWithoutProjectInput[] | CustomersUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: CustomersCreateOrConnectWithoutProjectInput | CustomersCreateOrConnectWithoutProjectInput[]
    upsert?: CustomersUpsertWithWhereUniqueWithoutProjectInput | CustomersUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: CustomersCreateManyProjectInputEnvelope
    set?: CustomersWhereUniqueInput | CustomersWhereUniqueInput[]
    disconnect?: CustomersWhereUniqueInput | CustomersWhereUniqueInput[]
    delete?: CustomersWhereUniqueInput | CustomersWhereUniqueInput[]
    connect?: CustomersWhereUniqueInput | CustomersWhereUniqueInput[]
    update?: CustomersUpdateWithWhereUniqueWithoutProjectInput | CustomersUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: CustomersUpdateManyWithWhereWithoutProjectInput | CustomersUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: CustomersScalarWhereInput | CustomersScalarWhereInput[]
  }

  export type SubscriptionsUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutProjectInput, SubscriptionsUncheckedCreateWithoutProjectInput> | SubscriptionsCreateWithoutProjectInput[] | SubscriptionsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutProjectInput | SubscriptionsCreateOrConnectWithoutProjectInput[]
    upsert?: SubscriptionsUpsertWithWhereUniqueWithoutProjectInput | SubscriptionsUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: SubscriptionsCreateManyProjectInputEnvelope
    set?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    disconnect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    delete?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    update?: SubscriptionsUpdateWithWhereUniqueWithoutProjectInput | SubscriptionsUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: SubscriptionsUpdateManyWithWhereWithoutProjectInput | SubscriptionsUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: SubscriptionsScalarWhereInput | SubscriptionsScalarWhereInput[]
  }

  export type TransactionsUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<TransactionsCreateWithoutProjectInput, TransactionsUncheckedCreateWithoutProjectInput> | TransactionsCreateWithoutProjectInput[] | TransactionsUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutProjectInput | TransactionsCreateOrConnectWithoutProjectInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutProjectInput | TransactionsUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: TransactionsCreateManyProjectInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutProjectInput | TransactionsUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutProjectInput | TransactionsUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutProjectUsersInput = {
    create?: XOR<UserCreateWithoutProjectUsersInput, UserUncheckedCreateWithoutProjectUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutProjectUsersInput
    connect?: UserWhereUniqueInput
  }

  export type ProjectCreateNestedOneWithoutUsersInput = {
    create?: XOR<ProjectCreateWithoutUsersInput, ProjectUncheckedCreateWithoutUsersInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutUsersInput
    connect?: ProjectWhereUniqueInput
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type UserUpdateOneRequiredWithoutProjectUsersNestedInput = {
    create?: XOR<UserCreateWithoutProjectUsersInput, UserUncheckedCreateWithoutProjectUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutProjectUsersInput
    upsert?: UserUpsertWithoutProjectUsersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProjectUsersInput, UserUpdateWithoutProjectUsersInput>, UserUncheckedUpdateWithoutProjectUsersInput>
  }

  export type ProjectUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<ProjectCreateWithoutUsersInput, ProjectUncheckedCreateWithoutUsersInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutUsersInput
    upsert?: ProjectUpsertWithoutUsersInput
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutUsersInput, ProjectUpdateWithoutUsersInput>, ProjectUncheckedUpdateWithoutUsersInput>
  }

  export type ProjectCreateNestedOneWithoutInvitesInput = {
    create?: XOR<ProjectCreateWithoutInvitesInput, ProjectUncheckedCreateWithoutInvitesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutInvitesInput
    connect?: ProjectWhereUniqueInput
  }

  export type ProjectUpdateOneRequiredWithoutInvitesNestedInput = {
    create?: XOR<ProjectCreateWithoutInvitesInput, ProjectUncheckedCreateWithoutInvitesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutInvitesInput
    upsert?: ProjectUpsertWithoutInvitesInput
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutInvitesInput, ProjectUpdateWithoutInvitesInput>, ProjectUncheckedUpdateWithoutInvitesInput>
  }

  export type ProjectCreateNestedOneWithoutSentEmailsInput = {
    create?: XOR<ProjectCreateWithoutSentEmailsInput, ProjectUncheckedCreateWithoutSentEmailsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutSentEmailsInput
    connect?: ProjectWhereUniqueInput
  }

  export type ProjectUpdateOneWithoutSentEmailsNestedInput = {
    create?: XOR<ProjectCreateWithoutSentEmailsInput, ProjectUncheckedCreateWithoutSentEmailsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutSentEmailsInput
    upsert?: ProjectUpsertWithoutSentEmailsInput
    disconnect?: ProjectWhereInput | boolean
    delete?: ProjectWhereInput | boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutSentEmailsInput, ProjectUpdateWithoutSentEmailsInput>, ProjectUncheckedUpdateWithoutSentEmailsInput>
  }

  export type AccountCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type ProjectUsersCreateNestedManyWithoutUserInput = {
    create?: XOR<ProjectUsersCreateWithoutUserInput, ProjectUsersUncheckedCreateWithoutUserInput> | ProjectUsersCreateWithoutUserInput[] | ProjectUsersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProjectUsersCreateOrConnectWithoutUserInput | ProjectUsersCreateOrConnectWithoutUserInput[]
    createMany?: ProjectUsersCreateManyUserInputEnvelope
    connect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type Api_keysCreateNestedManyWithoutUserInput = {
    create?: XOR<Api_keysCreateWithoutUserInput, Api_keysUncheckedCreateWithoutUserInput> | Api_keysCreateWithoutUserInput[] | Api_keysUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Api_keysCreateOrConnectWithoutUserInput | Api_keysCreateOrConnectWithoutUserInput[]
    createMany?: Api_keysCreateManyUserInputEnvelope
    connect?: Api_keysWhereUniqueInput | Api_keysWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type ProjectUsersUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ProjectUsersCreateWithoutUserInput, ProjectUsersUncheckedCreateWithoutUserInput> | ProjectUsersCreateWithoutUserInput[] | ProjectUsersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProjectUsersCreateOrConnectWithoutUserInput | ProjectUsersCreateOrConnectWithoutUserInput[]
    createMany?: ProjectUsersCreateManyUserInputEnvelope
    connect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type Api_keysUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Api_keysCreateWithoutUserInput, Api_keysUncheckedCreateWithoutUserInput> | Api_keysCreateWithoutUserInput[] | Api_keysUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Api_keysCreateOrConnectWithoutUserInput | Api_keysCreateOrConnectWithoutUserInput[]
    createMany?: Api_keysCreateManyUserInputEnvelope
    connect?: Api_keysWhereUniqueInput | Api_keysWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type AccountUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type ProjectUsersUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProjectUsersCreateWithoutUserInput, ProjectUsersUncheckedCreateWithoutUserInput> | ProjectUsersCreateWithoutUserInput[] | ProjectUsersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProjectUsersCreateOrConnectWithoutUserInput | ProjectUsersCreateOrConnectWithoutUserInput[]
    upsert?: ProjectUsersUpsertWithWhereUniqueWithoutUserInput | ProjectUsersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProjectUsersCreateManyUserInputEnvelope
    set?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    disconnect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    delete?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    connect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    update?: ProjectUsersUpdateWithWhereUniqueWithoutUserInput | ProjectUsersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProjectUsersUpdateManyWithWhereWithoutUserInput | ProjectUsersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProjectUsersScalarWhereInput | ProjectUsersScalarWhereInput[]
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type Api_keysUpdateManyWithoutUserNestedInput = {
    create?: XOR<Api_keysCreateWithoutUserInput, Api_keysUncheckedCreateWithoutUserInput> | Api_keysCreateWithoutUserInput[] | Api_keysUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Api_keysCreateOrConnectWithoutUserInput | Api_keysCreateOrConnectWithoutUserInput[]
    upsert?: Api_keysUpsertWithWhereUniqueWithoutUserInput | Api_keysUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: Api_keysCreateManyUserInputEnvelope
    set?: Api_keysWhereUniqueInput | Api_keysWhereUniqueInput[]
    disconnect?: Api_keysWhereUniqueInput | Api_keysWhereUniqueInput[]
    delete?: Api_keysWhereUniqueInput | Api_keysWhereUniqueInput[]
    connect?: Api_keysWhereUniqueInput | Api_keysWhereUniqueInput[]
    update?: Api_keysUpdateWithWhereUniqueWithoutUserInput | Api_keysUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: Api_keysUpdateManyWithWhereWithoutUserInput | Api_keysUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: Api_keysScalarWhereInput | Api_keysScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type ProjectUsersUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProjectUsersCreateWithoutUserInput, ProjectUsersUncheckedCreateWithoutUserInput> | ProjectUsersCreateWithoutUserInput[] | ProjectUsersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProjectUsersCreateOrConnectWithoutUserInput | ProjectUsersCreateOrConnectWithoutUserInput[]
    upsert?: ProjectUsersUpsertWithWhereUniqueWithoutUserInput | ProjectUsersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProjectUsersCreateManyUserInputEnvelope
    set?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    disconnect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    delete?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    connect?: ProjectUsersWhereUniqueInput | ProjectUsersWhereUniqueInput[]
    update?: ProjectUsersUpdateWithWhereUniqueWithoutUserInput | ProjectUsersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProjectUsersUpdateManyWithWhereWithoutUserInput | ProjectUsersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProjectUsersScalarWhereInput | ProjectUsersScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type Api_keysUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Api_keysCreateWithoutUserInput, Api_keysUncheckedCreateWithoutUserInput> | Api_keysCreateWithoutUserInput[] | Api_keysUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Api_keysCreateOrConnectWithoutUserInput | Api_keysCreateOrConnectWithoutUserInput[]
    upsert?: Api_keysUpsertWithWhereUniqueWithoutUserInput | Api_keysUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: Api_keysCreateManyUserInputEnvelope
    set?: Api_keysWhereUniqueInput | Api_keysWhereUniqueInput[]
    disconnect?: Api_keysWhereUniqueInput | Api_keysWhereUniqueInput[]
    delete?: Api_keysWhereUniqueInput | Api_keysWhereUniqueInput[]
    connect?: Api_keysWhereUniqueInput | Api_keysWhereUniqueInput[]
    update?: Api_keysUpdateWithWhereUniqueWithoutUserInput | Api_keysUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: Api_keysUpdateManyWithWhereWithoutUserInput | Api_keysUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: Api_keysScalarWhereInput | Api_keysScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAccountsInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    connect?: UserWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutAccountsNestedInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    upsert?: UserUpsertWithoutAccountsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountsInput, UserUpdateWithoutAccountsInput>, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type ProjectCreateNestedOneWithoutProductsInput = {
    create?: XOR<ProjectCreateWithoutProductsInput, ProjectUncheckedCreateWithoutProductsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutProductsInput
    connect?: ProjectWhereUniqueInput
  }

  export type PricesCreateNestedManyWithoutProductsInput = {
    create?: XOR<PricesCreateWithoutProductsInput, PricesUncheckedCreateWithoutProductsInput> | PricesCreateWithoutProductsInput[] | PricesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: PricesCreateOrConnectWithoutProductsInput | PricesCreateOrConnectWithoutProductsInput[]
    createMany?: PricesCreateManyProductsInputEnvelope
    connect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
  }

  export type TransactionsCreateNestedManyWithoutProductInput = {
    create?: XOR<TransactionsCreateWithoutProductInput, TransactionsUncheckedCreateWithoutProductInput> | TransactionsCreateWithoutProductInput[] | TransactionsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutProductInput | TransactionsCreateOrConnectWithoutProductInput[]
    createMany?: TransactionsCreateManyProductInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type PricesUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<PricesCreateWithoutProductsInput, PricesUncheckedCreateWithoutProductsInput> | PricesCreateWithoutProductsInput[] | PricesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: PricesCreateOrConnectWithoutProductsInput | PricesCreateOrConnectWithoutProductsInput[]
    createMany?: PricesCreateManyProductsInputEnvelope
    connect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
  }

  export type TransactionsUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<TransactionsCreateWithoutProductInput, TransactionsUncheckedCreateWithoutProductInput> | TransactionsCreateWithoutProductInput[] | TransactionsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutProductInput | TransactionsCreateOrConnectWithoutProductInput[]
    createMany?: TransactionsCreateManyProductInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type Enumproduct_statusFieldUpdateOperationsInput = {
    set?: $Enums.product_status
  }

  export type ProjectUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<ProjectCreateWithoutProductsInput, ProjectUncheckedCreateWithoutProductsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutProductsInput
    upsert?: ProjectUpsertWithoutProductsInput
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutProductsInput, ProjectUpdateWithoutProductsInput>, ProjectUncheckedUpdateWithoutProductsInput>
  }

  export type PricesUpdateManyWithoutProductsNestedInput = {
    create?: XOR<PricesCreateWithoutProductsInput, PricesUncheckedCreateWithoutProductsInput> | PricesCreateWithoutProductsInput[] | PricesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: PricesCreateOrConnectWithoutProductsInput | PricesCreateOrConnectWithoutProductsInput[]
    upsert?: PricesUpsertWithWhereUniqueWithoutProductsInput | PricesUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: PricesCreateManyProductsInputEnvelope
    set?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    disconnect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    delete?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    connect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    update?: PricesUpdateWithWhereUniqueWithoutProductsInput | PricesUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: PricesUpdateManyWithWhereWithoutProductsInput | PricesUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: PricesScalarWhereInput | PricesScalarWhereInput[]
  }

  export type TransactionsUpdateManyWithoutProductNestedInput = {
    create?: XOR<TransactionsCreateWithoutProductInput, TransactionsUncheckedCreateWithoutProductInput> | TransactionsCreateWithoutProductInput[] | TransactionsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutProductInput | TransactionsCreateOrConnectWithoutProductInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutProductInput | TransactionsUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: TransactionsCreateManyProductInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutProductInput | TransactionsUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutProductInput | TransactionsUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type PricesUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<PricesCreateWithoutProductsInput, PricesUncheckedCreateWithoutProductsInput> | PricesCreateWithoutProductsInput[] | PricesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: PricesCreateOrConnectWithoutProductsInput | PricesCreateOrConnectWithoutProductsInput[]
    upsert?: PricesUpsertWithWhereUniqueWithoutProductsInput | PricesUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: PricesCreateManyProductsInputEnvelope
    set?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    disconnect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    delete?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    connect?: PricesWhereUniqueInput | PricesWhereUniqueInput[]
    update?: PricesUpdateWithWhereUniqueWithoutProductsInput | PricesUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: PricesUpdateManyWithWhereWithoutProductsInput | PricesUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: PricesScalarWhereInput | PricesScalarWhereInput[]
  }

  export type TransactionsUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<TransactionsCreateWithoutProductInput, TransactionsUncheckedCreateWithoutProductInput> | TransactionsCreateWithoutProductInput[] | TransactionsUncheckedCreateWithoutProductInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutProductInput | TransactionsCreateOrConnectWithoutProductInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutProductInput | TransactionsUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: TransactionsCreateManyProductInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutProductInput | TransactionsUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutProductInput | TransactionsUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutApi_keysInput = {
    create?: XOR<UserCreateWithoutApi_keysInput, UserUncheckedCreateWithoutApi_keysInput>
    connectOrCreate?: UserCreateOrConnectWithoutApi_keysInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutApi_keysNestedInput = {
    create?: XOR<UserCreateWithoutApi_keysInput, UserUncheckedCreateWithoutApi_keysInput>
    connectOrCreate?: UserCreateOrConnectWithoutApi_keysInput
    upsert?: UserUpsertWithoutApi_keysInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutApi_keysInput, UserUpdateWithoutApi_keysInput>, UserUncheckedUpdateWithoutApi_keysInput>
  }

  export type ProductsCreateNestedOneWithoutPricesInput = {
    create?: XOR<ProductsCreateWithoutPricesInput, ProductsUncheckedCreateWithoutPricesInput>
    connectOrCreate?: ProductsCreateOrConnectWithoutPricesInput
    connect?: ProductsWhereUniqueInput
  }

  export type ProjectCreateNestedOneWithoutPricesInput = {
    create?: XOR<ProjectCreateWithoutPricesInput, ProjectUncheckedCreateWithoutPricesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutPricesInput
    connect?: ProjectWhereUniqueInput
  }

  export type Discount_PricesCreateNestedManyWithoutPriceInput = {
    create?: XOR<Discount_PricesCreateWithoutPriceInput, Discount_PricesUncheckedCreateWithoutPriceInput> | Discount_PricesCreateWithoutPriceInput[] | Discount_PricesUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: Discount_PricesCreateOrConnectWithoutPriceInput | Discount_PricesCreateOrConnectWithoutPriceInput[]
    createMany?: Discount_PricesCreateManyPriceInputEnvelope
    connect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
  }

  export type SubscriptionItemsCreateNestedManyWithoutPriceInput = {
    create?: XOR<SubscriptionItemsCreateWithoutPriceInput, SubscriptionItemsUncheckedCreateWithoutPriceInput> | SubscriptionItemsCreateWithoutPriceInput[] | SubscriptionItemsUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: SubscriptionItemsCreateOrConnectWithoutPriceInput | SubscriptionItemsCreateOrConnectWithoutPriceInput[]
    createMany?: SubscriptionItemsCreateManyPriceInputEnvelope
    connect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
  }

  export type TransactionItemsCreateNestedManyWithoutPriceInput = {
    create?: XOR<TransactionItemsCreateWithoutPriceInput, TransactionItemsUncheckedCreateWithoutPriceInput> | TransactionItemsCreateWithoutPriceInput[] | TransactionItemsUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: TransactionItemsCreateOrConnectWithoutPriceInput | TransactionItemsCreateOrConnectWithoutPriceInput[]
    createMany?: TransactionItemsCreateManyPriceInputEnvelope
    connect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
  }

  export type Discount_PricesUncheckedCreateNestedManyWithoutPriceInput = {
    create?: XOR<Discount_PricesCreateWithoutPriceInput, Discount_PricesUncheckedCreateWithoutPriceInput> | Discount_PricesCreateWithoutPriceInput[] | Discount_PricesUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: Discount_PricesCreateOrConnectWithoutPriceInput | Discount_PricesCreateOrConnectWithoutPriceInput[]
    createMany?: Discount_PricesCreateManyPriceInputEnvelope
    connect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
  }

  export type SubscriptionItemsUncheckedCreateNestedManyWithoutPriceInput = {
    create?: XOR<SubscriptionItemsCreateWithoutPriceInput, SubscriptionItemsUncheckedCreateWithoutPriceInput> | SubscriptionItemsCreateWithoutPriceInput[] | SubscriptionItemsUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: SubscriptionItemsCreateOrConnectWithoutPriceInput | SubscriptionItemsCreateOrConnectWithoutPriceInput[]
    createMany?: SubscriptionItemsCreateManyPriceInputEnvelope
    connect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
  }

  export type TransactionItemsUncheckedCreateNestedManyWithoutPriceInput = {
    create?: XOR<TransactionItemsCreateWithoutPriceInput, TransactionItemsUncheckedCreateWithoutPriceInput> | TransactionItemsCreateWithoutPriceInput[] | TransactionItemsUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: TransactionItemsCreateOrConnectWithoutPriceInput | TransactionItemsCreateOrConnectWithoutPriceInput[]
    createMany?: TransactionItemsCreateManyPriceInputEnvelope
    connect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
  }

  export type EnumPriceTypeFieldUpdateOperationsInput = {
    set?: $Enums.PriceType
  }

  export type EnumBillingIntervalFieldUpdateOperationsInput = {
    set?: $Enums.BillingInterval
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumEntity_StatusFieldUpdateOperationsInput = {
    set?: $Enums.Entity_Status
  }

  export type ProductsUpdateOneWithoutPricesNestedInput = {
    create?: XOR<ProductsCreateWithoutPricesInput, ProductsUncheckedCreateWithoutPricesInput>
    connectOrCreate?: ProductsCreateOrConnectWithoutPricesInput
    upsert?: ProductsUpsertWithoutPricesInput
    disconnect?: ProductsWhereInput | boolean
    delete?: ProductsWhereInput | boolean
    connect?: ProductsWhereUniqueInput
    update?: XOR<XOR<ProductsUpdateToOneWithWhereWithoutPricesInput, ProductsUpdateWithoutPricesInput>, ProductsUncheckedUpdateWithoutPricesInput>
  }

  export type ProjectUpdateOneRequiredWithoutPricesNestedInput = {
    create?: XOR<ProjectCreateWithoutPricesInput, ProjectUncheckedCreateWithoutPricesInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutPricesInput
    upsert?: ProjectUpsertWithoutPricesInput
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutPricesInput, ProjectUpdateWithoutPricesInput>, ProjectUncheckedUpdateWithoutPricesInput>
  }

  export type Discount_PricesUpdateManyWithoutPriceNestedInput = {
    create?: XOR<Discount_PricesCreateWithoutPriceInput, Discount_PricesUncheckedCreateWithoutPriceInput> | Discount_PricesCreateWithoutPriceInput[] | Discount_PricesUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: Discount_PricesCreateOrConnectWithoutPriceInput | Discount_PricesCreateOrConnectWithoutPriceInput[]
    upsert?: Discount_PricesUpsertWithWhereUniqueWithoutPriceInput | Discount_PricesUpsertWithWhereUniqueWithoutPriceInput[]
    createMany?: Discount_PricesCreateManyPriceInputEnvelope
    set?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    disconnect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    delete?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    connect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    update?: Discount_PricesUpdateWithWhereUniqueWithoutPriceInput | Discount_PricesUpdateWithWhereUniqueWithoutPriceInput[]
    updateMany?: Discount_PricesUpdateManyWithWhereWithoutPriceInput | Discount_PricesUpdateManyWithWhereWithoutPriceInput[]
    deleteMany?: Discount_PricesScalarWhereInput | Discount_PricesScalarWhereInput[]
  }

  export type SubscriptionItemsUpdateManyWithoutPriceNestedInput = {
    create?: XOR<SubscriptionItemsCreateWithoutPriceInput, SubscriptionItemsUncheckedCreateWithoutPriceInput> | SubscriptionItemsCreateWithoutPriceInput[] | SubscriptionItemsUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: SubscriptionItemsCreateOrConnectWithoutPriceInput | SubscriptionItemsCreateOrConnectWithoutPriceInput[]
    upsert?: SubscriptionItemsUpsertWithWhereUniqueWithoutPriceInput | SubscriptionItemsUpsertWithWhereUniqueWithoutPriceInput[]
    createMany?: SubscriptionItemsCreateManyPriceInputEnvelope
    set?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    disconnect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    delete?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    connect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    update?: SubscriptionItemsUpdateWithWhereUniqueWithoutPriceInput | SubscriptionItemsUpdateWithWhereUniqueWithoutPriceInput[]
    updateMany?: SubscriptionItemsUpdateManyWithWhereWithoutPriceInput | SubscriptionItemsUpdateManyWithWhereWithoutPriceInput[]
    deleteMany?: SubscriptionItemsScalarWhereInput | SubscriptionItemsScalarWhereInput[]
  }

  export type TransactionItemsUpdateManyWithoutPriceNestedInput = {
    create?: XOR<TransactionItemsCreateWithoutPriceInput, TransactionItemsUncheckedCreateWithoutPriceInput> | TransactionItemsCreateWithoutPriceInput[] | TransactionItemsUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: TransactionItemsCreateOrConnectWithoutPriceInput | TransactionItemsCreateOrConnectWithoutPriceInput[]
    upsert?: TransactionItemsUpsertWithWhereUniqueWithoutPriceInput | TransactionItemsUpsertWithWhereUniqueWithoutPriceInput[]
    createMany?: TransactionItemsCreateManyPriceInputEnvelope
    set?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    disconnect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    delete?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    connect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    update?: TransactionItemsUpdateWithWhereUniqueWithoutPriceInput | TransactionItemsUpdateWithWhereUniqueWithoutPriceInput[]
    updateMany?: TransactionItemsUpdateManyWithWhereWithoutPriceInput | TransactionItemsUpdateManyWithWhereWithoutPriceInput[]
    deleteMany?: TransactionItemsScalarWhereInput | TransactionItemsScalarWhereInput[]
  }

  export type Discount_PricesUncheckedUpdateManyWithoutPriceNestedInput = {
    create?: XOR<Discount_PricesCreateWithoutPriceInput, Discount_PricesUncheckedCreateWithoutPriceInput> | Discount_PricesCreateWithoutPriceInput[] | Discount_PricesUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: Discount_PricesCreateOrConnectWithoutPriceInput | Discount_PricesCreateOrConnectWithoutPriceInput[]
    upsert?: Discount_PricesUpsertWithWhereUniqueWithoutPriceInput | Discount_PricesUpsertWithWhereUniqueWithoutPriceInput[]
    createMany?: Discount_PricesCreateManyPriceInputEnvelope
    set?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    disconnect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    delete?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    connect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    update?: Discount_PricesUpdateWithWhereUniqueWithoutPriceInput | Discount_PricesUpdateWithWhereUniqueWithoutPriceInput[]
    updateMany?: Discount_PricesUpdateManyWithWhereWithoutPriceInput | Discount_PricesUpdateManyWithWhereWithoutPriceInput[]
    deleteMany?: Discount_PricesScalarWhereInput | Discount_PricesScalarWhereInput[]
  }

  export type SubscriptionItemsUncheckedUpdateManyWithoutPriceNestedInput = {
    create?: XOR<SubscriptionItemsCreateWithoutPriceInput, SubscriptionItemsUncheckedCreateWithoutPriceInput> | SubscriptionItemsCreateWithoutPriceInput[] | SubscriptionItemsUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: SubscriptionItemsCreateOrConnectWithoutPriceInput | SubscriptionItemsCreateOrConnectWithoutPriceInput[]
    upsert?: SubscriptionItemsUpsertWithWhereUniqueWithoutPriceInput | SubscriptionItemsUpsertWithWhereUniqueWithoutPriceInput[]
    createMany?: SubscriptionItemsCreateManyPriceInputEnvelope
    set?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    disconnect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    delete?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    connect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    update?: SubscriptionItemsUpdateWithWhereUniqueWithoutPriceInput | SubscriptionItemsUpdateWithWhereUniqueWithoutPriceInput[]
    updateMany?: SubscriptionItemsUpdateManyWithWhereWithoutPriceInput | SubscriptionItemsUpdateManyWithWhereWithoutPriceInput[]
    deleteMany?: SubscriptionItemsScalarWhereInput | SubscriptionItemsScalarWhereInput[]
  }

  export type TransactionItemsUncheckedUpdateManyWithoutPriceNestedInput = {
    create?: XOR<TransactionItemsCreateWithoutPriceInput, TransactionItemsUncheckedCreateWithoutPriceInput> | TransactionItemsCreateWithoutPriceInput[] | TransactionItemsUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: TransactionItemsCreateOrConnectWithoutPriceInput | TransactionItemsCreateOrConnectWithoutPriceInput[]
    upsert?: TransactionItemsUpsertWithWhereUniqueWithoutPriceInput | TransactionItemsUpsertWithWhereUniqueWithoutPriceInput[]
    createMany?: TransactionItemsCreateManyPriceInputEnvelope
    set?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    disconnect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    delete?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    connect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    update?: TransactionItemsUpdateWithWhereUniqueWithoutPriceInput | TransactionItemsUpdateWithWhereUniqueWithoutPriceInput[]
    updateMany?: TransactionItemsUpdateManyWithWhereWithoutPriceInput | TransactionItemsUpdateManyWithWhereWithoutPriceInput[]
    deleteMany?: TransactionItemsScalarWhereInput | TransactionItemsScalarWhereInput[]
  }

  export type Discount_PricesCreateNestedManyWithoutDiscountInput = {
    create?: XOR<Discount_PricesCreateWithoutDiscountInput, Discount_PricesUncheckedCreateWithoutDiscountInput> | Discount_PricesCreateWithoutDiscountInput[] | Discount_PricesUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: Discount_PricesCreateOrConnectWithoutDiscountInput | Discount_PricesCreateOrConnectWithoutDiscountInput[]
    createMany?: Discount_PricesCreateManyDiscountInputEnvelope
    connect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
  }

  export type ProjectCreateNestedOneWithoutDiscountsInput = {
    create?: XOR<ProjectCreateWithoutDiscountsInput, ProjectUncheckedCreateWithoutDiscountsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutDiscountsInput
    connect?: ProjectWhereUniqueInput
  }

  export type SubscriptionsCreateNestedManyWithoutDiscountInput = {
    create?: XOR<SubscriptionsCreateWithoutDiscountInput, SubscriptionsUncheckedCreateWithoutDiscountInput> | SubscriptionsCreateWithoutDiscountInput[] | SubscriptionsUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutDiscountInput | SubscriptionsCreateOrConnectWithoutDiscountInput[]
    createMany?: SubscriptionsCreateManyDiscountInputEnvelope
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
  }

  export type TransactionsCreateNestedManyWithoutDiscountInput = {
    create?: XOR<TransactionsCreateWithoutDiscountInput, TransactionsUncheckedCreateWithoutDiscountInput> | TransactionsCreateWithoutDiscountInput[] | TransactionsUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutDiscountInput | TransactionsCreateOrConnectWithoutDiscountInput[]
    createMany?: TransactionsCreateManyDiscountInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type Discount_PricesUncheckedCreateNestedManyWithoutDiscountInput = {
    create?: XOR<Discount_PricesCreateWithoutDiscountInput, Discount_PricesUncheckedCreateWithoutDiscountInput> | Discount_PricesCreateWithoutDiscountInput[] | Discount_PricesUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: Discount_PricesCreateOrConnectWithoutDiscountInput | Discount_PricesCreateOrConnectWithoutDiscountInput[]
    createMany?: Discount_PricesCreateManyDiscountInputEnvelope
    connect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
  }

  export type SubscriptionsUncheckedCreateNestedManyWithoutDiscountInput = {
    create?: XOR<SubscriptionsCreateWithoutDiscountInput, SubscriptionsUncheckedCreateWithoutDiscountInput> | SubscriptionsCreateWithoutDiscountInput[] | SubscriptionsUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutDiscountInput | SubscriptionsCreateOrConnectWithoutDiscountInput[]
    createMany?: SubscriptionsCreateManyDiscountInputEnvelope
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
  }

  export type TransactionsUncheckedCreateNestedManyWithoutDiscountInput = {
    create?: XOR<TransactionsCreateWithoutDiscountInput, TransactionsUncheckedCreateWithoutDiscountInput> | TransactionsCreateWithoutDiscountInput[] | TransactionsUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutDiscountInput | TransactionsCreateOrConnectWithoutDiscountInput[]
    createMany?: TransactionsCreateManyDiscountInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type NullableEnumEntity_StatusFieldUpdateOperationsInput = {
    set?: $Enums.Entity_Status | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type EnumDiscount_typeFieldUpdateOperationsInput = {
    set?: $Enums.Discount_type
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type Discount_PricesUpdateManyWithoutDiscountNestedInput = {
    create?: XOR<Discount_PricesCreateWithoutDiscountInput, Discount_PricesUncheckedCreateWithoutDiscountInput> | Discount_PricesCreateWithoutDiscountInput[] | Discount_PricesUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: Discount_PricesCreateOrConnectWithoutDiscountInput | Discount_PricesCreateOrConnectWithoutDiscountInput[]
    upsert?: Discount_PricesUpsertWithWhereUniqueWithoutDiscountInput | Discount_PricesUpsertWithWhereUniqueWithoutDiscountInput[]
    createMany?: Discount_PricesCreateManyDiscountInputEnvelope
    set?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    disconnect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    delete?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    connect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    update?: Discount_PricesUpdateWithWhereUniqueWithoutDiscountInput | Discount_PricesUpdateWithWhereUniqueWithoutDiscountInput[]
    updateMany?: Discount_PricesUpdateManyWithWhereWithoutDiscountInput | Discount_PricesUpdateManyWithWhereWithoutDiscountInput[]
    deleteMany?: Discount_PricesScalarWhereInput | Discount_PricesScalarWhereInput[]
  }

  export type ProjectUpdateOneWithoutDiscountsNestedInput = {
    create?: XOR<ProjectCreateWithoutDiscountsInput, ProjectUncheckedCreateWithoutDiscountsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutDiscountsInput
    upsert?: ProjectUpsertWithoutDiscountsInput
    disconnect?: ProjectWhereInput | boolean
    delete?: ProjectWhereInput | boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutDiscountsInput, ProjectUpdateWithoutDiscountsInput>, ProjectUncheckedUpdateWithoutDiscountsInput>
  }

  export type SubscriptionsUpdateManyWithoutDiscountNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutDiscountInput, SubscriptionsUncheckedCreateWithoutDiscountInput> | SubscriptionsCreateWithoutDiscountInput[] | SubscriptionsUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutDiscountInput | SubscriptionsCreateOrConnectWithoutDiscountInput[]
    upsert?: SubscriptionsUpsertWithWhereUniqueWithoutDiscountInput | SubscriptionsUpsertWithWhereUniqueWithoutDiscountInput[]
    createMany?: SubscriptionsCreateManyDiscountInputEnvelope
    set?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    disconnect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    delete?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    update?: SubscriptionsUpdateWithWhereUniqueWithoutDiscountInput | SubscriptionsUpdateWithWhereUniqueWithoutDiscountInput[]
    updateMany?: SubscriptionsUpdateManyWithWhereWithoutDiscountInput | SubscriptionsUpdateManyWithWhereWithoutDiscountInput[]
    deleteMany?: SubscriptionsScalarWhereInput | SubscriptionsScalarWhereInput[]
  }

  export type TransactionsUpdateManyWithoutDiscountNestedInput = {
    create?: XOR<TransactionsCreateWithoutDiscountInput, TransactionsUncheckedCreateWithoutDiscountInput> | TransactionsCreateWithoutDiscountInput[] | TransactionsUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutDiscountInput | TransactionsCreateOrConnectWithoutDiscountInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutDiscountInput | TransactionsUpsertWithWhereUniqueWithoutDiscountInput[]
    createMany?: TransactionsCreateManyDiscountInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutDiscountInput | TransactionsUpdateWithWhereUniqueWithoutDiscountInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutDiscountInput | TransactionsUpdateManyWithWhereWithoutDiscountInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type Discount_PricesUncheckedUpdateManyWithoutDiscountNestedInput = {
    create?: XOR<Discount_PricesCreateWithoutDiscountInput, Discount_PricesUncheckedCreateWithoutDiscountInput> | Discount_PricesCreateWithoutDiscountInput[] | Discount_PricesUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: Discount_PricesCreateOrConnectWithoutDiscountInput | Discount_PricesCreateOrConnectWithoutDiscountInput[]
    upsert?: Discount_PricesUpsertWithWhereUniqueWithoutDiscountInput | Discount_PricesUpsertWithWhereUniqueWithoutDiscountInput[]
    createMany?: Discount_PricesCreateManyDiscountInputEnvelope
    set?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    disconnect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    delete?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    connect?: Discount_PricesWhereUniqueInput | Discount_PricesWhereUniqueInput[]
    update?: Discount_PricesUpdateWithWhereUniqueWithoutDiscountInput | Discount_PricesUpdateWithWhereUniqueWithoutDiscountInput[]
    updateMany?: Discount_PricesUpdateManyWithWhereWithoutDiscountInput | Discount_PricesUpdateManyWithWhereWithoutDiscountInput[]
    deleteMany?: Discount_PricesScalarWhereInput | Discount_PricesScalarWhereInput[]
  }

  export type SubscriptionsUncheckedUpdateManyWithoutDiscountNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutDiscountInput, SubscriptionsUncheckedCreateWithoutDiscountInput> | SubscriptionsCreateWithoutDiscountInput[] | SubscriptionsUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutDiscountInput | SubscriptionsCreateOrConnectWithoutDiscountInput[]
    upsert?: SubscriptionsUpsertWithWhereUniqueWithoutDiscountInput | SubscriptionsUpsertWithWhereUniqueWithoutDiscountInput[]
    createMany?: SubscriptionsCreateManyDiscountInputEnvelope
    set?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    disconnect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    delete?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    update?: SubscriptionsUpdateWithWhereUniqueWithoutDiscountInput | SubscriptionsUpdateWithWhereUniqueWithoutDiscountInput[]
    updateMany?: SubscriptionsUpdateManyWithWhereWithoutDiscountInput | SubscriptionsUpdateManyWithWhereWithoutDiscountInput[]
    deleteMany?: SubscriptionsScalarWhereInput | SubscriptionsScalarWhereInput[]
  }

  export type TransactionsUncheckedUpdateManyWithoutDiscountNestedInput = {
    create?: XOR<TransactionsCreateWithoutDiscountInput, TransactionsUncheckedCreateWithoutDiscountInput> | TransactionsCreateWithoutDiscountInput[] | TransactionsUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutDiscountInput | TransactionsCreateOrConnectWithoutDiscountInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutDiscountInput | TransactionsUpsertWithWhereUniqueWithoutDiscountInput[]
    createMany?: TransactionsCreateManyDiscountInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutDiscountInput | TransactionsUpdateWithWhereUniqueWithoutDiscountInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutDiscountInput | TransactionsUpdateManyWithWhereWithoutDiscountInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type DiscountsCreateNestedOneWithoutDiscount_pricesInput = {
    create?: XOR<DiscountsCreateWithoutDiscount_pricesInput, DiscountsUncheckedCreateWithoutDiscount_pricesInput>
    connectOrCreate?: DiscountsCreateOrConnectWithoutDiscount_pricesInput
    connect?: DiscountsWhereUniqueInput
  }

  export type PricesCreateNestedOneWithoutDiscount_PricesInput = {
    create?: XOR<PricesCreateWithoutDiscount_PricesInput, PricesUncheckedCreateWithoutDiscount_PricesInput>
    connectOrCreate?: PricesCreateOrConnectWithoutDiscount_PricesInput
    connect?: PricesWhereUniqueInput
  }

  export type DiscountsUpdateOneWithoutDiscount_pricesNestedInput = {
    create?: XOR<DiscountsCreateWithoutDiscount_pricesInput, DiscountsUncheckedCreateWithoutDiscount_pricesInput>
    connectOrCreate?: DiscountsCreateOrConnectWithoutDiscount_pricesInput
    upsert?: DiscountsUpsertWithoutDiscount_pricesInput
    disconnect?: DiscountsWhereInput | boolean
    delete?: DiscountsWhereInput | boolean
    connect?: DiscountsWhereUniqueInput
    update?: XOR<XOR<DiscountsUpdateToOneWithWhereWithoutDiscount_pricesInput, DiscountsUpdateWithoutDiscount_pricesInput>, DiscountsUncheckedUpdateWithoutDiscount_pricesInput>
  }

  export type PricesUpdateOneRequiredWithoutDiscount_PricesNestedInput = {
    create?: XOR<PricesCreateWithoutDiscount_PricesInput, PricesUncheckedCreateWithoutDiscount_PricesInput>
    connectOrCreate?: PricesCreateOrConnectWithoutDiscount_PricesInput
    upsert?: PricesUpsertWithoutDiscount_PricesInput
    connect?: PricesWhereUniqueInput
    update?: XOR<XOR<PricesUpdateToOneWithWhereWithoutDiscount_PricesInput, PricesUpdateWithoutDiscount_PricesInput>, PricesUncheckedUpdateWithoutDiscount_PricesInput>
  }

  export type ProjectCreateNestedOneWithoutCustomersInput = {
    create?: XOR<ProjectCreateWithoutCustomersInput, ProjectUncheckedCreateWithoutCustomersInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutCustomersInput
    connect?: ProjectWhereUniqueInput
  }

  export type AddressesCreateNestedManyWithoutCustomersInput = {
    create?: XOR<AddressesCreateWithoutCustomersInput, AddressesUncheckedCreateWithoutCustomersInput> | AddressesCreateWithoutCustomersInput[] | AddressesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: AddressesCreateOrConnectWithoutCustomersInput | AddressesCreateOrConnectWithoutCustomersInput[]
    createMany?: AddressesCreateManyCustomersInputEnvelope
    connect?: AddressesWhereUniqueInput | AddressesWhereUniqueInput[]
  }

  export type SubscriptionsCreateNestedManyWithoutCustomerInput = {
    create?: XOR<SubscriptionsCreateWithoutCustomerInput, SubscriptionsUncheckedCreateWithoutCustomerInput> | SubscriptionsCreateWithoutCustomerInput[] | SubscriptionsUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutCustomerInput | SubscriptionsCreateOrConnectWithoutCustomerInput[]
    createMany?: SubscriptionsCreateManyCustomerInputEnvelope
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
  }

  export type TransactionsCreateNestedManyWithoutCustomerInput = {
    create?: XOR<TransactionsCreateWithoutCustomerInput, TransactionsUncheckedCreateWithoutCustomerInput> | TransactionsCreateWithoutCustomerInput[] | TransactionsUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutCustomerInput | TransactionsCreateOrConnectWithoutCustomerInput[]
    createMany?: TransactionsCreateManyCustomerInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type AddressesUncheckedCreateNestedManyWithoutCustomersInput = {
    create?: XOR<AddressesCreateWithoutCustomersInput, AddressesUncheckedCreateWithoutCustomersInput> | AddressesCreateWithoutCustomersInput[] | AddressesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: AddressesCreateOrConnectWithoutCustomersInput | AddressesCreateOrConnectWithoutCustomersInput[]
    createMany?: AddressesCreateManyCustomersInputEnvelope
    connect?: AddressesWhereUniqueInput | AddressesWhereUniqueInput[]
  }

  export type SubscriptionsUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<SubscriptionsCreateWithoutCustomerInput, SubscriptionsUncheckedCreateWithoutCustomerInput> | SubscriptionsCreateWithoutCustomerInput[] | SubscriptionsUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutCustomerInput | SubscriptionsCreateOrConnectWithoutCustomerInput[]
    createMany?: SubscriptionsCreateManyCustomerInputEnvelope
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
  }

  export type TransactionsUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<TransactionsCreateWithoutCustomerInput, TransactionsUncheckedCreateWithoutCustomerInput> | TransactionsCreateWithoutCustomerInput[] | TransactionsUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutCustomerInput | TransactionsCreateOrConnectWithoutCustomerInput[]
    createMany?: TransactionsCreateManyCustomerInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type ProjectUpdateOneWithoutCustomersNestedInput = {
    create?: XOR<ProjectCreateWithoutCustomersInput, ProjectUncheckedCreateWithoutCustomersInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutCustomersInput
    upsert?: ProjectUpsertWithoutCustomersInput
    disconnect?: ProjectWhereInput | boolean
    delete?: ProjectWhereInput | boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutCustomersInput, ProjectUpdateWithoutCustomersInput>, ProjectUncheckedUpdateWithoutCustomersInput>
  }

  export type AddressesUpdateManyWithoutCustomersNestedInput = {
    create?: XOR<AddressesCreateWithoutCustomersInput, AddressesUncheckedCreateWithoutCustomersInput> | AddressesCreateWithoutCustomersInput[] | AddressesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: AddressesCreateOrConnectWithoutCustomersInput | AddressesCreateOrConnectWithoutCustomersInput[]
    upsert?: AddressesUpsertWithWhereUniqueWithoutCustomersInput | AddressesUpsertWithWhereUniqueWithoutCustomersInput[]
    createMany?: AddressesCreateManyCustomersInputEnvelope
    set?: AddressesWhereUniqueInput | AddressesWhereUniqueInput[]
    disconnect?: AddressesWhereUniqueInput | AddressesWhereUniqueInput[]
    delete?: AddressesWhereUniqueInput | AddressesWhereUniqueInput[]
    connect?: AddressesWhereUniqueInput | AddressesWhereUniqueInput[]
    update?: AddressesUpdateWithWhereUniqueWithoutCustomersInput | AddressesUpdateWithWhereUniqueWithoutCustomersInput[]
    updateMany?: AddressesUpdateManyWithWhereWithoutCustomersInput | AddressesUpdateManyWithWhereWithoutCustomersInput[]
    deleteMany?: AddressesScalarWhereInput | AddressesScalarWhereInput[]
  }

  export type SubscriptionsUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutCustomerInput, SubscriptionsUncheckedCreateWithoutCustomerInput> | SubscriptionsCreateWithoutCustomerInput[] | SubscriptionsUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutCustomerInput | SubscriptionsCreateOrConnectWithoutCustomerInput[]
    upsert?: SubscriptionsUpsertWithWhereUniqueWithoutCustomerInput | SubscriptionsUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: SubscriptionsCreateManyCustomerInputEnvelope
    set?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    disconnect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    delete?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    update?: SubscriptionsUpdateWithWhereUniqueWithoutCustomerInput | SubscriptionsUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: SubscriptionsUpdateManyWithWhereWithoutCustomerInput | SubscriptionsUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: SubscriptionsScalarWhereInput | SubscriptionsScalarWhereInput[]
  }

  export type TransactionsUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<TransactionsCreateWithoutCustomerInput, TransactionsUncheckedCreateWithoutCustomerInput> | TransactionsCreateWithoutCustomerInput[] | TransactionsUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutCustomerInput | TransactionsCreateOrConnectWithoutCustomerInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutCustomerInput | TransactionsUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: TransactionsCreateManyCustomerInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutCustomerInput | TransactionsUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutCustomerInput | TransactionsUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type AddressesUncheckedUpdateManyWithoutCustomersNestedInput = {
    create?: XOR<AddressesCreateWithoutCustomersInput, AddressesUncheckedCreateWithoutCustomersInput> | AddressesCreateWithoutCustomersInput[] | AddressesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: AddressesCreateOrConnectWithoutCustomersInput | AddressesCreateOrConnectWithoutCustomersInput[]
    upsert?: AddressesUpsertWithWhereUniqueWithoutCustomersInput | AddressesUpsertWithWhereUniqueWithoutCustomersInput[]
    createMany?: AddressesCreateManyCustomersInputEnvelope
    set?: AddressesWhereUniqueInput | AddressesWhereUniqueInput[]
    disconnect?: AddressesWhereUniqueInput | AddressesWhereUniqueInput[]
    delete?: AddressesWhereUniqueInput | AddressesWhereUniqueInput[]
    connect?: AddressesWhereUniqueInput | AddressesWhereUniqueInput[]
    update?: AddressesUpdateWithWhereUniqueWithoutCustomersInput | AddressesUpdateWithWhereUniqueWithoutCustomersInput[]
    updateMany?: AddressesUpdateManyWithWhereWithoutCustomersInput | AddressesUpdateManyWithWhereWithoutCustomersInput[]
    deleteMany?: AddressesScalarWhereInput | AddressesScalarWhereInput[]
  }

  export type SubscriptionsUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutCustomerInput, SubscriptionsUncheckedCreateWithoutCustomerInput> | SubscriptionsCreateWithoutCustomerInput[] | SubscriptionsUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutCustomerInput | SubscriptionsCreateOrConnectWithoutCustomerInput[]
    upsert?: SubscriptionsUpsertWithWhereUniqueWithoutCustomerInput | SubscriptionsUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: SubscriptionsCreateManyCustomerInputEnvelope
    set?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    disconnect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    delete?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    update?: SubscriptionsUpdateWithWhereUniqueWithoutCustomerInput | SubscriptionsUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: SubscriptionsUpdateManyWithWhereWithoutCustomerInput | SubscriptionsUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: SubscriptionsScalarWhereInput | SubscriptionsScalarWhereInput[]
  }

  export type TransactionsUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<TransactionsCreateWithoutCustomerInput, TransactionsUncheckedCreateWithoutCustomerInput> | TransactionsCreateWithoutCustomerInput[] | TransactionsUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutCustomerInput | TransactionsCreateOrConnectWithoutCustomerInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutCustomerInput | TransactionsUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: TransactionsCreateManyCustomerInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutCustomerInput | TransactionsUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutCustomerInput | TransactionsUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type CustomersCreateNestedOneWithoutAddressesInput = {
    create?: XOR<CustomersCreateWithoutAddressesInput, CustomersUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: CustomersCreateOrConnectWithoutAddressesInput
    connect?: CustomersWhereUniqueInput
  }

  export type SubscriptionsCreateNestedManyWithoutAddressInput = {
    create?: XOR<SubscriptionsCreateWithoutAddressInput, SubscriptionsUncheckedCreateWithoutAddressInput> | SubscriptionsCreateWithoutAddressInput[] | SubscriptionsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutAddressInput | SubscriptionsCreateOrConnectWithoutAddressInput[]
    createMany?: SubscriptionsCreateManyAddressInputEnvelope
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
  }

  export type TransactionsCreateNestedManyWithoutAddressInput = {
    create?: XOR<TransactionsCreateWithoutAddressInput, TransactionsUncheckedCreateWithoutAddressInput> | TransactionsCreateWithoutAddressInput[] | TransactionsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutAddressInput | TransactionsCreateOrConnectWithoutAddressInput[]
    createMany?: TransactionsCreateManyAddressInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type SubscriptionsUncheckedCreateNestedManyWithoutAddressInput = {
    create?: XOR<SubscriptionsCreateWithoutAddressInput, SubscriptionsUncheckedCreateWithoutAddressInput> | SubscriptionsCreateWithoutAddressInput[] | SubscriptionsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutAddressInput | SubscriptionsCreateOrConnectWithoutAddressInput[]
    createMany?: SubscriptionsCreateManyAddressInputEnvelope
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
  }

  export type TransactionsUncheckedCreateNestedManyWithoutAddressInput = {
    create?: XOR<TransactionsCreateWithoutAddressInput, TransactionsUncheckedCreateWithoutAddressInput> | TransactionsCreateWithoutAddressInput[] | TransactionsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutAddressInput | TransactionsCreateOrConnectWithoutAddressInput[]
    createMany?: TransactionsCreateManyAddressInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type CustomersUpdateOneWithoutAddressesNestedInput = {
    create?: XOR<CustomersCreateWithoutAddressesInput, CustomersUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: CustomersCreateOrConnectWithoutAddressesInput
    upsert?: CustomersUpsertWithoutAddressesInput
    disconnect?: CustomersWhereInput | boolean
    delete?: CustomersWhereInput | boolean
    connect?: CustomersWhereUniqueInput
    update?: XOR<XOR<CustomersUpdateToOneWithWhereWithoutAddressesInput, CustomersUpdateWithoutAddressesInput>, CustomersUncheckedUpdateWithoutAddressesInput>
  }

  export type SubscriptionsUpdateManyWithoutAddressNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutAddressInput, SubscriptionsUncheckedCreateWithoutAddressInput> | SubscriptionsCreateWithoutAddressInput[] | SubscriptionsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutAddressInput | SubscriptionsCreateOrConnectWithoutAddressInput[]
    upsert?: SubscriptionsUpsertWithWhereUniqueWithoutAddressInput | SubscriptionsUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: SubscriptionsCreateManyAddressInputEnvelope
    set?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    disconnect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    delete?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    update?: SubscriptionsUpdateWithWhereUniqueWithoutAddressInput | SubscriptionsUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: SubscriptionsUpdateManyWithWhereWithoutAddressInput | SubscriptionsUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: SubscriptionsScalarWhereInput | SubscriptionsScalarWhereInput[]
  }

  export type TransactionsUpdateManyWithoutAddressNestedInput = {
    create?: XOR<TransactionsCreateWithoutAddressInput, TransactionsUncheckedCreateWithoutAddressInput> | TransactionsCreateWithoutAddressInput[] | TransactionsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutAddressInput | TransactionsCreateOrConnectWithoutAddressInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutAddressInput | TransactionsUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: TransactionsCreateManyAddressInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutAddressInput | TransactionsUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutAddressInput | TransactionsUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type SubscriptionsUncheckedUpdateManyWithoutAddressNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutAddressInput, SubscriptionsUncheckedCreateWithoutAddressInput> | SubscriptionsCreateWithoutAddressInput[] | SubscriptionsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutAddressInput | SubscriptionsCreateOrConnectWithoutAddressInput[]
    upsert?: SubscriptionsUpsertWithWhereUniqueWithoutAddressInput | SubscriptionsUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: SubscriptionsCreateManyAddressInputEnvelope
    set?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    disconnect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    delete?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    connect?: SubscriptionsWhereUniqueInput | SubscriptionsWhereUniqueInput[]
    update?: SubscriptionsUpdateWithWhereUniqueWithoutAddressInput | SubscriptionsUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: SubscriptionsUpdateManyWithWhereWithoutAddressInput | SubscriptionsUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: SubscriptionsScalarWhereInput | SubscriptionsScalarWhereInput[]
  }

  export type TransactionsUncheckedUpdateManyWithoutAddressNestedInput = {
    create?: XOR<TransactionsCreateWithoutAddressInput, TransactionsUncheckedCreateWithoutAddressInput> | TransactionsCreateWithoutAddressInput[] | TransactionsUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutAddressInput | TransactionsCreateOrConnectWithoutAddressInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutAddressInput | TransactionsUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: TransactionsCreateManyAddressInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutAddressInput | TransactionsUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutAddressInput | TransactionsUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type SubscriptionsCreateNestedOneWithoutSubscription_ItemsInput = {
    create?: XOR<SubscriptionsCreateWithoutSubscription_ItemsInput, SubscriptionsUncheckedCreateWithoutSubscription_ItemsInput>
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutSubscription_ItemsInput
    connect?: SubscriptionsWhereUniqueInput
  }

  export type PricesCreateNestedOneWithoutSubscription_ItemsInput = {
    create?: XOR<PricesCreateWithoutSubscription_ItemsInput, PricesUncheckedCreateWithoutSubscription_ItemsInput>
    connectOrCreate?: PricesCreateOrConnectWithoutSubscription_ItemsInput
    connect?: PricesWhereUniqueInput
  }

  export type EnumSubscriptionItemsStatusFieldUpdateOperationsInput = {
    set?: $Enums.SubscriptionItemsStatus
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type SubscriptionsUpdateOneRequiredWithoutSubscription_ItemsNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutSubscription_ItemsInput, SubscriptionsUncheckedCreateWithoutSubscription_ItemsInput>
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutSubscription_ItemsInput
    upsert?: SubscriptionsUpsertWithoutSubscription_ItemsInput
    connect?: SubscriptionsWhereUniqueInput
    update?: XOR<XOR<SubscriptionsUpdateToOneWithWhereWithoutSubscription_ItemsInput, SubscriptionsUpdateWithoutSubscription_ItemsInput>, SubscriptionsUncheckedUpdateWithoutSubscription_ItemsInput>
  }

  export type PricesUpdateOneRequiredWithoutSubscription_ItemsNestedInput = {
    create?: XOR<PricesCreateWithoutSubscription_ItemsInput, PricesUncheckedCreateWithoutSubscription_ItemsInput>
    connectOrCreate?: PricesCreateOrConnectWithoutSubscription_ItemsInput
    upsert?: PricesUpsertWithoutSubscription_ItemsInput
    connect?: PricesWhereUniqueInput
    update?: XOR<XOR<PricesUpdateToOneWithWhereWithoutSubscription_ItemsInput, PricesUpdateWithoutSubscription_ItemsInput>, PricesUncheckedUpdateWithoutSubscription_ItemsInput>
  }

  export type SubscriptionsCreateNestedOneWithoutSubscription_Scheduled_ChangesInput = {
    create?: XOR<SubscriptionsCreateWithoutSubscription_Scheduled_ChangesInput, SubscriptionsUncheckedCreateWithoutSubscription_Scheduled_ChangesInput>
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutSubscription_Scheduled_ChangesInput
    connect?: SubscriptionsWhereUniqueInput
  }

  export type EnumScheduledChangeActionFieldUpdateOperationsInput = {
    set?: $Enums.ScheduledChangeAction
  }

  export type EnumScheduledChangesStatusFieldUpdateOperationsInput = {
    set?: $Enums.ScheduledChangesStatus
  }

  export type SubscriptionsUpdateOneRequiredWithoutSubscription_Scheduled_ChangesNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutSubscription_Scheduled_ChangesInput, SubscriptionsUncheckedCreateWithoutSubscription_Scheduled_ChangesInput>
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutSubscription_Scheduled_ChangesInput
    upsert?: SubscriptionsUpsertWithoutSubscription_Scheduled_ChangesInput
    connect?: SubscriptionsWhereUniqueInput
    update?: XOR<XOR<SubscriptionsUpdateToOneWithWhereWithoutSubscription_Scheduled_ChangesInput, SubscriptionsUpdateWithoutSubscription_Scheduled_ChangesInput>, SubscriptionsUncheckedUpdateWithoutSubscription_Scheduled_ChangesInput>
  }

  export type SubscriptionsCreateNestedOneWithoutBillingDetailsInput = {
    create?: XOR<SubscriptionsCreateWithoutBillingDetailsInput, SubscriptionsUncheckedCreateWithoutBillingDetailsInput>
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutBillingDetailsInput
    connect?: SubscriptionsWhereUniqueInput
  }

  export type SubscriptionsUpdateOneRequiredWithoutBillingDetailsNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutBillingDetailsInput, SubscriptionsUncheckedCreateWithoutBillingDetailsInput>
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutBillingDetailsInput
    upsert?: SubscriptionsUpsertWithoutBillingDetailsInput
    connect?: SubscriptionsWhereUniqueInput
    update?: XOR<XOR<SubscriptionsUpdateToOneWithWhereWithoutBillingDetailsInput, SubscriptionsUpdateWithoutBillingDetailsInput>, SubscriptionsUncheckedUpdateWithoutBillingDetailsInput>
  }

  export type CustomersCreateNestedOneWithoutSubscriptionsInput = {
    create?: XOR<CustomersCreateWithoutSubscriptionsInput, CustomersUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: CustomersCreateOrConnectWithoutSubscriptionsInput
    connect?: CustomersWhereUniqueInput
  }

  export type AddressesCreateNestedOneWithoutSubscriptionsInput = {
    create?: XOR<AddressesCreateWithoutSubscriptionsInput, AddressesUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: AddressesCreateOrConnectWithoutSubscriptionsInput
    connect?: AddressesWhereUniqueInput
  }

  export type ProjectCreateNestedOneWithoutSubscriptionsInput = {
    create?: XOR<ProjectCreateWithoutSubscriptionsInput, ProjectUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutSubscriptionsInput
    connect?: ProjectWhereUniqueInput
  }

  export type DiscountsCreateNestedOneWithoutSubscriptionsInput = {
    create?: XOR<DiscountsCreateWithoutSubscriptionsInput, DiscountsUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: DiscountsCreateOrConnectWithoutSubscriptionsInput
    connect?: DiscountsWhereUniqueInput
  }

  export type SubscriptionItemsCreateNestedManyWithoutSubscriptionInput = {
    create?: XOR<SubscriptionItemsCreateWithoutSubscriptionInput, SubscriptionItemsUncheckedCreateWithoutSubscriptionInput> | SubscriptionItemsCreateWithoutSubscriptionInput[] | SubscriptionItemsUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: SubscriptionItemsCreateOrConnectWithoutSubscriptionInput | SubscriptionItemsCreateOrConnectWithoutSubscriptionInput[]
    createMany?: SubscriptionItemsCreateManySubscriptionInputEnvelope
    connect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
  }

  export type Subscription_Scheduled_ChangesCreateNestedManyWithoutSubscriptionInput = {
    create?: XOR<Subscription_Scheduled_ChangesCreateWithoutSubscriptionInput, Subscription_Scheduled_ChangesUncheckedCreateWithoutSubscriptionInput> | Subscription_Scheduled_ChangesCreateWithoutSubscriptionInput[] | Subscription_Scheduled_ChangesUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: Subscription_Scheduled_ChangesCreateOrConnectWithoutSubscriptionInput | Subscription_Scheduled_ChangesCreateOrConnectWithoutSubscriptionInput[]
    createMany?: Subscription_Scheduled_ChangesCreateManySubscriptionInputEnvelope
    connect?: Subscription_Scheduled_ChangesWhereUniqueInput | Subscription_Scheduled_ChangesWhereUniqueInput[]
  }

  export type BillingDetailsCreateNestedOneWithoutSubscriptionInput = {
    create?: XOR<BillingDetailsCreateWithoutSubscriptionInput, BillingDetailsUncheckedCreateWithoutSubscriptionInput>
    connectOrCreate?: BillingDetailsCreateOrConnectWithoutSubscriptionInput
    connect?: BillingDetailsWhereUniqueInput
  }

  export type TransactionsCreateNestedManyWithoutSubscriptionInput = {
    create?: XOR<TransactionsCreateWithoutSubscriptionInput, TransactionsUncheckedCreateWithoutSubscriptionInput> | TransactionsCreateWithoutSubscriptionInput[] | TransactionsUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutSubscriptionInput | TransactionsCreateOrConnectWithoutSubscriptionInput[]
    createMany?: TransactionsCreateManySubscriptionInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type SubscriptionItemsUncheckedCreateNestedManyWithoutSubscriptionInput = {
    create?: XOR<SubscriptionItemsCreateWithoutSubscriptionInput, SubscriptionItemsUncheckedCreateWithoutSubscriptionInput> | SubscriptionItemsCreateWithoutSubscriptionInput[] | SubscriptionItemsUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: SubscriptionItemsCreateOrConnectWithoutSubscriptionInput | SubscriptionItemsCreateOrConnectWithoutSubscriptionInput[]
    createMany?: SubscriptionItemsCreateManySubscriptionInputEnvelope
    connect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
  }

  export type Subscription_Scheduled_ChangesUncheckedCreateNestedManyWithoutSubscriptionInput = {
    create?: XOR<Subscription_Scheduled_ChangesCreateWithoutSubscriptionInput, Subscription_Scheduled_ChangesUncheckedCreateWithoutSubscriptionInput> | Subscription_Scheduled_ChangesCreateWithoutSubscriptionInput[] | Subscription_Scheduled_ChangesUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: Subscription_Scheduled_ChangesCreateOrConnectWithoutSubscriptionInput | Subscription_Scheduled_ChangesCreateOrConnectWithoutSubscriptionInput[]
    createMany?: Subscription_Scheduled_ChangesCreateManySubscriptionInputEnvelope
    connect?: Subscription_Scheduled_ChangesWhereUniqueInput | Subscription_Scheduled_ChangesWhereUniqueInput[]
  }

  export type BillingDetailsUncheckedCreateNestedOneWithoutSubscriptionInput = {
    create?: XOR<BillingDetailsCreateWithoutSubscriptionInput, BillingDetailsUncheckedCreateWithoutSubscriptionInput>
    connectOrCreate?: BillingDetailsCreateOrConnectWithoutSubscriptionInput
    connect?: BillingDetailsWhereUniqueInput
  }

  export type TransactionsUncheckedCreateNestedManyWithoutSubscriptionInput = {
    create?: XOR<TransactionsCreateWithoutSubscriptionInput, TransactionsUncheckedCreateWithoutSubscriptionInput> | TransactionsCreateWithoutSubscriptionInput[] | TransactionsUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutSubscriptionInput | TransactionsCreateOrConnectWithoutSubscriptionInput[]
    createMany?: TransactionsCreateManySubscriptionInputEnvelope
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
  }

  export type EnumSubscriptionsStatusFieldUpdateOperationsInput = {
    set?: $Enums.SubscriptionsStatus
  }

  export type EnumCollectionModeFieldUpdateOperationsInput = {
    set?: $Enums.CollectionMode
  }

  export type CustomersUpdateOneRequiredWithoutSubscriptionsNestedInput = {
    create?: XOR<CustomersCreateWithoutSubscriptionsInput, CustomersUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: CustomersCreateOrConnectWithoutSubscriptionsInput
    upsert?: CustomersUpsertWithoutSubscriptionsInput
    connect?: CustomersWhereUniqueInput
    update?: XOR<XOR<CustomersUpdateToOneWithWhereWithoutSubscriptionsInput, CustomersUpdateWithoutSubscriptionsInput>, CustomersUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type AddressesUpdateOneRequiredWithoutSubscriptionsNestedInput = {
    create?: XOR<AddressesCreateWithoutSubscriptionsInput, AddressesUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: AddressesCreateOrConnectWithoutSubscriptionsInput
    upsert?: AddressesUpsertWithoutSubscriptionsInput
    connect?: AddressesWhereUniqueInput
    update?: XOR<XOR<AddressesUpdateToOneWithWhereWithoutSubscriptionsInput, AddressesUpdateWithoutSubscriptionsInput>, AddressesUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type ProjectUpdateOneRequiredWithoutSubscriptionsNestedInput = {
    create?: XOR<ProjectCreateWithoutSubscriptionsInput, ProjectUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutSubscriptionsInput
    upsert?: ProjectUpsertWithoutSubscriptionsInput
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutSubscriptionsInput, ProjectUpdateWithoutSubscriptionsInput>, ProjectUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type DiscountsUpdateOneWithoutSubscriptionsNestedInput = {
    create?: XOR<DiscountsCreateWithoutSubscriptionsInput, DiscountsUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: DiscountsCreateOrConnectWithoutSubscriptionsInput
    upsert?: DiscountsUpsertWithoutSubscriptionsInput
    disconnect?: DiscountsWhereInput | boolean
    delete?: DiscountsWhereInput | boolean
    connect?: DiscountsWhereUniqueInput
    update?: XOR<XOR<DiscountsUpdateToOneWithWhereWithoutSubscriptionsInput, DiscountsUpdateWithoutSubscriptionsInput>, DiscountsUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type SubscriptionItemsUpdateManyWithoutSubscriptionNestedInput = {
    create?: XOR<SubscriptionItemsCreateWithoutSubscriptionInput, SubscriptionItemsUncheckedCreateWithoutSubscriptionInput> | SubscriptionItemsCreateWithoutSubscriptionInput[] | SubscriptionItemsUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: SubscriptionItemsCreateOrConnectWithoutSubscriptionInput | SubscriptionItemsCreateOrConnectWithoutSubscriptionInput[]
    upsert?: SubscriptionItemsUpsertWithWhereUniqueWithoutSubscriptionInput | SubscriptionItemsUpsertWithWhereUniqueWithoutSubscriptionInput[]
    createMany?: SubscriptionItemsCreateManySubscriptionInputEnvelope
    set?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    disconnect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    delete?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    connect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    update?: SubscriptionItemsUpdateWithWhereUniqueWithoutSubscriptionInput | SubscriptionItemsUpdateWithWhereUniqueWithoutSubscriptionInput[]
    updateMany?: SubscriptionItemsUpdateManyWithWhereWithoutSubscriptionInput | SubscriptionItemsUpdateManyWithWhereWithoutSubscriptionInput[]
    deleteMany?: SubscriptionItemsScalarWhereInput | SubscriptionItemsScalarWhereInput[]
  }

  export type Subscription_Scheduled_ChangesUpdateManyWithoutSubscriptionNestedInput = {
    create?: XOR<Subscription_Scheduled_ChangesCreateWithoutSubscriptionInput, Subscription_Scheduled_ChangesUncheckedCreateWithoutSubscriptionInput> | Subscription_Scheduled_ChangesCreateWithoutSubscriptionInput[] | Subscription_Scheduled_ChangesUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: Subscription_Scheduled_ChangesCreateOrConnectWithoutSubscriptionInput | Subscription_Scheduled_ChangesCreateOrConnectWithoutSubscriptionInput[]
    upsert?: Subscription_Scheduled_ChangesUpsertWithWhereUniqueWithoutSubscriptionInput | Subscription_Scheduled_ChangesUpsertWithWhereUniqueWithoutSubscriptionInput[]
    createMany?: Subscription_Scheduled_ChangesCreateManySubscriptionInputEnvelope
    set?: Subscription_Scheduled_ChangesWhereUniqueInput | Subscription_Scheduled_ChangesWhereUniqueInput[]
    disconnect?: Subscription_Scheduled_ChangesWhereUniqueInput | Subscription_Scheduled_ChangesWhereUniqueInput[]
    delete?: Subscription_Scheduled_ChangesWhereUniqueInput | Subscription_Scheduled_ChangesWhereUniqueInput[]
    connect?: Subscription_Scheduled_ChangesWhereUniqueInput | Subscription_Scheduled_ChangesWhereUniqueInput[]
    update?: Subscription_Scheduled_ChangesUpdateWithWhereUniqueWithoutSubscriptionInput | Subscription_Scheduled_ChangesUpdateWithWhereUniqueWithoutSubscriptionInput[]
    updateMany?: Subscription_Scheduled_ChangesUpdateManyWithWhereWithoutSubscriptionInput | Subscription_Scheduled_ChangesUpdateManyWithWhereWithoutSubscriptionInput[]
    deleteMany?: Subscription_Scheduled_ChangesScalarWhereInput | Subscription_Scheduled_ChangesScalarWhereInput[]
  }

  export type BillingDetailsUpdateOneWithoutSubscriptionNestedInput = {
    create?: XOR<BillingDetailsCreateWithoutSubscriptionInput, BillingDetailsUncheckedCreateWithoutSubscriptionInput>
    connectOrCreate?: BillingDetailsCreateOrConnectWithoutSubscriptionInput
    upsert?: BillingDetailsUpsertWithoutSubscriptionInput
    disconnect?: BillingDetailsWhereInput | boolean
    delete?: BillingDetailsWhereInput | boolean
    connect?: BillingDetailsWhereUniqueInput
    update?: XOR<XOR<BillingDetailsUpdateToOneWithWhereWithoutSubscriptionInput, BillingDetailsUpdateWithoutSubscriptionInput>, BillingDetailsUncheckedUpdateWithoutSubscriptionInput>
  }

  export type TransactionsUpdateManyWithoutSubscriptionNestedInput = {
    create?: XOR<TransactionsCreateWithoutSubscriptionInput, TransactionsUncheckedCreateWithoutSubscriptionInput> | TransactionsCreateWithoutSubscriptionInput[] | TransactionsUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutSubscriptionInput | TransactionsCreateOrConnectWithoutSubscriptionInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutSubscriptionInput | TransactionsUpsertWithWhereUniqueWithoutSubscriptionInput[]
    createMany?: TransactionsCreateManySubscriptionInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutSubscriptionInput | TransactionsUpdateWithWhereUniqueWithoutSubscriptionInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutSubscriptionInput | TransactionsUpdateManyWithWhereWithoutSubscriptionInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type SubscriptionItemsUncheckedUpdateManyWithoutSubscriptionNestedInput = {
    create?: XOR<SubscriptionItemsCreateWithoutSubscriptionInput, SubscriptionItemsUncheckedCreateWithoutSubscriptionInput> | SubscriptionItemsCreateWithoutSubscriptionInput[] | SubscriptionItemsUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: SubscriptionItemsCreateOrConnectWithoutSubscriptionInput | SubscriptionItemsCreateOrConnectWithoutSubscriptionInput[]
    upsert?: SubscriptionItemsUpsertWithWhereUniqueWithoutSubscriptionInput | SubscriptionItemsUpsertWithWhereUniqueWithoutSubscriptionInput[]
    createMany?: SubscriptionItemsCreateManySubscriptionInputEnvelope
    set?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    disconnect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    delete?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    connect?: SubscriptionItemsWhereUniqueInput | SubscriptionItemsWhereUniqueInput[]
    update?: SubscriptionItemsUpdateWithWhereUniqueWithoutSubscriptionInput | SubscriptionItemsUpdateWithWhereUniqueWithoutSubscriptionInput[]
    updateMany?: SubscriptionItemsUpdateManyWithWhereWithoutSubscriptionInput | SubscriptionItemsUpdateManyWithWhereWithoutSubscriptionInput[]
    deleteMany?: SubscriptionItemsScalarWhereInput | SubscriptionItemsScalarWhereInput[]
  }

  export type Subscription_Scheduled_ChangesUncheckedUpdateManyWithoutSubscriptionNestedInput = {
    create?: XOR<Subscription_Scheduled_ChangesCreateWithoutSubscriptionInput, Subscription_Scheduled_ChangesUncheckedCreateWithoutSubscriptionInput> | Subscription_Scheduled_ChangesCreateWithoutSubscriptionInput[] | Subscription_Scheduled_ChangesUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: Subscription_Scheduled_ChangesCreateOrConnectWithoutSubscriptionInput | Subscription_Scheduled_ChangesCreateOrConnectWithoutSubscriptionInput[]
    upsert?: Subscription_Scheduled_ChangesUpsertWithWhereUniqueWithoutSubscriptionInput | Subscription_Scheduled_ChangesUpsertWithWhereUniqueWithoutSubscriptionInput[]
    createMany?: Subscription_Scheduled_ChangesCreateManySubscriptionInputEnvelope
    set?: Subscription_Scheduled_ChangesWhereUniqueInput | Subscription_Scheduled_ChangesWhereUniqueInput[]
    disconnect?: Subscription_Scheduled_ChangesWhereUniqueInput | Subscription_Scheduled_ChangesWhereUniqueInput[]
    delete?: Subscription_Scheduled_ChangesWhereUniqueInput | Subscription_Scheduled_ChangesWhereUniqueInput[]
    connect?: Subscription_Scheduled_ChangesWhereUniqueInput | Subscription_Scheduled_ChangesWhereUniqueInput[]
    update?: Subscription_Scheduled_ChangesUpdateWithWhereUniqueWithoutSubscriptionInput | Subscription_Scheduled_ChangesUpdateWithWhereUniqueWithoutSubscriptionInput[]
    updateMany?: Subscription_Scheduled_ChangesUpdateManyWithWhereWithoutSubscriptionInput | Subscription_Scheduled_ChangesUpdateManyWithWhereWithoutSubscriptionInput[]
    deleteMany?: Subscription_Scheduled_ChangesScalarWhereInput | Subscription_Scheduled_ChangesScalarWhereInput[]
  }

  export type BillingDetailsUncheckedUpdateOneWithoutSubscriptionNestedInput = {
    create?: XOR<BillingDetailsCreateWithoutSubscriptionInput, BillingDetailsUncheckedCreateWithoutSubscriptionInput>
    connectOrCreate?: BillingDetailsCreateOrConnectWithoutSubscriptionInput
    upsert?: BillingDetailsUpsertWithoutSubscriptionInput
    disconnect?: BillingDetailsWhereInput | boolean
    delete?: BillingDetailsWhereInput | boolean
    connect?: BillingDetailsWhereUniqueInput
    update?: XOR<XOR<BillingDetailsUpdateToOneWithWhereWithoutSubscriptionInput, BillingDetailsUpdateWithoutSubscriptionInput>, BillingDetailsUncheckedUpdateWithoutSubscriptionInput>
  }

  export type TransactionsUncheckedUpdateManyWithoutSubscriptionNestedInput = {
    create?: XOR<TransactionsCreateWithoutSubscriptionInput, TransactionsUncheckedCreateWithoutSubscriptionInput> | TransactionsCreateWithoutSubscriptionInput[] | TransactionsUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: TransactionsCreateOrConnectWithoutSubscriptionInput | TransactionsCreateOrConnectWithoutSubscriptionInput[]
    upsert?: TransactionsUpsertWithWhereUniqueWithoutSubscriptionInput | TransactionsUpsertWithWhereUniqueWithoutSubscriptionInput[]
    createMany?: TransactionsCreateManySubscriptionInputEnvelope
    set?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    disconnect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    delete?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    connect?: TransactionsWhereUniqueInput | TransactionsWhereUniqueInput[]
    update?: TransactionsUpdateWithWhereUniqueWithoutSubscriptionInput | TransactionsUpdateWithWhereUniqueWithoutSubscriptionInput[]
    updateMany?: TransactionsUpdateManyWithWhereWithoutSubscriptionInput | TransactionsUpdateManyWithWhereWithoutSubscriptionInput[]
    deleteMany?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
  }

  export type PricesCreateNestedOneWithoutTransactionItemsInput = {
    create?: XOR<PricesCreateWithoutTransactionItemsInput, PricesUncheckedCreateWithoutTransactionItemsInput>
    connectOrCreate?: PricesCreateOrConnectWithoutTransactionItemsInput
    connect?: PricesWhereUniqueInput
  }

  export type TransactionsCreateNestedOneWithoutTransactionItemsInput = {
    create?: XOR<TransactionsCreateWithoutTransactionItemsInput, TransactionsUncheckedCreateWithoutTransactionItemsInput>
    connectOrCreate?: TransactionsCreateOrConnectWithoutTransactionItemsInput
    connect?: TransactionsWhereUniqueInput
  }

  export type PricesUpdateOneRequiredWithoutTransactionItemsNestedInput = {
    create?: XOR<PricesCreateWithoutTransactionItemsInput, PricesUncheckedCreateWithoutTransactionItemsInput>
    connectOrCreate?: PricesCreateOrConnectWithoutTransactionItemsInput
    upsert?: PricesUpsertWithoutTransactionItemsInput
    connect?: PricesWhereUniqueInput
    update?: XOR<XOR<PricesUpdateToOneWithWhereWithoutTransactionItemsInput, PricesUpdateWithoutTransactionItemsInput>, PricesUncheckedUpdateWithoutTransactionItemsInput>
  }

  export type TransactionsUpdateOneWithoutTransactionItemsNestedInput = {
    create?: XOR<TransactionsCreateWithoutTransactionItemsInput, TransactionsUncheckedCreateWithoutTransactionItemsInput>
    connectOrCreate?: TransactionsCreateOrConnectWithoutTransactionItemsInput
    upsert?: TransactionsUpsertWithoutTransactionItemsInput
    disconnect?: TransactionsWhereInput | boolean
    delete?: TransactionsWhereInput | boolean
    connect?: TransactionsWhereUniqueInput
    update?: XOR<XOR<TransactionsUpdateToOneWithWhereWithoutTransactionItemsInput, TransactionsUpdateWithoutTransactionItemsInput>, TransactionsUncheckedUpdateWithoutTransactionItemsInput>
  }

  export type TransactionsCreateNestedOneWithoutTransactionPaymentInput = {
    create?: XOR<TransactionsCreateWithoutTransactionPaymentInput, TransactionsUncheckedCreateWithoutTransactionPaymentInput>
    connectOrCreate?: TransactionsCreateOrConnectWithoutTransactionPaymentInput
    connect?: TransactionsWhereUniqueInput
  }

  export type EnumPaymentMethodFieldUpdateOperationsInput = {
    set?: $Enums.PaymentMethod
  }

  export type EnumPaymentProviderFieldUpdateOperationsInput = {
    set?: $Enums.PaymentProvider
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type TransactionsUpdateOneRequiredWithoutTransactionPaymentNestedInput = {
    create?: XOR<TransactionsCreateWithoutTransactionPaymentInput, TransactionsUncheckedCreateWithoutTransactionPaymentInput>
    connectOrCreate?: TransactionsCreateOrConnectWithoutTransactionPaymentInput
    upsert?: TransactionsUpsertWithoutTransactionPaymentInput
    connect?: TransactionsWhereUniqueInput
    update?: XOR<XOR<TransactionsUpdateToOneWithWhereWithoutTransactionPaymentInput, TransactionsUpdateWithoutTransactionPaymentInput>, TransactionsUncheckedUpdateWithoutTransactionPaymentInput>
  }

  export type CustomersCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<CustomersCreateWithoutTransactionsInput, CustomersUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: CustomersCreateOrConnectWithoutTransactionsInput
    connect?: CustomersWhereUniqueInput
  }

  export type AddressesCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<AddressesCreateWithoutTransactionsInput, AddressesUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: AddressesCreateOrConnectWithoutTransactionsInput
    connect?: AddressesWhereUniqueInput
  }

  export type ProjectCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<ProjectCreateWithoutTransactionsInput, ProjectUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutTransactionsInput
    connect?: ProjectWhereUniqueInput
  }

  export type ProductsCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<ProductsCreateWithoutTransactionsInput, ProductsUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: ProductsCreateOrConnectWithoutTransactionsInput
    connect?: ProductsWhereUniqueInput
  }

  export type SubscriptionsCreateNestedOneWithoutTransactionInput = {
    create?: XOR<SubscriptionsCreateWithoutTransactionInput, SubscriptionsUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutTransactionInput
    connect?: SubscriptionsWhereUniqueInput
  }

  export type TransactionPaymentCreateNestedOneWithoutTransactionInput = {
    create?: XOR<TransactionPaymentCreateWithoutTransactionInput, TransactionPaymentUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: TransactionPaymentCreateOrConnectWithoutTransactionInput
    connect?: TransactionPaymentWhereUniqueInput
  }

  export type TransactionItemsCreateNestedManyWithoutTransactionsInput = {
    create?: XOR<TransactionItemsCreateWithoutTransactionsInput, TransactionItemsUncheckedCreateWithoutTransactionsInput> | TransactionItemsCreateWithoutTransactionsInput[] | TransactionItemsUncheckedCreateWithoutTransactionsInput[]
    connectOrCreate?: TransactionItemsCreateOrConnectWithoutTransactionsInput | TransactionItemsCreateOrConnectWithoutTransactionsInput[]
    createMany?: TransactionItemsCreateManyTransactionsInputEnvelope
    connect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
  }

  export type DiscountsCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<DiscountsCreateWithoutTransactionsInput, DiscountsUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: DiscountsCreateOrConnectWithoutTransactionsInput
    connect?: DiscountsWhereUniqueInput
  }

  export type TransactionPaymentUncheckedCreateNestedOneWithoutTransactionInput = {
    create?: XOR<TransactionPaymentCreateWithoutTransactionInput, TransactionPaymentUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: TransactionPaymentCreateOrConnectWithoutTransactionInput
    connect?: TransactionPaymentWhereUniqueInput
  }

  export type TransactionItemsUncheckedCreateNestedManyWithoutTransactionsInput = {
    create?: XOR<TransactionItemsCreateWithoutTransactionsInput, TransactionItemsUncheckedCreateWithoutTransactionsInput> | TransactionItemsCreateWithoutTransactionsInput[] | TransactionItemsUncheckedCreateWithoutTransactionsInput[]
    connectOrCreate?: TransactionItemsCreateOrConnectWithoutTransactionsInput | TransactionItemsCreateOrConnectWithoutTransactionsInput[]
    createMany?: TransactionItemsCreateManyTransactionsInputEnvelope
    connect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
  }

  export type EnumTransactionStatusFieldUpdateOperationsInput = {
    set?: $Enums.TransactionStatus
  }

  export type CustomersUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<CustomersCreateWithoutTransactionsInput, CustomersUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: CustomersCreateOrConnectWithoutTransactionsInput
    upsert?: CustomersUpsertWithoutTransactionsInput
    connect?: CustomersWhereUniqueInput
    update?: XOR<XOR<CustomersUpdateToOneWithWhereWithoutTransactionsInput, CustomersUpdateWithoutTransactionsInput>, CustomersUncheckedUpdateWithoutTransactionsInput>
  }

  export type AddressesUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<AddressesCreateWithoutTransactionsInput, AddressesUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: AddressesCreateOrConnectWithoutTransactionsInput
    upsert?: AddressesUpsertWithoutTransactionsInput
    connect?: AddressesWhereUniqueInput
    update?: XOR<XOR<AddressesUpdateToOneWithWhereWithoutTransactionsInput, AddressesUpdateWithoutTransactionsInput>, AddressesUncheckedUpdateWithoutTransactionsInput>
  }

  export type ProjectUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<ProjectCreateWithoutTransactionsInput, ProjectUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutTransactionsInput
    upsert?: ProjectUpsertWithoutTransactionsInput
    connect?: ProjectWhereUniqueInput
    update?: XOR<XOR<ProjectUpdateToOneWithWhereWithoutTransactionsInput, ProjectUpdateWithoutTransactionsInput>, ProjectUncheckedUpdateWithoutTransactionsInput>
  }

  export type ProductsUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<ProductsCreateWithoutTransactionsInput, ProductsUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: ProductsCreateOrConnectWithoutTransactionsInput
    upsert?: ProductsUpsertWithoutTransactionsInput
    connect?: ProductsWhereUniqueInput
    update?: XOR<XOR<ProductsUpdateToOneWithWhereWithoutTransactionsInput, ProductsUpdateWithoutTransactionsInput>, ProductsUncheckedUpdateWithoutTransactionsInput>
  }

  export type SubscriptionsUpdateOneWithoutTransactionNestedInput = {
    create?: XOR<SubscriptionsCreateWithoutTransactionInput, SubscriptionsUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: SubscriptionsCreateOrConnectWithoutTransactionInput
    upsert?: SubscriptionsUpsertWithoutTransactionInput
    disconnect?: SubscriptionsWhereInput | boolean
    delete?: SubscriptionsWhereInput | boolean
    connect?: SubscriptionsWhereUniqueInput
    update?: XOR<XOR<SubscriptionsUpdateToOneWithWhereWithoutTransactionInput, SubscriptionsUpdateWithoutTransactionInput>, SubscriptionsUncheckedUpdateWithoutTransactionInput>
  }

  export type TransactionPaymentUpdateOneWithoutTransactionNestedInput = {
    create?: XOR<TransactionPaymentCreateWithoutTransactionInput, TransactionPaymentUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: TransactionPaymentCreateOrConnectWithoutTransactionInput
    upsert?: TransactionPaymentUpsertWithoutTransactionInput
    disconnect?: TransactionPaymentWhereInput | boolean
    delete?: TransactionPaymentWhereInput | boolean
    connect?: TransactionPaymentWhereUniqueInput
    update?: XOR<XOR<TransactionPaymentUpdateToOneWithWhereWithoutTransactionInput, TransactionPaymentUpdateWithoutTransactionInput>, TransactionPaymentUncheckedUpdateWithoutTransactionInput>
  }

  export type TransactionItemsUpdateManyWithoutTransactionsNestedInput = {
    create?: XOR<TransactionItemsCreateWithoutTransactionsInput, TransactionItemsUncheckedCreateWithoutTransactionsInput> | TransactionItemsCreateWithoutTransactionsInput[] | TransactionItemsUncheckedCreateWithoutTransactionsInput[]
    connectOrCreate?: TransactionItemsCreateOrConnectWithoutTransactionsInput | TransactionItemsCreateOrConnectWithoutTransactionsInput[]
    upsert?: TransactionItemsUpsertWithWhereUniqueWithoutTransactionsInput | TransactionItemsUpsertWithWhereUniqueWithoutTransactionsInput[]
    createMany?: TransactionItemsCreateManyTransactionsInputEnvelope
    set?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    disconnect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    delete?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    connect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    update?: TransactionItemsUpdateWithWhereUniqueWithoutTransactionsInput | TransactionItemsUpdateWithWhereUniqueWithoutTransactionsInput[]
    updateMany?: TransactionItemsUpdateManyWithWhereWithoutTransactionsInput | TransactionItemsUpdateManyWithWhereWithoutTransactionsInput[]
    deleteMany?: TransactionItemsScalarWhereInput | TransactionItemsScalarWhereInput[]
  }

  export type DiscountsUpdateOneWithoutTransactionsNestedInput = {
    create?: XOR<DiscountsCreateWithoutTransactionsInput, DiscountsUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: DiscountsCreateOrConnectWithoutTransactionsInput
    upsert?: DiscountsUpsertWithoutTransactionsInput
    disconnect?: DiscountsWhereInput | boolean
    delete?: DiscountsWhereInput | boolean
    connect?: DiscountsWhereUniqueInput
    update?: XOR<XOR<DiscountsUpdateToOneWithWhereWithoutTransactionsInput, DiscountsUpdateWithoutTransactionsInput>, DiscountsUncheckedUpdateWithoutTransactionsInput>
  }

  export type TransactionPaymentUncheckedUpdateOneWithoutTransactionNestedInput = {
    create?: XOR<TransactionPaymentCreateWithoutTransactionInput, TransactionPaymentUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: TransactionPaymentCreateOrConnectWithoutTransactionInput
    upsert?: TransactionPaymentUpsertWithoutTransactionInput
    disconnect?: TransactionPaymentWhereInput | boolean
    delete?: TransactionPaymentWhereInput | boolean
    connect?: TransactionPaymentWhereUniqueInput
    update?: XOR<XOR<TransactionPaymentUpdateToOneWithWhereWithoutTransactionInput, TransactionPaymentUpdateWithoutTransactionInput>, TransactionPaymentUncheckedUpdateWithoutTransactionInput>
  }

  export type TransactionItemsUncheckedUpdateManyWithoutTransactionsNestedInput = {
    create?: XOR<TransactionItemsCreateWithoutTransactionsInput, TransactionItemsUncheckedCreateWithoutTransactionsInput> | TransactionItemsCreateWithoutTransactionsInput[] | TransactionItemsUncheckedCreateWithoutTransactionsInput[]
    connectOrCreate?: TransactionItemsCreateOrConnectWithoutTransactionsInput | TransactionItemsCreateOrConnectWithoutTransactionsInput[]
    upsert?: TransactionItemsUpsertWithWhereUniqueWithoutTransactionsInput | TransactionItemsUpsertWithWhereUniqueWithoutTransactionsInput[]
    createMany?: TransactionItemsCreateManyTransactionsInputEnvelope
    set?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    disconnect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    delete?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    connect?: TransactionItemsWhereUniqueInput | TransactionItemsWhereUniqueInput[]
    update?: TransactionItemsUpdateWithWhereUniqueWithoutTransactionsInput | TransactionItemsUpdateWithWhereUniqueWithoutTransactionsInput[]
    updateMany?: TransactionItemsUpdateManyWithWhereWithoutTransactionsInput | TransactionItemsUpdateManyWithWhereWithoutTransactionsInput[]
    deleteMany?: TransactionItemsScalarWhereInput | TransactionItemsScalarWhereInput[]
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumproduct_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.product_status | Enumproduct_statusFieldRefInput<$PrismaModel>
    in?: $Enums.product_status[] | ListEnumproduct_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.product_status[] | ListEnumproduct_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumproduct_statusFilter<$PrismaModel> | $Enums.product_status
  }

  export type NestedEnumproduct_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.product_status | Enumproduct_statusFieldRefInput<$PrismaModel>
    in?: $Enums.product_status[] | ListEnumproduct_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.product_status[] | ListEnumproduct_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumproduct_statusWithAggregatesFilter<$PrismaModel> | $Enums.product_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumproduct_statusFilter<$PrismaModel>
    _max?: NestedEnumproduct_statusFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumPriceTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PriceType | EnumPriceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPriceTypeFilter<$PrismaModel> | $Enums.PriceType
  }

  export type NestedEnumBillingIntervalFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingInterval | EnumBillingIntervalFieldRefInput<$PrismaModel>
    in?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel>
    notIn?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel>
    not?: NestedEnumBillingIntervalFilter<$PrismaModel> | $Enums.BillingInterval
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumEntity_StatusFilter<$PrismaModel = never> = {
    equals?: $Enums.Entity_Status | EnumEntity_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEntity_StatusFilter<$PrismaModel> | $Enums.Entity_Status
  }

  export type NestedEnumPriceTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PriceType | EnumPriceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPriceTypeWithAggregatesFilter<$PrismaModel> | $Enums.PriceType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPriceTypeFilter<$PrismaModel>
    _max?: NestedEnumPriceTypeFilter<$PrismaModel>
  }

  export type NestedEnumBillingIntervalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingInterval | EnumBillingIntervalFieldRefInput<$PrismaModel>
    in?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel>
    notIn?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel>
    not?: NestedEnumBillingIntervalWithAggregatesFilter<$PrismaModel> | $Enums.BillingInterval
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBillingIntervalFilter<$PrismaModel>
    _max?: NestedEnumBillingIntervalFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumEntity_StatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Entity_Status | EnumEntity_StatusFieldRefInput<$PrismaModel>
    in?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEntity_StatusWithAggregatesFilter<$PrismaModel> | $Enums.Entity_Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEntity_StatusFilter<$PrismaModel>
    _max?: NestedEnumEntity_StatusFilter<$PrismaModel>
  }

  export type NestedEnumEntity_StatusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Entity_Status | EnumEntity_StatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEntity_StatusNullableFilter<$PrismaModel> | $Enums.Entity_Status | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumDiscount_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.Discount_type | EnumDiscount_typeFieldRefInput<$PrismaModel>
    in?: $Enums.Discount_type[] | ListEnumDiscount_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Discount_type[] | ListEnumDiscount_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumDiscount_typeFilter<$PrismaModel> | $Enums.Discount_type
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumEntity_StatusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Entity_Status | EnumEntity_StatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Entity_Status[] | ListEnumEntity_StatusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEntity_StatusNullableWithAggregatesFilter<$PrismaModel> | $Enums.Entity_Status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEntity_StatusNullableFilter<$PrismaModel>
    _max?: NestedEnumEntity_StatusNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumDiscount_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Discount_type | EnumDiscount_typeFieldRefInput<$PrismaModel>
    in?: $Enums.Discount_type[] | ListEnumDiscount_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Discount_type[] | ListEnumDiscount_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumDiscount_typeWithAggregatesFilter<$PrismaModel> | $Enums.Discount_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDiscount_typeFilter<$PrismaModel>
    _max?: NestedEnumDiscount_typeFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumSubscriptionItemsStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionItemsStatus | EnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionItemsStatus[] | ListEnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionItemsStatus[] | ListEnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionItemsStatusFilter<$PrismaModel> | $Enums.SubscriptionItemsStatus
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumSubscriptionItemsStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionItemsStatus | EnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionItemsStatus[] | ListEnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionItemsStatus[] | ListEnumSubscriptionItemsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionItemsStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionItemsStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionItemsStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionItemsStatusFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumScheduledChangeActionFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduledChangeAction | EnumScheduledChangeActionFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduledChangeAction[] | ListEnumScheduledChangeActionFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduledChangeAction[] | ListEnumScheduledChangeActionFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduledChangeActionFilter<$PrismaModel> | $Enums.ScheduledChangeAction
  }

  export type NestedEnumScheduledChangesStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduledChangesStatus | EnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduledChangesStatus[] | ListEnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduledChangesStatus[] | ListEnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduledChangesStatusFilter<$PrismaModel> | $Enums.ScheduledChangesStatus
  }

  export type NestedEnumScheduledChangeActionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduledChangeAction | EnumScheduledChangeActionFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduledChangeAction[] | ListEnumScheduledChangeActionFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduledChangeAction[] | ListEnumScheduledChangeActionFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduledChangeActionWithAggregatesFilter<$PrismaModel> | $Enums.ScheduledChangeAction
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumScheduledChangeActionFilter<$PrismaModel>
    _max?: NestedEnumScheduledChangeActionFilter<$PrismaModel>
  }

  export type NestedEnumScheduledChangesStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduledChangesStatus | EnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduledChangesStatus[] | ListEnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduledChangesStatus[] | ListEnumScheduledChangesStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduledChangesStatusWithAggregatesFilter<$PrismaModel> | $Enums.ScheduledChangesStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumScheduledChangesStatusFilter<$PrismaModel>
    _max?: NestedEnumScheduledChangesStatusFilter<$PrismaModel>
  }

  export type NestedEnumSubscriptionsStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionsStatus | EnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionsStatus[] | ListEnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionsStatus[] | ListEnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionsStatusFilter<$PrismaModel> | $Enums.SubscriptionsStatus
  }

  export type NestedEnumCollectionModeFilter<$PrismaModel = never> = {
    equals?: $Enums.CollectionMode | EnumCollectionModeFieldRefInput<$PrismaModel>
    in?: $Enums.CollectionMode[] | ListEnumCollectionModeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CollectionMode[] | ListEnumCollectionModeFieldRefInput<$PrismaModel>
    not?: NestedEnumCollectionModeFilter<$PrismaModel> | $Enums.CollectionMode
  }

  export type NestedEnumSubscriptionsStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionsStatus | EnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionsStatus[] | ListEnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionsStatus[] | ListEnumSubscriptionsStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionsStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionsStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionsStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionsStatusFilter<$PrismaModel>
  }

  export type NestedEnumCollectionModeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CollectionMode | EnumCollectionModeFieldRefInput<$PrismaModel>
    in?: $Enums.CollectionMode[] | ListEnumCollectionModeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CollectionMode[] | ListEnumCollectionModeFieldRefInput<$PrismaModel>
    not?: NestedEnumCollectionModeWithAggregatesFilter<$PrismaModel> | $Enums.CollectionMode
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCollectionModeFilter<$PrismaModel>
    _max?: NestedEnumCollectionModeFilter<$PrismaModel>
  }

  export type NestedEnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type NestedEnumPaymentProviderFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentProvider | EnumPaymentProviderFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentProviderFilter<$PrismaModel> | $Enums.PaymentProvider
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type NestedEnumPaymentProviderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentProvider | EnumPaymentProviderFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentProviderWithAggregatesFilter<$PrismaModel> | $Enums.PaymentProvider
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentProviderFilter<$PrismaModel>
    _max?: NestedEnumPaymentProviderFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type NestedEnumTransactionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusFilter<$PrismaModel> | $Enums.TransactionStatus
  }

  export type NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransactionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionStatusFilter<$PrismaModel>
    _max?: NestedEnumTransactionStatusFilter<$PrismaModel>
  }

  export type ProjectUsersCreateWithoutProjectInput = {
    id?: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutProjectUsersInput
  }

  export type ProjectUsersUncheckedCreateWithoutProjectInput = {
    id?: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type ProjectUsersCreateOrConnectWithoutProjectInput = {
    where: ProjectUsersWhereUniqueInput
    create: XOR<ProjectUsersCreateWithoutProjectInput, ProjectUsersUncheckedCreateWithoutProjectInput>
  }

  export type ProjectUsersCreateManyProjectInputEnvelope = {
    data: ProjectUsersCreateManyProjectInput | ProjectUsersCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type ProjectInviteCreateWithoutProjectInput = {
    email: string
    expires: Date | string
    createdAt?: Date | string
  }

  export type ProjectInviteUncheckedCreateWithoutProjectInput = {
    email: string
    expires: Date | string
    createdAt?: Date | string
  }

  export type ProjectInviteCreateOrConnectWithoutProjectInput = {
    where: ProjectInviteWhereUniqueInput
    create: XOR<ProjectInviteCreateWithoutProjectInput, ProjectInviteUncheckedCreateWithoutProjectInput>
  }

  export type ProjectInviteCreateManyProjectInputEnvelope = {
    data: ProjectInviteCreateManyProjectInput | ProjectInviteCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type SentEmailCreateWithoutProjectInput = {
    id?: string
    type: string
    createdAt?: Date | string
  }

  export type SentEmailUncheckedCreateWithoutProjectInput = {
    id?: string
    type: string
    createdAt?: Date | string
  }

  export type SentEmailCreateOrConnectWithoutProjectInput = {
    where: SentEmailWhereUniqueInput
    create: XOR<SentEmailCreateWithoutProjectInput, SentEmailUncheckedCreateWithoutProjectInput>
  }

  export type SentEmailCreateManyProjectInputEnvelope = {
    data: SentEmailCreateManyProjectInput | SentEmailCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type ProductsCreateWithoutProjectInput = {
    id?: string
    name: string
    description: string
    status?: $Enums.product_status
    createdAt?: Date | string
    updatedAt: Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    prices?: PricesCreateNestedManyWithoutProductsInput
    Transactions?: TransactionsCreateNestedManyWithoutProductInput
  }

  export type ProductsUncheckedCreateWithoutProjectInput = {
    id?: string
    name: string
    description: string
    status?: $Enums.product_status
    createdAt?: Date | string
    updatedAt: Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    prices?: PricesUncheckedCreateNestedManyWithoutProductsInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductsCreateOrConnectWithoutProjectInput = {
    where: ProductsWhereUniqueInput
    create: XOR<ProductsCreateWithoutProjectInput, ProductsUncheckedCreateWithoutProjectInput>
  }

  export type ProductsCreateManyProjectInputEnvelope = {
    data: ProductsCreateManyProjectInput | ProductsCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type PricesCreateWithoutProjectInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    Products?: ProductsCreateNestedOneWithoutPricesInput
    Discount_Prices?: Discount_PricesCreateNestedManyWithoutPriceInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutPriceInput
    TransactionItems?: TransactionItemsCreateNestedManyWithoutPriceInput
  }

  export type PricesUncheckedCreateWithoutProjectInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    product_id: string
    Discount_Prices?: Discount_PricesUncheckedCreateNestedManyWithoutPriceInput
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutPriceInput
    TransactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutPriceInput
  }

  export type PricesCreateOrConnectWithoutProjectInput = {
    where: PricesWhereUniqueInput
    create: XOR<PricesCreateWithoutProjectInput, PricesUncheckedCreateWithoutProjectInput>
  }

  export type PricesCreateManyProjectInputEnvelope = {
    data: PricesCreateManyProjectInput | PricesCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type DiscountsCreateWithoutProjectInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
    discount_prices?: Discount_PricesCreateNestedManyWithoutDiscountInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutDiscountInput
    Transactions?: TransactionsCreateNestedManyWithoutDiscountInput
  }

  export type DiscountsUncheckedCreateWithoutProjectInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
    discount_prices?: Discount_PricesUncheckedCreateNestedManyWithoutDiscountInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutDiscountInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutDiscountInput
  }

  export type DiscountsCreateOrConnectWithoutProjectInput = {
    where: DiscountsWhereUniqueInput
    create: XOR<DiscountsCreateWithoutProjectInput, DiscountsUncheckedCreateWithoutProjectInput>
  }

  export type DiscountsCreateManyProjectInputEnvelope = {
    data: DiscountsCreateManyProjectInput | DiscountsCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type CustomersCreateWithoutProjectInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
    Addresses?: AddressesCreateNestedManyWithoutCustomersInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutCustomerInput
    Transactions?: TransactionsCreateNestedManyWithoutCustomerInput
  }

  export type CustomersUncheckedCreateWithoutProjectInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
    Addresses?: AddressesUncheckedCreateNestedManyWithoutCustomersInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutCustomerInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomersCreateOrConnectWithoutProjectInput = {
    where: CustomersWhereUniqueInput
    create: XOR<CustomersCreateWithoutProjectInput, CustomersUncheckedCreateWithoutProjectInput>
  }

  export type CustomersCreateManyProjectInputEnvelope = {
    data: CustomersCreateManyProjectInput | CustomersCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type SubscriptionsCreateWithoutProjectInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    collection_mode: $Enums.CollectionMode
    customer: CustomersCreateNestedOneWithoutSubscriptionsInput
    address: AddressesCreateNestedOneWithoutSubscriptionsInput
    discount?: DiscountsCreateNestedOneWithoutSubscriptionsInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsUncheckedCreateWithoutProjectInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    address_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsUncheckedCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsCreateOrConnectWithoutProjectInput = {
    where: SubscriptionsWhereUniqueInput
    create: XOR<SubscriptionsCreateWithoutProjectInput, SubscriptionsUncheckedCreateWithoutProjectInput>
  }

  export type SubscriptionsCreateManyProjectInputEnvelope = {
    data: SubscriptionsCreateManyProjectInput | SubscriptionsCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type TransactionsCreateWithoutProjectInput = {
    id: string
    status: $Enums.TransactionStatus
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    customer: CustomersCreateNestedOneWithoutTransactionsInput
    address: AddressesCreateNestedOneWithoutTransactionsInput
    product: ProductsCreateNestedOneWithoutTransactionsInput
    subscription?: SubscriptionsCreateNestedOneWithoutTransactionInput
    TransactionPayment?: TransactionPaymentCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsCreateNestedManyWithoutTransactionsInput
    discount?: DiscountsCreateNestedOneWithoutTransactionsInput
  }

  export type TransactionsUncheckedCreateWithoutProjectInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutTransactionsInput
  }

  export type TransactionsCreateOrConnectWithoutProjectInput = {
    where: TransactionsWhereUniqueInput
    create: XOR<TransactionsCreateWithoutProjectInput, TransactionsUncheckedCreateWithoutProjectInput>
  }

  export type TransactionsCreateManyProjectInputEnvelope = {
    data: TransactionsCreateManyProjectInput | TransactionsCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type ProjectUsersUpsertWithWhereUniqueWithoutProjectInput = {
    where: ProjectUsersWhereUniqueInput
    update: XOR<ProjectUsersUpdateWithoutProjectInput, ProjectUsersUncheckedUpdateWithoutProjectInput>
    create: XOR<ProjectUsersCreateWithoutProjectInput, ProjectUsersUncheckedCreateWithoutProjectInput>
  }

  export type ProjectUsersUpdateWithWhereUniqueWithoutProjectInput = {
    where: ProjectUsersWhereUniqueInput
    data: XOR<ProjectUsersUpdateWithoutProjectInput, ProjectUsersUncheckedUpdateWithoutProjectInput>
  }

  export type ProjectUsersUpdateManyWithWhereWithoutProjectInput = {
    where: ProjectUsersScalarWhereInput
    data: XOR<ProjectUsersUpdateManyMutationInput, ProjectUsersUncheckedUpdateManyWithoutProjectInput>
  }

  export type ProjectUsersScalarWhereInput = {
    AND?: ProjectUsersScalarWhereInput | ProjectUsersScalarWhereInput[]
    OR?: ProjectUsersScalarWhereInput[]
    NOT?: ProjectUsersScalarWhereInput | ProjectUsersScalarWhereInput[]
    id?: StringFilter<"ProjectUsers"> | string
    role?: EnumRoleFilter<"ProjectUsers"> | $Enums.Role
    createdAt?: DateTimeFilter<"ProjectUsers"> | Date | string
    updatedAt?: DateTimeFilter<"ProjectUsers"> | Date | string
    userId?: StringFilter<"ProjectUsers"> | string
    projectId?: StringFilter<"ProjectUsers"> | string
  }

  export type ProjectInviteUpsertWithWhereUniqueWithoutProjectInput = {
    where: ProjectInviteWhereUniqueInput
    update: XOR<ProjectInviteUpdateWithoutProjectInput, ProjectInviteUncheckedUpdateWithoutProjectInput>
    create: XOR<ProjectInviteCreateWithoutProjectInput, ProjectInviteUncheckedCreateWithoutProjectInput>
  }

  export type ProjectInviteUpdateWithWhereUniqueWithoutProjectInput = {
    where: ProjectInviteWhereUniqueInput
    data: XOR<ProjectInviteUpdateWithoutProjectInput, ProjectInviteUncheckedUpdateWithoutProjectInput>
  }

  export type ProjectInviteUpdateManyWithWhereWithoutProjectInput = {
    where: ProjectInviteScalarWhereInput
    data: XOR<ProjectInviteUpdateManyMutationInput, ProjectInviteUncheckedUpdateManyWithoutProjectInput>
  }

  export type ProjectInviteScalarWhereInput = {
    AND?: ProjectInviteScalarWhereInput | ProjectInviteScalarWhereInput[]
    OR?: ProjectInviteScalarWhereInput[]
    NOT?: ProjectInviteScalarWhereInput | ProjectInviteScalarWhereInput[]
    email?: StringFilter<"ProjectInvite"> | string
    expires?: DateTimeFilter<"ProjectInvite"> | Date | string
    projectId?: StringFilter<"ProjectInvite"> | string
    createdAt?: DateTimeFilter<"ProjectInvite"> | Date | string
  }

  export type SentEmailUpsertWithWhereUniqueWithoutProjectInput = {
    where: SentEmailWhereUniqueInput
    update: XOR<SentEmailUpdateWithoutProjectInput, SentEmailUncheckedUpdateWithoutProjectInput>
    create: XOR<SentEmailCreateWithoutProjectInput, SentEmailUncheckedCreateWithoutProjectInput>
  }

  export type SentEmailUpdateWithWhereUniqueWithoutProjectInput = {
    where: SentEmailWhereUniqueInput
    data: XOR<SentEmailUpdateWithoutProjectInput, SentEmailUncheckedUpdateWithoutProjectInput>
  }

  export type SentEmailUpdateManyWithWhereWithoutProjectInput = {
    where: SentEmailScalarWhereInput
    data: XOR<SentEmailUpdateManyMutationInput, SentEmailUncheckedUpdateManyWithoutProjectInput>
  }

  export type SentEmailScalarWhereInput = {
    AND?: SentEmailScalarWhereInput | SentEmailScalarWhereInput[]
    OR?: SentEmailScalarWhereInput[]
    NOT?: SentEmailScalarWhereInput | SentEmailScalarWhereInput[]
    id?: StringFilter<"SentEmail"> | string
    type?: StringFilter<"SentEmail"> | string
    createdAt?: DateTimeFilter<"SentEmail"> | Date | string
    projectId?: StringNullableFilter<"SentEmail"> | string | null
  }

  export type ProductsUpsertWithWhereUniqueWithoutProjectInput = {
    where: ProductsWhereUniqueInput
    update: XOR<ProductsUpdateWithoutProjectInput, ProductsUncheckedUpdateWithoutProjectInput>
    create: XOR<ProductsCreateWithoutProjectInput, ProductsUncheckedCreateWithoutProjectInput>
  }

  export type ProductsUpdateWithWhereUniqueWithoutProjectInput = {
    where: ProductsWhereUniqueInput
    data: XOR<ProductsUpdateWithoutProjectInput, ProductsUncheckedUpdateWithoutProjectInput>
  }

  export type ProductsUpdateManyWithWhereWithoutProjectInput = {
    where: ProductsScalarWhereInput
    data: XOR<ProductsUpdateManyMutationInput, ProductsUncheckedUpdateManyWithoutProjectInput>
  }

  export type ProductsScalarWhereInput = {
    AND?: ProductsScalarWhereInput | ProductsScalarWhereInput[]
    OR?: ProductsScalarWhereInput[]
    NOT?: ProductsScalarWhereInput | ProductsScalarWhereInput[]
    id?: StringFilter<"Products"> | string
    name?: StringFilter<"Products"> | string
    description?: StringFilter<"Products"> | string
    status?: Enumproduct_statusFilter<"Products"> | $Enums.product_status
    createdAt?: DateTimeFilter<"Products"> | Date | string
    updatedAt?: DateTimeFilter<"Products"> | Date | string
    custom_data?: JsonNullableFilter<"Products">
    project_id?: StringFilter<"Products"> | string
  }

  export type PricesUpsertWithWhereUniqueWithoutProjectInput = {
    where: PricesWhereUniqueInput
    update: XOR<PricesUpdateWithoutProjectInput, PricesUncheckedUpdateWithoutProjectInput>
    create: XOR<PricesCreateWithoutProjectInput, PricesUncheckedCreateWithoutProjectInput>
  }

  export type PricesUpdateWithWhereUniqueWithoutProjectInput = {
    where: PricesWhereUniqueInput
    data: XOR<PricesUpdateWithoutProjectInput, PricesUncheckedUpdateWithoutProjectInput>
  }

  export type PricesUpdateManyWithWhereWithoutProjectInput = {
    where: PricesScalarWhereInput
    data: XOR<PricesUpdateManyMutationInput, PricesUncheckedUpdateManyWithoutProjectInput>
  }

  export type PricesScalarWhereInput = {
    AND?: PricesScalarWhereInput | PricesScalarWhereInput[]
    OR?: PricesScalarWhereInput[]
    NOT?: PricesScalarWhereInput | PricesScalarWhereInput[]
    id?: StringFilter<"Prices"> | string
    type?: EnumPriceTypeFilter<"Prices"> | $Enums.PriceType
    description?: StringNullableFilter<"Prices"> | string | null
    name?: StringFilter<"Prices"> | string
    billing_cycle_frequency?: IntFilter<"Prices"> | number
    billing_cycle_interval?: EnumBillingIntervalFilter<"Prices"> | $Enums.BillingInterval
    trial_period_frequency?: IntFilter<"Prices"> | number
    trial_period_interval?: EnumBillingIntervalFilter<"Prices"> | $Enums.BillingInterval
    amount?: DecimalFilter<"Prices"> | Decimal | DecimalJsLike | number | string
    currency_code?: StringFilter<"Prices"> | string
    custom_data?: JsonNullableFilter<"Prices">
    status?: EnumEntity_StatusFilter<"Prices"> | $Enums.Entity_Status
    created_at?: DateTimeFilter<"Prices"> | Date | string
    updated_at?: DateTimeFilter<"Prices"> | Date | string
    product_id?: StringFilter<"Prices"> | string
    projectId?: StringFilter<"Prices"> | string
  }

  export type DiscountsUpsertWithWhereUniqueWithoutProjectInput = {
    where: DiscountsWhereUniqueInput
    update: XOR<DiscountsUpdateWithoutProjectInput, DiscountsUncheckedUpdateWithoutProjectInput>
    create: XOR<DiscountsCreateWithoutProjectInput, DiscountsUncheckedCreateWithoutProjectInput>
  }

  export type DiscountsUpdateWithWhereUniqueWithoutProjectInput = {
    where: DiscountsWhereUniqueInput
    data: XOR<DiscountsUpdateWithoutProjectInput, DiscountsUncheckedUpdateWithoutProjectInput>
  }

  export type DiscountsUpdateManyWithWhereWithoutProjectInput = {
    where: DiscountsScalarWhereInput
    data: XOR<DiscountsUpdateManyMutationInput, DiscountsUncheckedUpdateManyWithoutProjectInput>
  }

  export type DiscountsScalarWhereInput = {
    AND?: DiscountsScalarWhereInput | DiscountsScalarWhereInput[]
    OR?: DiscountsScalarWhereInput[]
    NOT?: DiscountsScalarWhereInput | DiscountsScalarWhereInput[]
    id?: StringFilter<"Discounts"> | string
    status?: EnumEntity_StatusNullableFilter<"Discounts"> | $Enums.Entity_Status | null
    description?: StringNullableFilter<"Discounts"> | string | null
    enabled_for_checkout?: BoolNullableFilter<"Discounts"> | boolean | null
    amount?: DecimalFilter<"Discounts"> | Decimal | DecimalJsLike | number | string
    currency_code?: StringFilter<"Discounts"> | string
    type?: EnumDiscount_typeFilter<"Discounts"> | $Enums.Discount_type
    recur?: BoolNullableFilter<"Discounts"> | boolean | null
    max_recurring_intervals?: DecimalNullableFilter<"Discounts"> | Decimal | DecimalJsLike | number | string | null
    usage_limit?: IntNullableFilter<"Discounts"> | number | null
    expires_at?: DateTimeNullableFilter<"Discounts"> | Date | string | null
    custom_data?: JsonNullableFilter<"Discounts">
    times_used?: IntNullableFilter<"Discounts"> | number | null
    created_at?: DateTimeFilter<"Discounts"> | Date | string
    updated_at?: DateTimeFilter<"Discounts"> | Date | string
    projectId?: StringNullableFilter<"Discounts"> | string | null
  }

  export type CustomersUpsertWithWhereUniqueWithoutProjectInput = {
    where: CustomersWhereUniqueInput
    update: XOR<CustomersUpdateWithoutProjectInput, CustomersUncheckedUpdateWithoutProjectInput>
    create: XOR<CustomersCreateWithoutProjectInput, CustomersUncheckedCreateWithoutProjectInput>
  }

  export type CustomersUpdateWithWhereUniqueWithoutProjectInput = {
    where: CustomersWhereUniqueInput
    data: XOR<CustomersUpdateWithoutProjectInput, CustomersUncheckedUpdateWithoutProjectInput>
  }

  export type CustomersUpdateManyWithWhereWithoutProjectInput = {
    where: CustomersScalarWhereInput
    data: XOR<CustomersUpdateManyMutationInput, CustomersUncheckedUpdateManyWithoutProjectInput>
  }

  export type CustomersScalarWhereInput = {
    AND?: CustomersScalarWhereInput | CustomersScalarWhereInput[]
    OR?: CustomersScalarWhereInput[]
    NOT?: CustomersScalarWhereInput | CustomersScalarWhereInput[]
    id?: StringFilter<"Customers"> | string
    email?: StringFilter<"Customers"> | string
    name?: StringFilter<"Customers"> | string
    status?: EnumEntity_StatusNullableFilter<"Customers"> | $Enums.Entity_Status | null
    description?: StringNullableFilter<"Customers"> | string | null
    custom_data?: JsonNullableFilter<"Customers">
    created_at?: DateTimeFilter<"Customers"> | Date | string
    updated_at?: DateTimeFilter<"Customers"> | Date | string
    projectId?: StringNullableFilter<"Customers"> | string | null
  }

  export type SubscriptionsUpsertWithWhereUniqueWithoutProjectInput = {
    where: SubscriptionsWhereUniqueInput
    update: XOR<SubscriptionsUpdateWithoutProjectInput, SubscriptionsUncheckedUpdateWithoutProjectInput>
    create: XOR<SubscriptionsCreateWithoutProjectInput, SubscriptionsUncheckedCreateWithoutProjectInput>
  }

  export type SubscriptionsUpdateWithWhereUniqueWithoutProjectInput = {
    where: SubscriptionsWhereUniqueInput
    data: XOR<SubscriptionsUpdateWithoutProjectInput, SubscriptionsUncheckedUpdateWithoutProjectInput>
  }

  export type SubscriptionsUpdateManyWithWhereWithoutProjectInput = {
    where: SubscriptionsScalarWhereInput
    data: XOR<SubscriptionsUpdateManyMutationInput, SubscriptionsUncheckedUpdateManyWithoutProjectInput>
  }

  export type SubscriptionsScalarWhereInput = {
    AND?: SubscriptionsScalarWhereInput | SubscriptionsScalarWhereInput[]
    OR?: SubscriptionsScalarWhereInput[]
    NOT?: SubscriptionsScalarWhereInput | SubscriptionsScalarWhereInput[]
    id?: StringFilter<"Subscriptions"> | string
    status?: EnumSubscriptionsStatusFilter<"Subscriptions"> | $Enums.SubscriptionsStatus
    currency_code?: StringFilter<"Subscriptions"> | string
    created_at?: DateTimeFilter<"Subscriptions"> | Date | string
    updated_at?: DateTimeFilter<"Subscriptions"> | Date | string
    started_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    first_billed_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    next_billed_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    paused_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    canceled_at?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    current_period_starts?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    current_period_ends?: DateTimeNullableFilter<"Subscriptions"> | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFilter<"Subscriptions"> | $Enums.BillingInterval
    billing_cycle_frequency?: IntFilter<"Subscriptions"> | number
    update_payment_method_url?: StringNullableFilter<"Subscriptions"> | string | null
    cancel_url?: StringNullableFilter<"Subscriptions"> | string | null
    customer_id?: StringFilter<"Subscriptions"> | string
    address_id?: StringFilter<"Subscriptions"> | string
    project_id?: StringFilter<"Subscriptions"> | string
    discount_id?: StringNullableFilter<"Subscriptions"> | string | null
    collection_mode?: EnumCollectionModeFilter<"Subscriptions"> | $Enums.CollectionMode
  }

  export type TransactionsUpsertWithWhereUniqueWithoutProjectInput = {
    where: TransactionsWhereUniqueInput
    update: XOR<TransactionsUpdateWithoutProjectInput, TransactionsUncheckedUpdateWithoutProjectInput>
    create: XOR<TransactionsCreateWithoutProjectInput, TransactionsUncheckedCreateWithoutProjectInput>
  }

  export type TransactionsUpdateWithWhereUniqueWithoutProjectInput = {
    where: TransactionsWhereUniqueInput
    data: XOR<TransactionsUpdateWithoutProjectInput, TransactionsUncheckedUpdateWithoutProjectInput>
  }

  export type TransactionsUpdateManyWithWhereWithoutProjectInput = {
    where: TransactionsScalarWhereInput
    data: XOR<TransactionsUpdateManyMutationInput, TransactionsUncheckedUpdateManyWithoutProjectInput>
  }

  export type TransactionsScalarWhereInput = {
    AND?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
    OR?: TransactionsScalarWhereInput[]
    NOT?: TransactionsScalarWhereInput | TransactionsScalarWhereInput[]
    id?: StringFilter<"Transactions"> | string
    status?: EnumTransactionStatusFilter<"Transactions"> | $Enums.TransactionStatus
    customer_id?: StringFilter<"Transactions"> | string
    address_id?: StringFilter<"Transactions"> | string
    project_id?: StringFilter<"Transactions"> | string
    product_id?: StringFilter<"Transactions"> | string
    subscription_id?: StringNullableFilter<"Transactions"> | string | null
    subtotal?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFilter<"Transactions"> | Decimal | DecimalJsLike | number | string
    discount_id?: StringNullableFilter<"Transactions"> | string | null
    invoice_id?: StringFilter<"Transactions"> | string
    current_period_starts?: DateTimeNullableFilter<"Transactions"> | Date | string | null
    current_period_ends?: DateTimeNullableFilter<"Transactions"> | Date | string | null
    custom_data?: JsonNullableFilter<"Transactions">
    currency_code?: StringFilter<"Transactions"> | string
    collection_mode?: EnumCollectionModeFilter<"Transactions"> | $Enums.CollectionMode
    created_at?: DateTimeFilter<"Transactions"> | Date | string
    updated_at?: DateTimeNullableFilter<"Transactions"> | Date | string | null
  }

  export type UserCreateWithoutProjectUsersInput = {
    id?: string
    name?: string | null
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    source?: string | null
    defaultWorkspace?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    api_keys?: Api_keysCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProjectUsersInput = {
    id?: string
    name?: string | null
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    source?: string | null
    defaultWorkspace?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    api_keys?: Api_keysUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProjectUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProjectUsersInput, UserUncheckedCreateWithoutProjectUsersInput>
  }

  export type ProjectCreateWithoutUsersInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    invites?: ProjectInviteCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailCreateNestedManyWithoutProjectInput
    products?: ProductsCreateNestedManyWithoutProjectInput
    prices?: PricesCreateNestedManyWithoutProjectInput
    discounts?: DiscountsCreateNestedManyWithoutProjectInput
    customers?: CustomersCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    invites?: ProjectInviteUncheckedCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailUncheckedCreateNestedManyWithoutProjectInput
    products?: ProductsUncheckedCreateNestedManyWithoutProjectInput
    prices?: PricesUncheckedCreateNestedManyWithoutProjectInput
    discounts?: DiscountsUncheckedCreateNestedManyWithoutProjectInput
    customers?: CustomersUncheckedCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutUsersInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutUsersInput, ProjectUncheckedCreateWithoutUsersInput>
  }

  export type UserUpsertWithoutProjectUsersInput = {
    update: XOR<UserUpdateWithoutProjectUsersInput, UserUncheckedUpdateWithoutProjectUsersInput>
    create: XOR<UserCreateWithoutProjectUsersInput, UserUncheckedCreateWithoutProjectUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProjectUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProjectUsersInput, UserUncheckedUpdateWithoutProjectUsersInput>
  }

  export type UserUpdateWithoutProjectUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    api_keys?: Api_keysUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutProjectUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    api_keys?: Api_keysUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProjectUpsertWithoutUsersInput = {
    update: XOR<ProjectUpdateWithoutUsersInput, ProjectUncheckedUpdateWithoutUsersInput>
    create: XOR<ProjectCreateWithoutUsersInput, ProjectUncheckedCreateWithoutUsersInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutUsersInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutUsersInput, ProjectUncheckedUpdateWithoutUsersInput>
  }

  export type ProjectUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    invites?: ProjectInviteUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUpdateManyWithoutProjectNestedInput
    products?: ProductsUpdateManyWithoutProjectNestedInput
    prices?: PricesUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUpdateManyWithoutProjectNestedInput
    customers?: CustomersUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    invites?: ProjectInviteUncheckedUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUncheckedUpdateManyWithoutProjectNestedInput
    products?: ProductsUncheckedUpdateManyWithoutProjectNestedInput
    prices?: PricesUncheckedUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUncheckedUpdateManyWithoutProjectNestedInput
    customers?: CustomersUncheckedUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectCreateWithoutInvitesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailCreateNestedManyWithoutProjectInput
    products?: ProductsCreateNestedManyWithoutProjectInput
    prices?: PricesCreateNestedManyWithoutProjectInput
    discounts?: DiscountsCreateNestedManyWithoutProjectInput
    customers?: CustomersCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutInvitesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersUncheckedCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailUncheckedCreateNestedManyWithoutProjectInput
    products?: ProductsUncheckedCreateNestedManyWithoutProjectInput
    prices?: PricesUncheckedCreateNestedManyWithoutProjectInput
    discounts?: DiscountsUncheckedCreateNestedManyWithoutProjectInput
    customers?: CustomersUncheckedCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutInvitesInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutInvitesInput, ProjectUncheckedCreateWithoutInvitesInput>
  }

  export type ProjectUpsertWithoutInvitesInput = {
    update: XOR<ProjectUpdateWithoutInvitesInput, ProjectUncheckedUpdateWithoutInvitesInput>
    create: XOR<ProjectCreateWithoutInvitesInput, ProjectUncheckedCreateWithoutInvitesInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutInvitesInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutInvitesInput, ProjectUncheckedUpdateWithoutInvitesInput>
  }

  export type ProjectUpdateWithoutInvitesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUpdateManyWithoutProjectNestedInput
    products?: ProductsUpdateManyWithoutProjectNestedInput
    prices?: PricesUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUpdateManyWithoutProjectNestedInput
    customers?: CustomersUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutInvitesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUncheckedUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUncheckedUpdateManyWithoutProjectNestedInput
    products?: ProductsUncheckedUpdateManyWithoutProjectNestedInput
    prices?: PricesUncheckedUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUncheckedUpdateManyWithoutProjectNestedInput
    customers?: CustomersUncheckedUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectCreateWithoutSentEmailsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteCreateNestedManyWithoutProjectInput
    products?: ProductsCreateNestedManyWithoutProjectInput
    prices?: PricesCreateNestedManyWithoutProjectInput
    discounts?: DiscountsCreateNestedManyWithoutProjectInput
    customers?: CustomersCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutSentEmailsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersUncheckedCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteUncheckedCreateNestedManyWithoutProjectInput
    products?: ProductsUncheckedCreateNestedManyWithoutProjectInput
    prices?: PricesUncheckedCreateNestedManyWithoutProjectInput
    discounts?: DiscountsUncheckedCreateNestedManyWithoutProjectInput
    customers?: CustomersUncheckedCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutSentEmailsInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutSentEmailsInput, ProjectUncheckedCreateWithoutSentEmailsInput>
  }

  export type ProjectUpsertWithoutSentEmailsInput = {
    update: XOR<ProjectUpdateWithoutSentEmailsInput, ProjectUncheckedUpdateWithoutSentEmailsInput>
    create: XOR<ProjectCreateWithoutSentEmailsInput, ProjectUncheckedCreateWithoutSentEmailsInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutSentEmailsInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutSentEmailsInput, ProjectUncheckedUpdateWithoutSentEmailsInput>
  }

  export type ProjectUpdateWithoutSentEmailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUpdateManyWithoutProjectNestedInput
    products?: ProductsUpdateManyWithoutProjectNestedInput
    prices?: PricesUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUpdateManyWithoutProjectNestedInput
    customers?: CustomersUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutSentEmailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUncheckedUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUncheckedUpdateManyWithoutProjectNestedInput
    products?: ProductsUncheckedUpdateManyWithoutProjectNestedInput
    prices?: PricesUncheckedUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUncheckedUpdateManyWithoutProjectNestedInput
    customers?: CustomersUncheckedUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type AccountCreateWithoutUserInput = {
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountCreateManyUserInputEnvelope = {
    data: AccountCreateManyUserInput | AccountCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ProjectUsersCreateWithoutUserInput = {
    id?: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    project: ProjectCreateNestedOneWithoutUsersInput
  }

  export type ProjectUsersUncheckedCreateWithoutUserInput = {
    id?: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    projectId: string
  }

  export type ProjectUsersCreateOrConnectWithoutUserInput = {
    where: ProjectUsersWhereUniqueInput
    create: XOR<ProjectUsersCreateWithoutUserInput, ProjectUsersUncheckedCreateWithoutUserInput>
  }

  export type ProjectUsersCreateManyUserInputEnvelope = {
    data: ProjectUsersCreateManyUserInput | ProjectUsersCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SessionCreateWithoutUserInput = {
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type Api_keysCreateWithoutUserInput = {
    id?: string
    prefix?: string | null
    description?: string | null
    createdAt?: Date | string
    key: string
  }

  export type Api_keysUncheckedCreateWithoutUserInput = {
    id?: string
    prefix?: string | null
    description?: string | null
    createdAt?: Date | string
    key: string
  }

  export type Api_keysCreateOrConnectWithoutUserInput = {
    where: Api_keysWhereUniqueInput
    create: XOR<Api_keysCreateWithoutUserInput, Api_keysUncheckedCreateWithoutUserInput>
  }

  export type Api_keysCreateManyUserInputEnvelope = {
    data: Api_keysCreateManyUserInput | Api_keysCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AccountUpsertWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateManyWithWhereWithoutUserInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutUserInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
  }

  export type ProjectUsersUpsertWithWhereUniqueWithoutUserInput = {
    where: ProjectUsersWhereUniqueInput
    update: XOR<ProjectUsersUpdateWithoutUserInput, ProjectUsersUncheckedUpdateWithoutUserInput>
    create: XOR<ProjectUsersCreateWithoutUserInput, ProjectUsersUncheckedCreateWithoutUserInput>
  }

  export type ProjectUsersUpdateWithWhereUniqueWithoutUserInput = {
    where: ProjectUsersWhereUniqueInput
    data: XOR<ProjectUsersUpdateWithoutUserInput, ProjectUsersUncheckedUpdateWithoutUserInput>
  }

  export type ProjectUsersUpdateManyWithWhereWithoutUserInput = {
    where: ProjectUsersScalarWhereInput
    data: XOR<ProjectUsersUpdateManyMutationInput, ProjectUsersUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
  }

  export type Api_keysUpsertWithWhereUniqueWithoutUserInput = {
    where: Api_keysWhereUniqueInput
    update: XOR<Api_keysUpdateWithoutUserInput, Api_keysUncheckedUpdateWithoutUserInput>
    create: XOR<Api_keysCreateWithoutUserInput, Api_keysUncheckedCreateWithoutUserInput>
  }

  export type Api_keysUpdateWithWhereUniqueWithoutUserInput = {
    where: Api_keysWhereUniqueInput
    data: XOR<Api_keysUpdateWithoutUserInput, Api_keysUncheckedUpdateWithoutUserInput>
  }

  export type Api_keysUpdateManyWithWhereWithoutUserInput = {
    where: Api_keysScalarWhereInput
    data: XOR<Api_keysUpdateManyMutationInput, Api_keysUncheckedUpdateManyWithoutUserInput>
  }

  export type Api_keysScalarWhereInput = {
    AND?: Api_keysScalarWhereInput | Api_keysScalarWhereInput[]
    OR?: Api_keysScalarWhereInput[]
    NOT?: Api_keysScalarWhereInput | Api_keysScalarWhereInput[]
    id?: StringFilter<"Api_keys"> | string
    prefix?: StringNullableFilter<"Api_keys"> | string | null
    description?: StringNullableFilter<"Api_keys"> | string | null
    createdAt?: DateTimeFilter<"Api_keys"> | Date | string
    key?: StringFilter<"Api_keys"> | string
    userId?: StringFilter<"Api_keys"> | string
  }

  export type UserCreateWithoutAccountsInput = {
    id?: string
    name?: string | null
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    source?: string | null
    defaultWorkspace?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    ProjectUsers?: ProjectUsersCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    api_keys?: Api_keysCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAccountsInput = {
    id?: string
    name?: string | null
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    source?: string | null
    defaultWorkspace?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    ProjectUsers?: ProjectUsersUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    api_keys?: Api_keysUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAccountsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
  }

  export type UserUpsertWithoutAccountsInput = {
    update: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ProjectUsers?: ProjectUsersUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    api_keys?: Api_keysUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ProjectUsers?: ProjectUsersUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    api_keys?: Api_keysUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    name?: string | null
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    source?: string | null
    defaultWorkspace?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    ProjectUsers?: ProjectUsersCreateNestedManyWithoutUserInput
    api_keys?: Api_keysCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    name?: string | null
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    source?: string | null
    defaultWorkspace?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    ProjectUsers?: ProjectUsersUncheckedCreateNestedManyWithoutUserInput
    api_keys?: Api_keysUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    ProjectUsers?: ProjectUsersUpdateManyWithoutUserNestedInput
    api_keys?: Api_keysUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    ProjectUsers?: ProjectUsersUncheckedUpdateManyWithoutUserNestedInput
    api_keys?: Api_keysUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProjectCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailCreateNestedManyWithoutProjectInput
    prices?: PricesCreateNestedManyWithoutProjectInput
    discounts?: DiscountsCreateNestedManyWithoutProjectInput
    customers?: CustomersCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersUncheckedCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteUncheckedCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailUncheckedCreateNestedManyWithoutProjectInput
    prices?: PricesUncheckedCreateNestedManyWithoutProjectInput
    discounts?: DiscountsUncheckedCreateNestedManyWithoutProjectInput
    customers?: CustomersUncheckedCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutProductsInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutProductsInput, ProjectUncheckedCreateWithoutProductsInput>
  }

  export type PricesCreateWithoutProductsInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    Project: ProjectCreateNestedOneWithoutPricesInput
    Discount_Prices?: Discount_PricesCreateNestedManyWithoutPriceInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutPriceInput
    TransactionItems?: TransactionItemsCreateNestedManyWithoutPriceInput
  }

  export type PricesUncheckedCreateWithoutProductsInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    projectId: string
    Discount_Prices?: Discount_PricesUncheckedCreateNestedManyWithoutPriceInput
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutPriceInput
    TransactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutPriceInput
  }

  export type PricesCreateOrConnectWithoutProductsInput = {
    where: PricesWhereUniqueInput
    create: XOR<PricesCreateWithoutProductsInput, PricesUncheckedCreateWithoutProductsInput>
  }

  export type PricesCreateManyProductsInputEnvelope = {
    data: PricesCreateManyProductsInput | PricesCreateManyProductsInput[]
    skipDuplicates?: boolean
  }

  export type TransactionsCreateWithoutProductInput = {
    id: string
    status: $Enums.TransactionStatus
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    customer: CustomersCreateNestedOneWithoutTransactionsInput
    address: AddressesCreateNestedOneWithoutTransactionsInput
    project: ProjectCreateNestedOneWithoutTransactionsInput
    subscription?: SubscriptionsCreateNestedOneWithoutTransactionInput
    TransactionPayment?: TransactionPaymentCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsCreateNestedManyWithoutTransactionsInput
    discount?: DiscountsCreateNestedOneWithoutTransactionsInput
  }

  export type TransactionsUncheckedCreateWithoutProductInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    project_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutTransactionsInput
  }

  export type TransactionsCreateOrConnectWithoutProductInput = {
    where: TransactionsWhereUniqueInput
    create: XOR<TransactionsCreateWithoutProductInput, TransactionsUncheckedCreateWithoutProductInput>
  }

  export type TransactionsCreateManyProductInputEnvelope = {
    data: TransactionsCreateManyProductInput | TransactionsCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProjectUpsertWithoutProductsInput = {
    update: XOR<ProjectUpdateWithoutProductsInput, ProjectUncheckedUpdateWithoutProductsInput>
    create: XOR<ProjectCreateWithoutProductsInput, ProjectUncheckedCreateWithoutProductsInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutProductsInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutProductsInput, ProjectUncheckedUpdateWithoutProductsInput>
  }

  export type ProjectUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUpdateManyWithoutProjectNestedInput
    prices?: PricesUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUpdateManyWithoutProjectNestedInput
    customers?: CustomersUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUncheckedUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUncheckedUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUncheckedUpdateManyWithoutProjectNestedInput
    prices?: PricesUncheckedUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUncheckedUpdateManyWithoutProjectNestedInput
    customers?: CustomersUncheckedUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type PricesUpsertWithWhereUniqueWithoutProductsInput = {
    where: PricesWhereUniqueInput
    update: XOR<PricesUpdateWithoutProductsInput, PricesUncheckedUpdateWithoutProductsInput>
    create: XOR<PricesCreateWithoutProductsInput, PricesUncheckedCreateWithoutProductsInput>
  }

  export type PricesUpdateWithWhereUniqueWithoutProductsInput = {
    where: PricesWhereUniqueInput
    data: XOR<PricesUpdateWithoutProductsInput, PricesUncheckedUpdateWithoutProductsInput>
  }

  export type PricesUpdateManyWithWhereWithoutProductsInput = {
    where: PricesScalarWhereInput
    data: XOR<PricesUpdateManyMutationInput, PricesUncheckedUpdateManyWithoutProductsInput>
  }

  export type TransactionsUpsertWithWhereUniqueWithoutProductInput = {
    where: TransactionsWhereUniqueInput
    update: XOR<TransactionsUpdateWithoutProductInput, TransactionsUncheckedUpdateWithoutProductInput>
    create: XOR<TransactionsCreateWithoutProductInput, TransactionsUncheckedCreateWithoutProductInput>
  }

  export type TransactionsUpdateWithWhereUniqueWithoutProductInput = {
    where: TransactionsWhereUniqueInput
    data: XOR<TransactionsUpdateWithoutProductInput, TransactionsUncheckedUpdateWithoutProductInput>
  }

  export type TransactionsUpdateManyWithWhereWithoutProductInput = {
    where: TransactionsScalarWhereInput
    data: XOR<TransactionsUpdateManyMutationInput, TransactionsUncheckedUpdateManyWithoutProductInput>
  }

  export type UserCreateWithoutApi_keysInput = {
    id?: string
    name?: string | null
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    source?: string | null
    defaultWorkspace?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    ProjectUsers?: ProjectUsersCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutApi_keysInput = {
    id?: string
    name?: string | null
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    source?: string | null
    defaultWorkspace?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    ProjectUsers?: ProjectUsersUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutApi_keysInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutApi_keysInput, UserUncheckedCreateWithoutApi_keysInput>
  }

  export type UserUpsertWithoutApi_keysInput = {
    update: XOR<UserUpdateWithoutApi_keysInput, UserUncheckedUpdateWithoutApi_keysInput>
    create: XOR<UserCreateWithoutApi_keysInput, UserUncheckedCreateWithoutApi_keysInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutApi_keysInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutApi_keysInput, UserUncheckedUpdateWithoutApi_keysInput>
  }

  export type UserUpdateWithoutApi_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    ProjectUsers?: ProjectUsersUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutApi_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    defaultWorkspace?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    ProjectUsers?: ProjectUsersUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProductsCreateWithoutPricesInput = {
    id?: string
    name: string
    description: string
    status?: $Enums.product_status
    createdAt?: Date | string
    updatedAt: Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    Project: ProjectCreateNestedOneWithoutProductsInput
    Transactions?: TransactionsCreateNestedManyWithoutProductInput
  }

  export type ProductsUncheckedCreateWithoutPricesInput = {
    id?: string
    name: string
    description: string
    status?: $Enums.product_status
    createdAt?: Date | string
    updatedAt: Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    project_id: string
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductsCreateOrConnectWithoutPricesInput = {
    where: ProductsWhereUniqueInput
    create: XOR<ProductsCreateWithoutPricesInput, ProductsUncheckedCreateWithoutPricesInput>
  }

  export type ProjectCreateWithoutPricesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailCreateNestedManyWithoutProjectInput
    products?: ProductsCreateNestedManyWithoutProjectInput
    discounts?: DiscountsCreateNestedManyWithoutProjectInput
    customers?: CustomersCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutPricesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersUncheckedCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteUncheckedCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailUncheckedCreateNestedManyWithoutProjectInput
    products?: ProductsUncheckedCreateNestedManyWithoutProjectInput
    discounts?: DiscountsUncheckedCreateNestedManyWithoutProjectInput
    customers?: CustomersUncheckedCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutPricesInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutPricesInput, ProjectUncheckedCreateWithoutPricesInput>
  }

  export type Discount_PricesCreateWithoutPriceInput = {
    discount?: DiscountsCreateNestedOneWithoutDiscount_pricesInput
  }

  export type Discount_PricesUncheckedCreateWithoutPriceInput = {
    discount_Id: string
  }

  export type Discount_PricesCreateOrConnectWithoutPriceInput = {
    where: Discount_PricesWhereUniqueInput
    create: XOR<Discount_PricesCreateWithoutPriceInput, Discount_PricesUncheckedCreateWithoutPriceInput>
  }

  export type Discount_PricesCreateManyPriceInputEnvelope = {
    data: Discount_PricesCreateManyPriceInput | Discount_PricesCreateManyPriceInput[]
    skipDuplicates?: boolean
  }

  export type SubscriptionItemsCreateWithoutPriceInput = {
    id: string
    quantity: number
    status: $Enums.SubscriptionItemsStatus
    recurring: boolean
    created_at?: Date | string
    updated_at?: Date | string
    previously_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    trial_started_at?: Date | string | null
    trial_ended_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    subscription: SubscriptionsCreateNestedOneWithoutSubscription_ItemsInput
  }

  export type SubscriptionItemsUncheckedCreateWithoutPriceInput = {
    id: string
    subscription_id: string
    quantity: number
    status: $Enums.SubscriptionItemsStatus
    recurring: boolean
    created_at?: Date | string
    updated_at?: Date | string
    previously_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    trial_started_at?: Date | string | null
    trial_ended_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SubscriptionItemsCreateOrConnectWithoutPriceInput = {
    where: SubscriptionItemsWhereUniqueInput
    create: XOR<SubscriptionItemsCreateWithoutPriceInput, SubscriptionItemsUncheckedCreateWithoutPriceInput>
  }

  export type SubscriptionItemsCreateManyPriceInputEnvelope = {
    data: SubscriptionItemsCreateManyPriceInput | SubscriptionItemsCreateManyPriceInput[]
    skipDuplicates?: boolean
  }

  export type TransactionItemsCreateWithoutPriceInput = {
    id?: string
    quantity: number
    Transactions?: TransactionsCreateNestedOneWithoutTransactionItemsInput
  }

  export type TransactionItemsUncheckedCreateWithoutPriceInput = {
    id?: string
    quantity: number
    transactionsId?: string | null
  }

  export type TransactionItemsCreateOrConnectWithoutPriceInput = {
    where: TransactionItemsWhereUniqueInput
    create: XOR<TransactionItemsCreateWithoutPriceInput, TransactionItemsUncheckedCreateWithoutPriceInput>
  }

  export type TransactionItemsCreateManyPriceInputEnvelope = {
    data: TransactionItemsCreateManyPriceInput | TransactionItemsCreateManyPriceInput[]
    skipDuplicates?: boolean
  }

  export type ProductsUpsertWithoutPricesInput = {
    update: XOR<ProductsUpdateWithoutPricesInput, ProductsUncheckedUpdateWithoutPricesInput>
    create: XOR<ProductsCreateWithoutPricesInput, ProductsUncheckedCreateWithoutPricesInput>
    where?: ProductsWhereInput
  }

  export type ProductsUpdateToOneWithWhereWithoutPricesInput = {
    where?: ProductsWhereInput
    data: XOR<ProductsUpdateWithoutPricesInput, ProductsUncheckedUpdateWithoutPricesInput>
  }

  export type ProductsUpdateWithoutPricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumproduct_statusFieldUpdateOperationsInput | $Enums.product_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    Project?: ProjectUpdateOneRequiredWithoutProductsNestedInput
    Transactions?: TransactionsUpdateManyWithoutProductNestedInput
  }

  export type ProductsUncheckedUpdateWithoutPricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumproduct_statusFieldUpdateOperationsInput | $Enums.product_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    project_id?: StringFieldUpdateOperationsInput | string
    Transactions?: TransactionsUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProjectUpsertWithoutPricesInput = {
    update: XOR<ProjectUpdateWithoutPricesInput, ProjectUncheckedUpdateWithoutPricesInput>
    create: XOR<ProjectCreateWithoutPricesInput, ProjectUncheckedCreateWithoutPricesInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutPricesInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutPricesInput, ProjectUncheckedUpdateWithoutPricesInput>
  }

  export type ProjectUpdateWithoutPricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUpdateManyWithoutProjectNestedInput
    products?: ProductsUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUpdateManyWithoutProjectNestedInput
    customers?: CustomersUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutPricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUncheckedUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUncheckedUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUncheckedUpdateManyWithoutProjectNestedInput
    products?: ProductsUncheckedUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUncheckedUpdateManyWithoutProjectNestedInput
    customers?: CustomersUncheckedUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type Discount_PricesUpsertWithWhereUniqueWithoutPriceInput = {
    where: Discount_PricesWhereUniqueInput
    update: XOR<Discount_PricesUpdateWithoutPriceInput, Discount_PricesUncheckedUpdateWithoutPriceInput>
    create: XOR<Discount_PricesCreateWithoutPriceInput, Discount_PricesUncheckedCreateWithoutPriceInput>
  }

  export type Discount_PricesUpdateWithWhereUniqueWithoutPriceInput = {
    where: Discount_PricesWhereUniqueInput
    data: XOR<Discount_PricesUpdateWithoutPriceInput, Discount_PricesUncheckedUpdateWithoutPriceInput>
  }

  export type Discount_PricesUpdateManyWithWhereWithoutPriceInput = {
    where: Discount_PricesScalarWhereInput
    data: XOR<Discount_PricesUpdateManyMutationInput, Discount_PricesUncheckedUpdateManyWithoutPriceInput>
  }

  export type Discount_PricesScalarWhereInput = {
    AND?: Discount_PricesScalarWhereInput | Discount_PricesScalarWhereInput[]
    OR?: Discount_PricesScalarWhereInput[]
    NOT?: Discount_PricesScalarWhereInput | Discount_PricesScalarWhereInput[]
    discount_Id?: StringFilter<"Discount_Prices"> | string
    price_id?: StringFilter<"Discount_Prices"> | string
  }

  export type SubscriptionItemsUpsertWithWhereUniqueWithoutPriceInput = {
    where: SubscriptionItemsWhereUniqueInput
    update: XOR<SubscriptionItemsUpdateWithoutPriceInput, SubscriptionItemsUncheckedUpdateWithoutPriceInput>
    create: XOR<SubscriptionItemsCreateWithoutPriceInput, SubscriptionItemsUncheckedCreateWithoutPriceInput>
  }

  export type SubscriptionItemsUpdateWithWhereUniqueWithoutPriceInput = {
    where: SubscriptionItemsWhereUniqueInput
    data: XOR<SubscriptionItemsUpdateWithoutPriceInput, SubscriptionItemsUncheckedUpdateWithoutPriceInput>
  }

  export type SubscriptionItemsUpdateManyWithWhereWithoutPriceInput = {
    where: SubscriptionItemsScalarWhereInput
    data: XOR<SubscriptionItemsUpdateManyMutationInput, SubscriptionItemsUncheckedUpdateManyWithoutPriceInput>
  }

  export type SubscriptionItemsScalarWhereInput = {
    AND?: SubscriptionItemsScalarWhereInput | SubscriptionItemsScalarWhereInput[]
    OR?: SubscriptionItemsScalarWhereInput[]
    NOT?: SubscriptionItemsScalarWhereInput | SubscriptionItemsScalarWhereInput[]
    id?: StringFilter<"SubscriptionItems"> | string
    subscription_id?: StringFilter<"SubscriptionItems"> | string
    price_id?: StringFilter<"SubscriptionItems"> | string
    quantity?: IntFilter<"SubscriptionItems"> | number
    status?: EnumSubscriptionItemsStatusFilter<"SubscriptionItems"> | $Enums.SubscriptionItemsStatus
    recurring?: BoolFilter<"SubscriptionItems"> | boolean
    created_at?: DateTimeFilter<"SubscriptionItems"> | Date | string
    updated_at?: DateTimeFilter<"SubscriptionItems"> | Date | string
    previously_billed_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    next_billed_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    trial_started_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    trial_ended_at?: DateTimeNullableFilter<"SubscriptionItems"> | Date | string | null
    custom_data?: JsonNullableFilter<"SubscriptionItems">
  }

  export type TransactionItemsUpsertWithWhereUniqueWithoutPriceInput = {
    where: TransactionItemsWhereUniqueInput
    update: XOR<TransactionItemsUpdateWithoutPriceInput, TransactionItemsUncheckedUpdateWithoutPriceInput>
    create: XOR<TransactionItemsCreateWithoutPriceInput, TransactionItemsUncheckedCreateWithoutPriceInput>
  }

  export type TransactionItemsUpdateWithWhereUniqueWithoutPriceInput = {
    where: TransactionItemsWhereUniqueInput
    data: XOR<TransactionItemsUpdateWithoutPriceInput, TransactionItemsUncheckedUpdateWithoutPriceInput>
  }

  export type TransactionItemsUpdateManyWithWhereWithoutPriceInput = {
    where: TransactionItemsScalarWhereInput
    data: XOR<TransactionItemsUpdateManyMutationInput, TransactionItemsUncheckedUpdateManyWithoutPriceInput>
  }

  export type TransactionItemsScalarWhereInput = {
    AND?: TransactionItemsScalarWhereInput | TransactionItemsScalarWhereInput[]
    OR?: TransactionItemsScalarWhereInput[]
    NOT?: TransactionItemsScalarWhereInput | TransactionItemsScalarWhereInput[]
    id?: StringFilter<"TransactionItems"> | string
    price_id?: StringFilter<"TransactionItems"> | string
    quantity?: IntFilter<"TransactionItems"> | number
    transactionsId?: StringNullableFilter<"TransactionItems"> | string | null
  }

  export type Discount_PricesCreateWithoutDiscountInput = {
    price: PricesCreateNestedOneWithoutDiscount_PricesInput
  }

  export type Discount_PricesUncheckedCreateWithoutDiscountInput = {
    price_id: string
  }

  export type Discount_PricesCreateOrConnectWithoutDiscountInput = {
    where: Discount_PricesWhereUniqueInput
    create: XOR<Discount_PricesCreateWithoutDiscountInput, Discount_PricesUncheckedCreateWithoutDiscountInput>
  }

  export type Discount_PricesCreateManyDiscountInputEnvelope = {
    data: Discount_PricesCreateManyDiscountInput | Discount_PricesCreateManyDiscountInput[]
    skipDuplicates?: boolean
  }

  export type ProjectCreateWithoutDiscountsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailCreateNestedManyWithoutProjectInput
    products?: ProductsCreateNestedManyWithoutProjectInput
    prices?: PricesCreateNestedManyWithoutProjectInput
    customers?: CustomersCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutDiscountsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersUncheckedCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteUncheckedCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailUncheckedCreateNestedManyWithoutProjectInput
    products?: ProductsUncheckedCreateNestedManyWithoutProjectInput
    prices?: PricesUncheckedCreateNestedManyWithoutProjectInput
    customers?: CustomersUncheckedCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutDiscountsInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutDiscountsInput, ProjectUncheckedCreateWithoutDiscountsInput>
  }

  export type SubscriptionsCreateWithoutDiscountInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    collection_mode: $Enums.CollectionMode
    customer: CustomersCreateNestedOneWithoutSubscriptionsInput
    address: AddressesCreateNestedOneWithoutSubscriptionsInput
    project: ProjectCreateNestedOneWithoutSubscriptionsInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsUncheckedCreateWithoutDiscountInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    address_id: string
    project_id: string
    collection_mode: $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsUncheckedCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsCreateOrConnectWithoutDiscountInput = {
    where: SubscriptionsWhereUniqueInput
    create: XOR<SubscriptionsCreateWithoutDiscountInput, SubscriptionsUncheckedCreateWithoutDiscountInput>
  }

  export type SubscriptionsCreateManyDiscountInputEnvelope = {
    data: SubscriptionsCreateManyDiscountInput | SubscriptionsCreateManyDiscountInput[]
    skipDuplicates?: boolean
  }

  export type TransactionsCreateWithoutDiscountInput = {
    id: string
    status: $Enums.TransactionStatus
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    customer: CustomersCreateNestedOneWithoutTransactionsInput
    address: AddressesCreateNestedOneWithoutTransactionsInput
    project: ProjectCreateNestedOneWithoutTransactionsInput
    product: ProductsCreateNestedOneWithoutTransactionsInput
    subscription?: SubscriptionsCreateNestedOneWithoutTransactionInput
    TransactionPayment?: TransactionPaymentCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsCreateNestedManyWithoutTransactionsInput
  }

  export type TransactionsUncheckedCreateWithoutDiscountInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    project_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutTransactionsInput
  }

  export type TransactionsCreateOrConnectWithoutDiscountInput = {
    where: TransactionsWhereUniqueInput
    create: XOR<TransactionsCreateWithoutDiscountInput, TransactionsUncheckedCreateWithoutDiscountInput>
  }

  export type TransactionsCreateManyDiscountInputEnvelope = {
    data: TransactionsCreateManyDiscountInput | TransactionsCreateManyDiscountInput[]
    skipDuplicates?: boolean
  }

  export type Discount_PricesUpsertWithWhereUniqueWithoutDiscountInput = {
    where: Discount_PricesWhereUniqueInput
    update: XOR<Discount_PricesUpdateWithoutDiscountInput, Discount_PricesUncheckedUpdateWithoutDiscountInput>
    create: XOR<Discount_PricesCreateWithoutDiscountInput, Discount_PricesUncheckedCreateWithoutDiscountInput>
  }

  export type Discount_PricesUpdateWithWhereUniqueWithoutDiscountInput = {
    where: Discount_PricesWhereUniqueInput
    data: XOR<Discount_PricesUpdateWithoutDiscountInput, Discount_PricesUncheckedUpdateWithoutDiscountInput>
  }

  export type Discount_PricesUpdateManyWithWhereWithoutDiscountInput = {
    where: Discount_PricesScalarWhereInput
    data: XOR<Discount_PricesUpdateManyMutationInput, Discount_PricesUncheckedUpdateManyWithoutDiscountInput>
  }

  export type ProjectUpsertWithoutDiscountsInput = {
    update: XOR<ProjectUpdateWithoutDiscountsInput, ProjectUncheckedUpdateWithoutDiscountsInput>
    create: XOR<ProjectCreateWithoutDiscountsInput, ProjectUncheckedCreateWithoutDiscountsInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutDiscountsInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutDiscountsInput, ProjectUncheckedUpdateWithoutDiscountsInput>
  }

  export type ProjectUpdateWithoutDiscountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUpdateManyWithoutProjectNestedInput
    products?: ProductsUpdateManyWithoutProjectNestedInput
    prices?: PricesUpdateManyWithoutProjectNestedInput
    customers?: CustomersUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutDiscountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUncheckedUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUncheckedUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUncheckedUpdateManyWithoutProjectNestedInput
    products?: ProductsUncheckedUpdateManyWithoutProjectNestedInput
    prices?: PricesUncheckedUpdateManyWithoutProjectNestedInput
    customers?: CustomersUncheckedUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type SubscriptionsUpsertWithWhereUniqueWithoutDiscountInput = {
    where: SubscriptionsWhereUniqueInput
    update: XOR<SubscriptionsUpdateWithoutDiscountInput, SubscriptionsUncheckedUpdateWithoutDiscountInput>
    create: XOR<SubscriptionsCreateWithoutDiscountInput, SubscriptionsUncheckedCreateWithoutDiscountInput>
  }

  export type SubscriptionsUpdateWithWhereUniqueWithoutDiscountInput = {
    where: SubscriptionsWhereUniqueInput
    data: XOR<SubscriptionsUpdateWithoutDiscountInput, SubscriptionsUncheckedUpdateWithoutDiscountInput>
  }

  export type SubscriptionsUpdateManyWithWhereWithoutDiscountInput = {
    where: SubscriptionsScalarWhereInput
    data: XOR<SubscriptionsUpdateManyMutationInput, SubscriptionsUncheckedUpdateManyWithoutDiscountInput>
  }

  export type TransactionsUpsertWithWhereUniqueWithoutDiscountInput = {
    where: TransactionsWhereUniqueInput
    update: XOR<TransactionsUpdateWithoutDiscountInput, TransactionsUncheckedUpdateWithoutDiscountInput>
    create: XOR<TransactionsCreateWithoutDiscountInput, TransactionsUncheckedCreateWithoutDiscountInput>
  }

  export type TransactionsUpdateWithWhereUniqueWithoutDiscountInput = {
    where: TransactionsWhereUniqueInput
    data: XOR<TransactionsUpdateWithoutDiscountInput, TransactionsUncheckedUpdateWithoutDiscountInput>
  }

  export type TransactionsUpdateManyWithWhereWithoutDiscountInput = {
    where: TransactionsScalarWhereInput
    data: XOR<TransactionsUpdateManyMutationInput, TransactionsUncheckedUpdateManyWithoutDiscountInput>
  }

  export type DiscountsCreateWithoutDiscount_pricesInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
    Project?: ProjectCreateNestedOneWithoutDiscountsInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutDiscountInput
    Transactions?: TransactionsCreateNestedManyWithoutDiscountInput
  }

  export type DiscountsUncheckedCreateWithoutDiscount_pricesInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
    projectId?: string | null
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutDiscountInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutDiscountInput
  }

  export type DiscountsCreateOrConnectWithoutDiscount_pricesInput = {
    where: DiscountsWhereUniqueInput
    create: XOR<DiscountsCreateWithoutDiscount_pricesInput, DiscountsUncheckedCreateWithoutDiscount_pricesInput>
  }

  export type PricesCreateWithoutDiscount_PricesInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    Products?: ProductsCreateNestedOneWithoutPricesInput
    Project: ProjectCreateNestedOneWithoutPricesInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutPriceInput
    TransactionItems?: TransactionItemsCreateNestedManyWithoutPriceInput
  }

  export type PricesUncheckedCreateWithoutDiscount_PricesInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    product_id: string
    projectId: string
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutPriceInput
    TransactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutPriceInput
  }

  export type PricesCreateOrConnectWithoutDiscount_PricesInput = {
    where: PricesWhereUniqueInput
    create: XOR<PricesCreateWithoutDiscount_PricesInput, PricesUncheckedCreateWithoutDiscount_PricesInput>
  }

  export type DiscountsUpsertWithoutDiscount_pricesInput = {
    update: XOR<DiscountsUpdateWithoutDiscount_pricesInput, DiscountsUncheckedUpdateWithoutDiscount_pricesInput>
    create: XOR<DiscountsCreateWithoutDiscount_pricesInput, DiscountsUncheckedCreateWithoutDiscount_pricesInput>
    where?: DiscountsWhereInput
  }

  export type DiscountsUpdateToOneWithWhereWithoutDiscount_pricesInput = {
    where?: DiscountsWhereInput
    data: XOR<DiscountsUpdateWithoutDiscount_pricesInput, DiscountsUncheckedUpdateWithoutDiscount_pricesInput>
  }

  export type DiscountsUpdateWithoutDiscount_pricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Project?: ProjectUpdateOneWithoutDiscountsNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutDiscountNestedInput
    Transactions?: TransactionsUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountsUncheckedUpdateWithoutDiscount_pricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutDiscountNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutDiscountNestedInput
  }

  export type PricesUpsertWithoutDiscount_PricesInput = {
    update: XOR<PricesUpdateWithoutDiscount_PricesInput, PricesUncheckedUpdateWithoutDiscount_PricesInput>
    create: XOR<PricesCreateWithoutDiscount_PricesInput, PricesUncheckedCreateWithoutDiscount_PricesInput>
    where?: PricesWhereInput
  }

  export type PricesUpdateToOneWithWhereWithoutDiscount_PricesInput = {
    where?: PricesWhereInput
    data: XOR<PricesUpdateWithoutDiscount_PricesInput, PricesUncheckedUpdateWithoutDiscount_PricesInput>
  }

  export type PricesUpdateWithoutDiscount_PricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Products?: ProductsUpdateOneWithoutPricesNestedInput
    Project?: ProjectUpdateOneRequiredWithoutPricesNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutPriceNestedInput
    TransactionItems?: TransactionItemsUpdateManyWithoutPriceNestedInput
  }

  export type PricesUncheckedUpdateWithoutDiscount_PricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_id?: StringFieldUpdateOperationsInput | string
    projectId?: StringFieldUpdateOperationsInput | string
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutPriceNestedInput
    TransactionItems?: TransactionItemsUncheckedUpdateManyWithoutPriceNestedInput
  }

  export type ProjectCreateWithoutCustomersInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailCreateNestedManyWithoutProjectInput
    products?: ProductsCreateNestedManyWithoutProjectInput
    prices?: PricesCreateNestedManyWithoutProjectInput
    discounts?: DiscountsCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutCustomersInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersUncheckedCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteUncheckedCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailUncheckedCreateNestedManyWithoutProjectInput
    products?: ProductsUncheckedCreateNestedManyWithoutProjectInput
    prices?: PricesUncheckedCreateNestedManyWithoutProjectInput
    discounts?: DiscountsUncheckedCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutCustomersInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutCustomersInput, ProjectUncheckedCreateWithoutCustomersInput>
  }

  export type AddressesCreateWithoutCustomersInput = {
    id: string
    description?: string | null
    first_line?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: string | null
    status?: $Enums.Entity_Status | null
    created_at?: Date | string
    updated_at: Date | string
    Subscriptions?: SubscriptionsCreateNestedManyWithoutAddressInput
    Transactions?: TransactionsCreateNestedManyWithoutAddressInput
  }

  export type AddressesUncheckedCreateWithoutCustomersInput = {
    id: string
    description?: string | null
    first_line?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: string | null
    status?: $Enums.Entity_Status | null
    created_at?: Date | string
    updated_at: Date | string
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutAddressInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressesCreateOrConnectWithoutCustomersInput = {
    where: AddressesWhereUniqueInput
    create: XOR<AddressesCreateWithoutCustomersInput, AddressesUncheckedCreateWithoutCustomersInput>
  }

  export type AddressesCreateManyCustomersInputEnvelope = {
    data: AddressesCreateManyCustomersInput | AddressesCreateManyCustomersInput[]
    skipDuplicates?: boolean
  }

  export type SubscriptionsCreateWithoutCustomerInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    collection_mode: $Enums.CollectionMode
    address: AddressesCreateNestedOneWithoutSubscriptionsInput
    project: ProjectCreateNestedOneWithoutSubscriptionsInput
    discount?: DiscountsCreateNestedOneWithoutSubscriptionsInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsUncheckedCreateWithoutCustomerInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    address_id: string
    project_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsUncheckedCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsCreateOrConnectWithoutCustomerInput = {
    where: SubscriptionsWhereUniqueInput
    create: XOR<SubscriptionsCreateWithoutCustomerInput, SubscriptionsUncheckedCreateWithoutCustomerInput>
  }

  export type SubscriptionsCreateManyCustomerInputEnvelope = {
    data: SubscriptionsCreateManyCustomerInput | SubscriptionsCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type TransactionsCreateWithoutCustomerInput = {
    id: string
    status: $Enums.TransactionStatus
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    address: AddressesCreateNestedOneWithoutTransactionsInput
    project: ProjectCreateNestedOneWithoutTransactionsInput
    product: ProductsCreateNestedOneWithoutTransactionsInput
    subscription?: SubscriptionsCreateNestedOneWithoutTransactionInput
    TransactionPayment?: TransactionPaymentCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsCreateNestedManyWithoutTransactionsInput
    discount?: DiscountsCreateNestedOneWithoutTransactionsInput
  }

  export type TransactionsUncheckedCreateWithoutCustomerInput = {
    id: string
    status: $Enums.TransactionStatus
    address_id: string
    project_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutTransactionsInput
  }

  export type TransactionsCreateOrConnectWithoutCustomerInput = {
    where: TransactionsWhereUniqueInput
    create: XOR<TransactionsCreateWithoutCustomerInput, TransactionsUncheckedCreateWithoutCustomerInput>
  }

  export type TransactionsCreateManyCustomerInputEnvelope = {
    data: TransactionsCreateManyCustomerInput | TransactionsCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type ProjectUpsertWithoutCustomersInput = {
    update: XOR<ProjectUpdateWithoutCustomersInput, ProjectUncheckedUpdateWithoutCustomersInput>
    create: XOR<ProjectCreateWithoutCustomersInput, ProjectUncheckedCreateWithoutCustomersInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutCustomersInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutCustomersInput, ProjectUncheckedUpdateWithoutCustomersInput>
  }

  export type ProjectUpdateWithoutCustomersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUpdateManyWithoutProjectNestedInput
    products?: ProductsUpdateManyWithoutProjectNestedInput
    prices?: PricesUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutCustomersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUncheckedUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUncheckedUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUncheckedUpdateManyWithoutProjectNestedInput
    products?: ProductsUncheckedUpdateManyWithoutProjectNestedInput
    prices?: PricesUncheckedUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUncheckedUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type AddressesUpsertWithWhereUniqueWithoutCustomersInput = {
    where: AddressesWhereUniqueInput
    update: XOR<AddressesUpdateWithoutCustomersInput, AddressesUncheckedUpdateWithoutCustomersInput>
    create: XOR<AddressesCreateWithoutCustomersInput, AddressesUncheckedCreateWithoutCustomersInput>
  }

  export type AddressesUpdateWithWhereUniqueWithoutCustomersInput = {
    where: AddressesWhereUniqueInput
    data: XOR<AddressesUpdateWithoutCustomersInput, AddressesUncheckedUpdateWithoutCustomersInput>
  }

  export type AddressesUpdateManyWithWhereWithoutCustomersInput = {
    where: AddressesScalarWhereInput
    data: XOR<AddressesUpdateManyMutationInput, AddressesUncheckedUpdateManyWithoutCustomersInput>
  }

  export type AddressesScalarWhereInput = {
    AND?: AddressesScalarWhereInput | AddressesScalarWhereInput[]
    OR?: AddressesScalarWhereInput[]
    NOT?: AddressesScalarWhereInput | AddressesScalarWhereInput[]
    id?: StringFilter<"Addresses"> | string
    description?: StringNullableFilter<"Addresses"> | string | null
    first_line?: StringNullableFilter<"Addresses"> | string | null
    custom_data?: JsonNullableFilter<"Addresses">
    city?: StringNullableFilter<"Addresses"> | string | null
    status?: EnumEntity_StatusNullableFilter<"Addresses"> | $Enums.Entity_Status | null
    created_at?: DateTimeFilter<"Addresses"> | Date | string
    updated_at?: DateTimeFilter<"Addresses"> | Date | string
    customer_id?: StringNullableFilter<"Addresses"> | string | null
  }

  export type SubscriptionsUpsertWithWhereUniqueWithoutCustomerInput = {
    where: SubscriptionsWhereUniqueInput
    update: XOR<SubscriptionsUpdateWithoutCustomerInput, SubscriptionsUncheckedUpdateWithoutCustomerInput>
    create: XOR<SubscriptionsCreateWithoutCustomerInput, SubscriptionsUncheckedCreateWithoutCustomerInput>
  }

  export type SubscriptionsUpdateWithWhereUniqueWithoutCustomerInput = {
    where: SubscriptionsWhereUniqueInput
    data: XOR<SubscriptionsUpdateWithoutCustomerInput, SubscriptionsUncheckedUpdateWithoutCustomerInput>
  }

  export type SubscriptionsUpdateManyWithWhereWithoutCustomerInput = {
    where: SubscriptionsScalarWhereInput
    data: XOR<SubscriptionsUpdateManyMutationInput, SubscriptionsUncheckedUpdateManyWithoutCustomerInput>
  }

  export type TransactionsUpsertWithWhereUniqueWithoutCustomerInput = {
    where: TransactionsWhereUniqueInput
    update: XOR<TransactionsUpdateWithoutCustomerInput, TransactionsUncheckedUpdateWithoutCustomerInput>
    create: XOR<TransactionsCreateWithoutCustomerInput, TransactionsUncheckedCreateWithoutCustomerInput>
  }

  export type TransactionsUpdateWithWhereUniqueWithoutCustomerInput = {
    where: TransactionsWhereUniqueInput
    data: XOR<TransactionsUpdateWithoutCustomerInput, TransactionsUncheckedUpdateWithoutCustomerInput>
  }

  export type TransactionsUpdateManyWithWhereWithoutCustomerInput = {
    where: TransactionsScalarWhereInput
    data: XOR<TransactionsUpdateManyMutationInput, TransactionsUncheckedUpdateManyWithoutCustomerInput>
  }

  export type CustomersCreateWithoutAddressesInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
    Project?: ProjectCreateNestedOneWithoutCustomersInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutCustomerInput
    Transactions?: TransactionsCreateNestedManyWithoutCustomerInput
  }

  export type CustomersUncheckedCreateWithoutAddressesInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
    projectId?: string | null
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutCustomerInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomersCreateOrConnectWithoutAddressesInput = {
    where: CustomersWhereUniqueInput
    create: XOR<CustomersCreateWithoutAddressesInput, CustomersUncheckedCreateWithoutAddressesInput>
  }

  export type SubscriptionsCreateWithoutAddressInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    collection_mode: $Enums.CollectionMode
    customer: CustomersCreateNestedOneWithoutSubscriptionsInput
    project: ProjectCreateNestedOneWithoutSubscriptionsInput
    discount?: DiscountsCreateNestedOneWithoutSubscriptionsInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsUncheckedCreateWithoutAddressInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    project_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsUncheckedCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsCreateOrConnectWithoutAddressInput = {
    where: SubscriptionsWhereUniqueInput
    create: XOR<SubscriptionsCreateWithoutAddressInput, SubscriptionsUncheckedCreateWithoutAddressInput>
  }

  export type SubscriptionsCreateManyAddressInputEnvelope = {
    data: SubscriptionsCreateManyAddressInput | SubscriptionsCreateManyAddressInput[]
    skipDuplicates?: boolean
  }

  export type TransactionsCreateWithoutAddressInput = {
    id: string
    status: $Enums.TransactionStatus
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    customer: CustomersCreateNestedOneWithoutTransactionsInput
    project: ProjectCreateNestedOneWithoutTransactionsInput
    product: ProductsCreateNestedOneWithoutTransactionsInput
    subscription?: SubscriptionsCreateNestedOneWithoutTransactionInput
    TransactionPayment?: TransactionPaymentCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsCreateNestedManyWithoutTransactionsInput
    discount?: DiscountsCreateNestedOneWithoutTransactionsInput
  }

  export type TransactionsUncheckedCreateWithoutAddressInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    project_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutTransactionsInput
  }

  export type TransactionsCreateOrConnectWithoutAddressInput = {
    where: TransactionsWhereUniqueInput
    create: XOR<TransactionsCreateWithoutAddressInput, TransactionsUncheckedCreateWithoutAddressInput>
  }

  export type TransactionsCreateManyAddressInputEnvelope = {
    data: TransactionsCreateManyAddressInput | TransactionsCreateManyAddressInput[]
    skipDuplicates?: boolean
  }

  export type CustomersUpsertWithoutAddressesInput = {
    update: XOR<CustomersUpdateWithoutAddressesInput, CustomersUncheckedUpdateWithoutAddressesInput>
    create: XOR<CustomersCreateWithoutAddressesInput, CustomersUncheckedCreateWithoutAddressesInput>
    where?: CustomersWhereInput
  }

  export type CustomersUpdateToOneWithWhereWithoutAddressesInput = {
    where?: CustomersWhereInput
    data: XOR<CustomersUpdateWithoutAddressesInput, CustomersUncheckedUpdateWithoutAddressesInput>
  }

  export type CustomersUpdateWithoutAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Project?: ProjectUpdateOneWithoutCustomersNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutCustomerNestedInput
    Transactions?: TransactionsUpdateManyWithoutCustomerNestedInput
  }

  export type CustomersUncheckedUpdateWithoutAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutCustomerNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type SubscriptionsUpsertWithWhereUniqueWithoutAddressInput = {
    where: SubscriptionsWhereUniqueInput
    update: XOR<SubscriptionsUpdateWithoutAddressInput, SubscriptionsUncheckedUpdateWithoutAddressInput>
    create: XOR<SubscriptionsCreateWithoutAddressInput, SubscriptionsUncheckedCreateWithoutAddressInput>
  }

  export type SubscriptionsUpdateWithWhereUniqueWithoutAddressInput = {
    where: SubscriptionsWhereUniqueInput
    data: XOR<SubscriptionsUpdateWithoutAddressInput, SubscriptionsUncheckedUpdateWithoutAddressInput>
  }

  export type SubscriptionsUpdateManyWithWhereWithoutAddressInput = {
    where: SubscriptionsScalarWhereInput
    data: XOR<SubscriptionsUpdateManyMutationInput, SubscriptionsUncheckedUpdateManyWithoutAddressInput>
  }

  export type TransactionsUpsertWithWhereUniqueWithoutAddressInput = {
    where: TransactionsWhereUniqueInput
    update: XOR<TransactionsUpdateWithoutAddressInput, TransactionsUncheckedUpdateWithoutAddressInput>
    create: XOR<TransactionsCreateWithoutAddressInput, TransactionsUncheckedCreateWithoutAddressInput>
  }

  export type TransactionsUpdateWithWhereUniqueWithoutAddressInput = {
    where: TransactionsWhereUniqueInput
    data: XOR<TransactionsUpdateWithoutAddressInput, TransactionsUncheckedUpdateWithoutAddressInput>
  }

  export type TransactionsUpdateManyWithWhereWithoutAddressInput = {
    where: TransactionsScalarWhereInput
    data: XOR<TransactionsUpdateManyMutationInput, TransactionsUncheckedUpdateManyWithoutAddressInput>
  }

  export type SubscriptionsCreateWithoutSubscription_ItemsInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    collection_mode: $Enums.CollectionMode
    customer: CustomersCreateNestedOneWithoutSubscriptionsInput
    address: AddressesCreateNestedOneWithoutSubscriptionsInput
    project: ProjectCreateNestedOneWithoutSubscriptionsInput
    discount?: DiscountsCreateNestedOneWithoutSubscriptionsInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsUncheckedCreateWithoutSubscription_ItemsInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    address_id: string
    project_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsUncheckedCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsCreateOrConnectWithoutSubscription_ItemsInput = {
    where: SubscriptionsWhereUniqueInput
    create: XOR<SubscriptionsCreateWithoutSubscription_ItemsInput, SubscriptionsUncheckedCreateWithoutSubscription_ItemsInput>
  }

  export type PricesCreateWithoutSubscription_ItemsInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    Products?: ProductsCreateNestedOneWithoutPricesInput
    Project: ProjectCreateNestedOneWithoutPricesInput
    Discount_Prices?: Discount_PricesCreateNestedManyWithoutPriceInput
    TransactionItems?: TransactionItemsCreateNestedManyWithoutPriceInput
  }

  export type PricesUncheckedCreateWithoutSubscription_ItemsInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    product_id: string
    projectId: string
    Discount_Prices?: Discount_PricesUncheckedCreateNestedManyWithoutPriceInput
    TransactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutPriceInput
  }

  export type PricesCreateOrConnectWithoutSubscription_ItemsInput = {
    where: PricesWhereUniqueInput
    create: XOR<PricesCreateWithoutSubscription_ItemsInput, PricesUncheckedCreateWithoutSubscription_ItemsInput>
  }

  export type SubscriptionsUpsertWithoutSubscription_ItemsInput = {
    update: XOR<SubscriptionsUpdateWithoutSubscription_ItemsInput, SubscriptionsUncheckedUpdateWithoutSubscription_ItemsInput>
    create: XOR<SubscriptionsCreateWithoutSubscription_ItemsInput, SubscriptionsUncheckedCreateWithoutSubscription_ItemsInput>
    where?: SubscriptionsWhereInput
  }

  export type SubscriptionsUpdateToOneWithWhereWithoutSubscription_ItemsInput = {
    where?: SubscriptionsWhereInput
    data: XOR<SubscriptionsUpdateWithoutSubscription_ItemsInput, SubscriptionsUncheckedUpdateWithoutSubscription_ItemsInput>
  }

  export type SubscriptionsUpdateWithoutSubscription_ItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    customer?: CustomersUpdateOneRequiredWithoutSubscriptionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutSubscriptionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutSubscriptionsNestedInput
    discount?: DiscountsUpdateOneWithoutSubscriptionsNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateWithoutSubscription_ItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUncheckedUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type PricesUpsertWithoutSubscription_ItemsInput = {
    update: XOR<PricesUpdateWithoutSubscription_ItemsInput, PricesUncheckedUpdateWithoutSubscription_ItemsInput>
    create: XOR<PricesCreateWithoutSubscription_ItemsInput, PricesUncheckedCreateWithoutSubscription_ItemsInput>
    where?: PricesWhereInput
  }

  export type PricesUpdateToOneWithWhereWithoutSubscription_ItemsInput = {
    where?: PricesWhereInput
    data: XOR<PricesUpdateWithoutSubscription_ItemsInput, PricesUncheckedUpdateWithoutSubscription_ItemsInput>
  }

  export type PricesUpdateWithoutSubscription_ItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Products?: ProductsUpdateOneWithoutPricesNestedInput
    Project?: ProjectUpdateOneRequiredWithoutPricesNestedInput
    Discount_Prices?: Discount_PricesUpdateManyWithoutPriceNestedInput
    TransactionItems?: TransactionItemsUpdateManyWithoutPriceNestedInput
  }

  export type PricesUncheckedUpdateWithoutSubscription_ItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_id?: StringFieldUpdateOperationsInput | string
    projectId?: StringFieldUpdateOperationsInput | string
    Discount_Prices?: Discount_PricesUncheckedUpdateManyWithoutPriceNestedInput
    TransactionItems?: TransactionItemsUncheckedUpdateManyWithoutPriceNestedInput
  }

  export type SubscriptionsCreateWithoutSubscription_Scheduled_ChangesInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    collection_mode: $Enums.CollectionMode
    customer: CustomersCreateNestedOneWithoutSubscriptionsInput
    address: AddressesCreateNestedOneWithoutSubscriptionsInput
    project: ProjectCreateNestedOneWithoutSubscriptionsInput
    discount?: DiscountsCreateNestedOneWithoutSubscriptionsInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsUncheckedCreateWithoutSubscription_Scheduled_ChangesInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    address_id: string
    project_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsUncheckedCreateNestedOneWithoutSubscriptionInput
    transaction?: TransactionsUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsCreateOrConnectWithoutSubscription_Scheduled_ChangesInput = {
    where: SubscriptionsWhereUniqueInput
    create: XOR<SubscriptionsCreateWithoutSubscription_Scheduled_ChangesInput, SubscriptionsUncheckedCreateWithoutSubscription_Scheduled_ChangesInput>
  }

  export type SubscriptionsUpsertWithoutSubscription_Scheduled_ChangesInput = {
    update: XOR<SubscriptionsUpdateWithoutSubscription_Scheduled_ChangesInput, SubscriptionsUncheckedUpdateWithoutSubscription_Scheduled_ChangesInput>
    create: XOR<SubscriptionsCreateWithoutSubscription_Scheduled_ChangesInput, SubscriptionsUncheckedCreateWithoutSubscription_Scheduled_ChangesInput>
    where?: SubscriptionsWhereInput
  }

  export type SubscriptionsUpdateToOneWithWhereWithoutSubscription_Scheduled_ChangesInput = {
    where?: SubscriptionsWhereInput
    data: XOR<SubscriptionsUpdateWithoutSubscription_Scheduled_ChangesInput, SubscriptionsUncheckedUpdateWithoutSubscription_Scheduled_ChangesInput>
  }

  export type SubscriptionsUpdateWithoutSubscription_Scheduled_ChangesInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    customer?: CustomersUpdateOneRequiredWithoutSubscriptionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutSubscriptionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutSubscriptionsNestedInput
    discount?: DiscountsUpdateOneWithoutSubscriptionsNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateWithoutSubscription_Scheduled_ChangesInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUncheckedUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsCreateWithoutBillingDetailsInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    collection_mode: $Enums.CollectionMode
    customer: CustomersCreateNestedOneWithoutSubscriptionsInput
    address: AddressesCreateNestedOneWithoutSubscriptionsInput
    project: ProjectCreateNestedOneWithoutSubscriptionsInput
    discount?: DiscountsCreateNestedOneWithoutSubscriptionsInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesCreateNestedManyWithoutSubscriptionInput
    transaction?: TransactionsCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsUncheckedCreateWithoutBillingDetailsInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    address_id: string
    project_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedCreateNestedManyWithoutSubscriptionInput
    transaction?: TransactionsUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionsCreateOrConnectWithoutBillingDetailsInput = {
    where: SubscriptionsWhereUniqueInput
    create: XOR<SubscriptionsCreateWithoutBillingDetailsInput, SubscriptionsUncheckedCreateWithoutBillingDetailsInput>
  }

  export type SubscriptionsUpsertWithoutBillingDetailsInput = {
    update: XOR<SubscriptionsUpdateWithoutBillingDetailsInput, SubscriptionsUncheckedUpdateWithoutBillingDetailsInput>
    create: XOR<SubscriptionsCreateWithoutBillingDetailsInput, SubscriptionsUncheckedCreateWithoutBillingDetailsInput>
    where?: SubscriptionsWhereInput
  }

  export type SubscriptionsUpdateToOneWithWhereWithoutBillingDetailsInput = {
    where?: SubscriptionsWhereInput
    data: XOR<SubscriptionsUpdateWithoutBillingDetailsInput, SubscriptionsUncheckedUpdateWithoutBillingDetailsInput>
  }

  export type SubscriptionsUpdateWithoutBillingDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    customer?: CustomersUpdateOneRequiredWithoutSubscriptionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutSubscriptionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutSubscriptionsNestedInput
    discount?: DiscountsUpdateOneWithoutSubscriptionsNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUpdateManyWithoutSubscriptionNestedInput
    transaction?: TransactionsUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateWithoutBillingDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedUpdateManyWithoutSubscriptionNestedInput
    transaction?: TransactionsUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type CustomersCreateWithoutSubscriptionsInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
    Project?: ProjectCreateNestedOneWithoutCustomersInput
    Addresses?: AddressesCreateNestedManyWithoutCustomersInput
    Transactions?: TransactionsCreateNestedManyWithoutCustomerInput
  }

  export type CustomersUncheckedCreateWithoutSubscriptionsInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
    projectId?: string | null
    Addresses?: AddressesUncheckedCreateNestedManyWithoutCustomersInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomersCreateOrConnectWithoutSubscriptionsInput = {
    where: CustomersWhereUniqueInput
    create: XOR<CustomersCreateWithoutSubscriptionsInput, CustomersUncheckedCreateWithoutSubscriptionsInput>
  }

  export type AddressesCreateWithoutSubscriptionsInput = {
    id: string
    description?: string | null
    first_line?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: string | null
    status?: $Enums.Entity_Status | null
    created_at?: Date | string
    updated_at: Date | string
    Customers?: CustomersCreateNestedOneWithoutAddressesInput
    Transactions?: TransactionsCreateNestedManyWithoutAddressInput
  }

  export type AddressesUncheckedCreateWithoutSubscriptionsInput = {
    id: string
    description?: string | null
    first_line?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: string | null
    status?: $Enums.Entity_Status | null
    created_at?: Date | string
    updated_at: Date | string
    customer_id?: string | null
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressesCreateOrConnectWithoutSubscriptionsInput = {
    where: AddressesWhereUniqueInput
    create: XOR<AddressesCreateWithoutSubscriptionsInput, AddressesUncheckedCreateWithoutSubscriptionsInput>
  }

  export type ProjectCreateWithoutSubscriptionsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailCreateNestedManyWithoutProjectInput
    products?: ProductsCreateNestedManyWithoutProjectInput
    prices?: PricesCreateNestedManyWithoutProjectInput
    discounts?: DiscountsCreateNestedManyWithoutProjectInput
    customers?: CustomersCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutSubscriptionsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersUncheckedCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteUncheckedCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailUncheckedCreateNestedManyWithoutProjectInput
    products?: ProductsUncheckedCreateNestedManyWithoutProjectInput
    prices?: PricesUncheckedCreateNestedManyWithoutProjectInput
    discounts?: DiscountsUncheckedCreateNestedManyWithoutProjectInput
    customers?: CustomersUncheckedCreateNestedManyWithoutProjectInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutSubscriptionsInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutSubscriptionsInput, ProjectUncheckedCreateWithoutSubscriptionsInput>
  }

  export type DiscountsCreateWithoutSubscriptionsInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
    discount_prices?: Discount_PricesCreateNestedManyWithoutDiscountInput
    Project?: ProjectCreateNestedOneWithoutDiscountsInput
    Transactions?: TransactionsCreateNestedManyWithoutDiscountInput
  }

  export type DiscountsUncheckedCreateWithoutSubscriptionsInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
    projectId?: string | null
    discount_prices?: Discount_PricesUncheckedCreateNestedManyWithoutDiscountInput
    Transactions?: TransactionsUncheckedCreateNestedManyWithoutDiscountInput
  }

  export type DiscountsCreateOrConnectWithoutSubscriptionsInput = {
    where: DiscountsWhereUniqueInput
    create: XOR<DiscountsCreateWithoutSubscriptionsInput, DiscountsUncheckedCreateWithoutSubscriptionsInput>
  }

  export type SubscriptionItemsCreateWithoutSubscriptionInput = {
    id: string
    quantity: number
    status: $Enums.SubscriptionItemsStatus
    recurring: boolean
    created_at?: Date | string
    updated_at?: Date | string
    previously_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    trial_started_at?: Date | string | null
    trial_ended_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    price: PricesCreateNestedOneWithoutSubscription_ItemsInput
  }

  export type SubscriptionItemsUncheckedCreateWithoutSubscriptionInput = {
    id: string
    price_id: string
    quantity: number
    status: $Enums.SubscriptionItemsStatus
    recurring: boolean
    created_at?: Date | string
    updated_at?: Date | string
    previously_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    trial_started_at?: Date | string | null
    trial_ended_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SubscriptionItemsCreateOrConnectWithoutSubscriptionInput = {
    where: SubscriptionItemsWhereUniqueInput
    create: XOR<SubscriptionItemsCreateWithoutSubscriptionInput, SubscriptionItemsUncheckedCreateWithoutSubscriptionInput>
  }

  export type SubscriptionItemsCreateManySubscriptionInputEnvelope = {
    data: SubscriptionItemsCreateManySubscriptionInput | SubscriptionItemsCreateManySubscriptionInput[]
    skipDuplicates?: boolean
  }

  export type Subscription_Scheduled_ChangesCreateWithoutSubscriptionInput = {
    id?: string
    action: $Enums.ScheduledChangeAction
    effective_at: Date | string
    resumes_at?: Date | string | null
    status?: $Enums.ScheduledChangesStatus
  }

  export type Subscription_Scheduled_ChangesUncheckedCreateWithoutSubscriptionInput = {
    id?: string
    action: $Enums.ScheduledChangeAction
    effective_at: Date | string
    resumes_at?: Date | string | null
    status?: $Enums.ScheduledChangesStatus
  }

  export type Subscription_Scheduled_ChangesCreateOrConnectWithoutSubscriptionInput = {
    where: Subscription_Scheduled_ChangesWhereUniqueInput
    create: XOR<Subscription_Scheduled_ChangesCreateWithoutSubscriptionInput, Subscription_Scheduled_ChangesUncheckedCreateWithoutSubscriptionInput>
  }

  export type Subscription_Scheduled_ChangesCreateManySubscriptionInputEnvelope = {
    data: Subscription_Scheduled_ChangesCreateManySubscriptionInput | Subscription_Scheduled_ChangesCreateManySubscriptionInput[]
    skipDuplicates?: boolean
  }

  export type BillingDetailsCreateWithoutSubscriptionInput = {
    id?: string
    payment_interval: $Enums.BillingInterval
    payment_frequency: number
    enable_checkout?: boolean
    purchase_order_number?: string | null
    additional_information?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type BillingDetailsUncheckedCreateWithoutSubscriptionInput = {
    id?: string
    payment_interval: $Enums.BillingInterval
    payment_frequency: number
    enable_checkout?: boolean
    purchase_order_number?: string | null
    additional_information?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type BillingDetailsCreateOrConnectWithoutSubscriptionInput = {
    where: BillingDetailsWhereUniqueInput
    create: XOR<BillingDetailsCreateWithoutSubscriptionInput, BillingDetailsUncheckedCreateWithoutSubscriptionInput>
  }

  export type TransactionsCreateWithoutSubscriptionInput = {
    id: string
    status: $Enums.TransactionStatus
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    customer: CustomersCreateNestedOneWithoutTransactionsInput
    address: AddressesCreateNestedOneWithoutTransactionsInput
    project: ProjectCreateNestedOneWithoutTransactionsInput
    product: ProductsCreateNestedOneWithoutTransactionsInput
    TransactionPayment?: TransactionPaymentCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsCreateNestedManyWithoutTransactionsInput
    discount?: DiscountsCreateNestedOneWithoutTransactionsInput
  }

  export type TransactionsUncheckedCreateWithoutSubscriptionInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    project_id: string
    product_id: string
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutTransactionsInput
  }

  export type TransactionsCreateOrConnectWithoutSubscriptionInput = {
    where: TransactionsWhereUniqueInput
    create: XOR<TransactionsCreateWithoutSubscriptionInput, TransactionsUncheckedCreateWithoutSubscriptionInput>
  }

  export type TransactionsCreateManySubscriptionInputEnvelope = {
    data: TransactionsCreateManySubscriptionInput | TransactionsCreateManySubscriptionInput[]
    skipDuplicates?: boolean
  }

  export type CustomersUpsertWithoutSubscriptionsInput = {
    update: XOR<CustomersUpdateWithoutSubscriptionsInput, CustomersUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<CustomersCreateWithoutSubscriptionsInput, CustomersUncheckedCreateWithoutSubscriptionsInput>
    where?: CustomersWhereInput
  }

  export type CustomersUpdateToOneWithWhereWithoutSubscriptionsInput = {
    where?: CustomersWhereInput
    data: XOR<CustomersUpdateWithoutSubscriptionsInput, CustomersUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type CustomersUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Project?: ProjectUpdateOneWithoutCustomersNestedInput
    Addresses?: AddressesUpdateManyWithoutCustomersNestedInput
    Transactions?: TransactionsUpdateManyWithoutCustomerNestedInput
  }

  export type CustomersUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    Addresses?: AddressesUncheckedUpdateManyWithoutCustomersNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type AddressesUpsertWithoutSubscriptionsInput = {
    update: XOR<AddressesUpdateWithoutSubscriptionsInput, AddressesUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<AddressesCreateWithoutSubscriptionsInput, AddressesUncheckedCreateWithoutSubscriptionsInput>
    where?: AddressesWhereInput
  }

  export type AddressesUpdateToOneWithWhereWithoutSubscriptionsInput = {
    where?: AddressesWhereInput
    data: XOR<AddressesUpdateWithoutSubscriptionsInput, AddressesUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type AddressesUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    first_line?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Customers?: CustomersUpdateOneWithoutAddressesNestedInput
    Transactions?: TransactionsUpdateManyWithoutAddressNestedInput
  }

  export type AddressesUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    first_line?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_id?: NullableStringFieldUpdateOperationsInput | string | null
    Transactions?: TransactionsUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type ProjectUpsertWithoutSubscriptionsInput = {
    update: XOR<ProjectUpdateWithoutSubscriptionsInput, ProjectUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<ProjectCreateWithoutSubscriptionsInput, ProjectUncheckedCreateWithoutSubscriptionsInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutSubscriptionsInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutSubscriptionsInput, ProjectUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type ProjectUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUpdateManyWithoutProjectNestedInput
    products?: ProductsUpdateManyWithoutProjectNestedInput
    prices?: PricesUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUpdateManyWithoutProjectNestedInput
    customers?: CustomersUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUncheckedUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUncheckedUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUncheckedUpdateManyWithoutProjectNestedInput
    products?: ProductsUncheckedUpdateManyWithoutProjectNestedInput
    prices?: PricesUncheckedUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUncheckedUpdateManyWithoutProjectNestedInput
    customers?: CustomersUncheckedUpdateManyWithoutProjectNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type DiscountsUpsertWithoutSubscriptionsInput = {
    update: XOR<DiscountsUpdateWithoutSubscriptionsInput, DiscountsUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<DiscountsCreateWithoutSubscriptionsInput, DiscountsUncheckedCreateWithoutSubscriptionsInput>
    where?: DiscountsWhereInput
  }

  export type DiscountsUpdateToOneWithWhereWithoutSubscriptionsInput = {
    where?: DiscountsWhereInput
    data: XOR<DiscountsUpdateWithoutSubscriptionsInput, DiscountsUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type DiscountsUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    discount_prices?: Discount_PricesUpdateManyWithoutDiscountNestedInput
    Project?: ProjectUpdateOneWithoutDiscountsNestedInput
    Transactions?: TransactionsUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountsUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    discount_prices?: Discount_PricesUncheckedUpdateManyWithoutDiscountNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutDiscountNestedInput
  }

  export type SubscriptionItemsUpsertWithWhereUniqueWithoutSubscriptionInput = {
    where: SubscriptionItemsWhereUniqueInput
    update: XOR<SubscriptionItemsUpdateWithoutSubscriptionInput, SubscriptionItemsUncheckedUpdateWithoutSubscriptionInput>
    create: XOR<SubscriptionItemsCreateWithoutSubscriptionInput, SubscriptionItemsUncheckedCreateWithoutSubscriptionInput>
  }

  export type SubscriptionItemsUpdateWithWhereUniqueWithoutSubscriptionInput = {
    where: SubscriptionItemsWhereUniqueInput
    data: XOR<SubscriptionItemsUpdateWithoutSubscriptionInput, SubscriptionItemsUncheckedUpdateWithoutSubscriptionInput>
  }

  export type SubscriptionItemsUpdateManyWithWhereWithoutSubscriptionInput = {
    where: SubscriptionItemsScalarWhereInput
    data: XOR<SubscriptionItemsUpdateManyMutationInput, SubscriptionItemsUncheckedUpdateManyWithoutSubscriptionInput>
  }

  export type Subscription_Scheduled_ChangesUpsertWithWhereUniqueWithoutSubscriptionInput = {
    where: Subscription_Scheduled_ChangesWhereUniqueInput
    update: XOR<Subscription_Scheduled_ChangesUpdateWithoutSubscriptionInput, Subscription_Scheduled_ChangesUncheckedUpdateWithoutSubscriptionInput>
    create: XOR<Subscription_Scheduled_ChangesCreateWithoutSubscriptionInput, Subscription_Scheduled_ChangesUncheckedCreateWithoutSubscriptionInput>
  }

  export type Subscription_Scheduled_ChangesUpdateWithWhereUniqueWithoutSubscriptionInput = {
    where: Subscription_Scheduled_ChangesWhereUniqueInput
    data: XOR<Subscription_Scheduled_ChangesUpdateWithoutSubscriptionInput, Subscription_Scheduled_ChangesUncheckedUpdateWithoutSubscriptionInput>
  }

  export type Subscription_Scheduled_ChangesUpdateManyWithWhereWithoutSubscriptionInput = {
    where: Subscription_Scheduled_ChangesScalarWhereInput
    data: XOR<Subscription_Scheduled_ChangesUpdateManyMutationInput, Subscription_Scheduled_ChangesUncheckedUpdateManyWithoutSubscriptionInput>
  }

  export type Subscription_Scheduled_ChangesScalarWhereInput = {
    AND?: Subscription_Scheduled_ChangesScalarWhereInput | Subscription_Scheduled_ChangesScalarWhereInput[]
    OR?: Subscription_Scheduled_ChangesScalarWhereInput[]
    NOT?: Subscription_Scheduled_ChangesScalarWhereInput | Subscription_Scheduled_ChangesScalarWhereInput[]
    id?: StringFilter<"Subscription_Scheduled_Changes"> | string
    subscription_id?: StringFilter<"Subscription_Scheduled_Changes"> | string
    action?: EnumScheduledChangeActionFilter<"Subscription_Scheduled_Changes"> | $Enums.ScheduledChangeAction
    effective_at?: DateTimeFilter<"Subscription_Scheduled_Changes"> | Date | string
    resumes_at?: DateTimeNullableFilter<"Subscription_Scheduled_Changes"> | Date | string | null
    status?: EnumScheduledChangesStatusFilter<"Subscription_Scheduled_Changes"> | $Enums.ScheduledChangesStatus
  }

  export type BillingDetailsUpsertWithoutSubscriptionInput = {
    update: XOR<BillingDetailsUpdateWithoutSubscriptionInput, BillingDetailsUncheckedUpdateWithoutSubscriptionInput>
    create: XOR<BillingDetailsCreateWithoutSubscriptionInput, BillingDetailsUncheckedCreateWithoutSubscriptionInput>
    where?: BillingDetailsWhereInput
  }

  export type BillingDetailsUpdateToOneWithWhereWithoutSubscriptionInput = {
    where?: BillingDetailsWhereInput
    data: XOR<BillingDetailsUpdateWithoutSubscriptionInput, BillingDetailsUncheckedUpdateWithoutSubscriptionInput>
  }

  export type BillingDetailsUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    payment_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    payment_frequency?: IntFieldUpdateOperationsInput | number
    enable_checkout?: BoolFieldUpdateOperationsInput | boolean
    purchase_order_number?: NullableStringFieldUpdateOperationsInput | string | null
    additional_information?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BillingDetailsUncheckedUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    payment_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    payment_frequency?: IntFieldUpdateOperationsInput | number
    enable_checkout?: BoolFieldUpdateOperationsInput | boolean
    purchase_order_number?: NullableStringFieldUpdateOperationsInput | string | null
    additional_information?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionsUpsertWithWhereUniqueWithoutSubscriptionInput = {
    where: TransactionsWhereUniqueInput
    update: XOR<TransactionsUpdateWithoutSubscriptionInput, TransactionsUncheckedUpdateWithoutSubscriptionInput>
    create: XOR<TransactionsCreateWithoutSubscriptionInput, TransactionsUncheckedCreateWithoutSubscriptionInput>
  }

  export type TransactionsUpdateWithWhereUniqueWithoutSubscriptionInput = {
    where: TransactionsWhereUniqueInput
    data: XOR<TransactionsUpdateWithoutSubscriptionInput, TransactionsUncheckedUpdateWithoutSubscriptionInput>
  }

  export type TransactionsUpdateManyWithWhereWithoutSubscriptionInput = {
    where: TransactionsScalarWhereInput
    data: XOR<TransactionsUpdateManyMutationInput, TransactionsUncheckedUpdateManyWithoutSubscriptionInput>
  }

  export type PricesCreateWithoutTransactionItemsInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    Products?: ProductsCreateNestedOneWithoutPricesInput
    Project: ProjectCreateNestedOneWithoutPricesInput
    Discount_Prices?: Discount_PricesCreateNestedManyWithoutPriceInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutPriceInput
  }

  export type PricesUncheckedCreateWithoutTransactionItemsInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    product_id: string
    projectId: string
    Discount_Prices?: Discount_PricesUncheckedCreateNestedManyWithoutPriceInput
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutPriceInput
  }

  export type PricesCreateOrConnectWithoutTransactionItemsInput = {
    where: PricesWhereUniqueInput
    create: XOR<PricesCreateWithoutTransactionItemsInput, PricesUncheckedCreateWithoutTransactionItemsInput>
  }

  export type TransactionsCreateWithoutTransactionItemsInput = {
    id: string
    status: $Enums.TransactionStatus
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    customer: CustomersCreateNestedOneWithoutTransactionsInput
    address: AddressesCreateNestedOneWithoutTransactionsInput
    project: ProjectCreateNestedOneWithoutTransactionsInput
    product: ProductsCreateNestedOneWithoutTransactionsInput
    subscription?: SubscriptionsCreateNestedOneWithoutTransactionInput
    TransactionPayment?: TransactionPaymentCreateNestedOneWithoutTransactionInput
    discount?: DiscountsCreateNestedOneWithoutTransactionsInput
  }

  export type TransactionsUncheckedCreateWithoutTransactionItemsInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    project_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedCreateNestedOneWithoutTransactionInput
  }

  export type TransactionsCreateOrConnectWithoutTransactionItemsInput = {
    where: TransactionsWhereUniqueInput
    create: XOR<TransactionsCreateWithoutTransactionItemsInput, TransactionsUncheckedCreateWithoutTransactionItemsInput>
  }

  export type PricesUpsertWithoutTransactionItemsInput = {
    update: XOR<PricesUpdateWithoutTransactionItemsInput, PricesUncheckedUpdateWithoutTransactionItemsInput>
    create: XOR<PricesCreateWithoutTransactionItemsInput, PricesUncheckedCreateWithoutTransactionItemsInput>
    where?: PricesWhereInput
  }

  export type PricesUpdateToOneWithWhereWithoutTransactionItemsInput = {
    where?: PricesWhereInput
    data: XOR<PricesUpdateWithoutTransactionItemsInput, PricesUncheckedUpdateWithoutTransactionItemsInput>
  }

  export type PricesUpdateWithoutTransactionItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Products?: ProductsUpdateOneWithoutPricesNestedInput
    Project?: ProjectUpdateOneRequiredWithoutPricesNestedInput
    Discount_Prices?: Discount_PricesUpdateManyWithoutPriceNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutPriceNestedInput
  }

  export type PricesUncheckedUpdateWithoutTransactionItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_id?: StringFieldUpdateOperationsInput | string
    projectId?: StringFieldUpdateOperationsInput | string
    Discount_Prices?: Discount_PricesUncheckedUpdateManyWithoutPriceNestedInput
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutPriceNestedInput
  }

  export type TransactionsUpsertWithoutTransactionItemsInput = {
    update: XOR<TransactionsUpdateWithoutTransactionItemsInput, TransactionsUncheckedUpdateWithoutTransactionItemsInput>
    create: XOR<TransactionsCreateWithoutTransactionItemsInput, TransactionsUncheckedCreateWithoutTransactionItemsInput>
    where?: TransactionsWhereInput
  }

  export type TransactionsUpdateToOneWithWhereWithoutTransactionItemsInput = {
    where?: TransactionsWhereInput
    data: XOR<TransactionsUpdateWithoutTransactionItemsInput, TransactionsUncheckedUpdateWithoutTransactionItemsInput>
  }

  export type TransactionsUpdateWithoutTransactionItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer?: CustomersUpdateOneRequiredWithoutTransactionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutTransactionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutTransactionsNestedInput
    product?: ProductsUpdateOneRequiredWithoutTransactionsNestedInput
    subscription?: SubscriptionsUpdateOneWithoutTransactionNestedInput
    TransactionPayment?: TransactionPaymentUpdateOneWithoutTransactionNestedInput
    discount?: DiscountsUpdateOneWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateWithoutTransactionItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionsCreateWithoutTransactionPaymentInput = {
    id: string
    status: $Enums.TransactionStatus
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    customer: CustomersCreateNestedOneWithoutTransactionsInput
    address: AddressesCreateNestedOneWithoutTransactionsInput
    project: ProjectCreateNestedOneWithoutTransactionsInput
    product: ProductsCreateNestedOneWithoutTransactionsInput
    subscription?: SubscriptionsCreateNestedOneWithoutTransactionInput
    transactionItems?: TransactionItemsCreateNestedManyWithoutTransactionsInput
    discount?: DiscountsCreateNestedOneWithoutTransactionsInput
  }

  export type TransactionsUncheckedCreateWithoutTransactionPaymentInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    project_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
    transactionItems?: TransactionItemsUncheckedCreateNestedManyWithoutTransactionsInput
  }

  export type TransactionsCreateOrConnectWithoutTransactionPaymentInput = {
    where: TransactionsWhereUniqueInput
    create: XOR<TransactionsCreateWithoutTransactionPaymentInput, TransactionsUncheckedCreateWithoutTransactionPaymentInput>
  }

  export type TransactionsUpsertWithoutTransactionPaymentInput = {
    update: XOR<TransactionsUpdateWithoutTransactionPaymentInput, TransactionsUncheckedUpdateWithoutTransactionPaymentInput>
    create: XOR<TransactionsCreateWithoutTransactionPaymentInput, TransactionsUncheckedCreateWithoutTransactionPaymentInput>
    where?: TransactionsWhereInput
  }

  export type TransactionsUpdateToOneWithWhereWithoutTransactionPaymentInput = {
    where?: TransactionsWhereInput
    data: XOR<TransactionsUpdateWithoutTransactionPaymentInput, TransactionsUncheckedUpdateWithoutTransactionPaymentInput>
  }

  export type TransactionsUpdateWithoutTransactionPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer?: CustomersUpdateOneRequiredWithoutTransactionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutTransactionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutTransactionsNestedInput
    product?: ProductsUpdateOneRequiredWithoutTransactionsNestedInput
    subscription?: SubscriptionsUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUpdateManyWithoutTransactionsNestedInput
    discount?: DiscountsUpdateOneWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateWithoutTransactionPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transactionItems?: TransactionItemsUncheckedUpdateManyWithoutTransactionsNestedInput
  }

  export type CustomersCreateWithoutTransactionsInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
    Project?: ProjectCreateNestedOneWithoutCustomersInput
    Addresses?: AddressesCreateNestedManyWithoutCustomersInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutCustomerInput
  }

  export type CustomersUncheckedCreateWithoutTransactionsInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
    projectId?: string | null
    Addresses?: AddressesUncheckedCreateNestedManyWithoutCustomersInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomersCreateOrConnectWithoutTransactionsInput = {
    where: CustomersWhereUniqueInput
    create: XOR<CustomersCreateWithoutTransactionsInput, CustomersUncheckedCreateWithoutTransactionsInput>
  }

  export type AddressesCreateWithoutTransactionsInput = {
    id: string
    description?: string | null
    first_line?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: string | null
    status?: $Enums.Entity_Status | null
    created_at?: Date | string
    updated_at: Date | string
    Customers?: CustomersCreateNestedOneWithoutAddressesInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutAddressInput
  }

  export type AddressesUncheckedCreateWithoutTransactionsInput = {
    id: string
    description?: string | null
    first_line?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: string | null
    status?: $Enums.Entity_Status | null
    created_at?: Date | string
    updated_at: Date | string
    customer_id?: string | null
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressesCreateOrConnectWithoutTransactionsInput = {
    where: AddressesWhereUniqueInput
    create: XOR<AddressesCreateWithoutTransactionsInput, AddressesUncheckedCreateWithoutTransactionsInput>
  }

  export type ProjectCreateWithoutTransactionsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailCreateNestedManyWithoutProjectInput
    products?: ProductsCreateNestedManyWithoutProjectInput
    prices?: PricesCreateNestedManyWithoutProjectInput
    discounts?: DiscountsCreateNestedManyWithoutProjectInput
    customers?: CustomersCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutTransactionsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    plan?: string
    billingCycleStart: number
    inviteCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usageLastChecked?: Date | string
    users?: ProjectUsersUncheckedCreateNestedManyWithoutProjectInput
    invites?: ProjectInviteUncheckedCreateNestedManyWithoutProjectInput
    sentEmails?: SentEmailUncheckedCreateNestedManyWithoutProjectInput
    products?: ProductsUncheckedCreateNestedManyWithoutProjectInput
    prices?: PricesUncheckedCreateNestedManyWithoutProjectInput
    discounts?: DiscountsUncheckedCreateNestedManyWithoutProjectInput
    customers?: CustomersUncheckedCreateNestedManyWithoutProjectInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutTransactionsInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutTransactionsInput, ProjectUncheckedCreateWithoutTransactionsInput>
  }

  export type ProductsCreateWithoutTransactionsInput = {
    id?: string
    name: string
    description: string
    status?: $Enums.product_status
    createdAt?: Date | string
    updatedAt: Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    Project: ProjectCreateNestedOneWithoutProductsInput
    prices?: PricesCreateNestedManyWithoutProductsInput
  }

  export type ProductsUncheckedCreateWithoutTransactionsInput = {
    id?: string
    name: string
    description: string
    status?: $Enums.product_status
    createdAt?: Date | string
    updatedAt: Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    project_id: string
    prices?: PricesUncheckedCreateNestedManyWithoutProductsInput
  }

  export type ProductsCreateOrConnectWithoutTransactionsInput = {
    where: ProductsWhereUniqueInput
    create: XOR<ProductsCreateWithoutTransactionsInput, ProductsUncheckedCreateWithoutTransactionsInput>
  }

  export type SubscriptionsCreateWithoutTransactionInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    collection_mode: $Enums.CollectionMode
    customer: CustomersCreateNestedOneWithoutSubscriptionsInput
    address: AddressesCreateNestedOneWithoutSubscriptionsInput
    project: ProjectCreateNestedOneWithoutSubscriptionsInput
    discount?: DiscountsCreateNestedOneWithoutSubscriptionsInput
    Subscription_Items?: SubscriptionItemsCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsCreateNestedOneWithoutSubscriptionInput
  }

  export type SubscriptionsUncheckedCreateWithoutTransactionInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    address_id: string
    project_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedCreateNestedManyWithoutSubscriptionInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedCreateNestedManyWithoutSubscriptionInput
    BillingDetails?: BillingDetailsUncheckedCreateNestedOneWithoutSubscriptionInput
  }

  export type SubscriptionsCreateOrConnectWithoutTransactionInput = {
    where: SubscriptionsWhereUniqueInput
    create: XOR<SubscriptionsCreateWithoutTransactionInput, SubscriptionsUncheckedCreateWithoutTransactionInput>
  }

  export type TransactionPaymentCreateWithoutTransactionInput = {
    id?: string
    payment_method: $Enums.PaymentMethod
    payment_provider: $Enums.PaymentProvider
    status?: $Enums.PaymentStatus
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    mobile_network?: string | null
    phone_suffix?: string | null
    card_last4?: string | null
    card_brand?: string | null
    card_exp_month?: number | null
    card_exp_year?: number | null
    card_holder_name?: string | null
    bank_reference?: string | null
    bank_name?: string | null
    provider_reference?: string | null
    provider_metadata?: NullableJsonNullValueInput | InputJsonValue
    error_message?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type TransactionPaymentUncheckedCreateWithoutTransactionInput = {
    id?: string
    payment_method: $Enums.PaymentMethod
    payment_provider: $Enums.PaymentProvider
    status?: $Enums.PaymentStatus
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    mobile_network?: string | null
    phone_suffix?: string | null
    card_last4?: string | null
    card_brand?: string | null
    card_exp_month?: number | null
    card_exp_year?: number | null
    card_holder_name?: string | null
    bank_reference?: string | null
    bank_name?: string | null
    provider_reference?: string | null
    provider_metadata?: NullableJsonNullValueInput | InputJsonValue
    error_message?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type TransactionPaymentCreateOrConnectWithoutTransactionInput = {
    where: TransactionPaymentWhereUniqueInput
    create: XOR<TransactionPaymentCreateWithoutTransactionInput, TransactionPaymentUncheckedCreateWithoutTransactionInput>
  }

  export type TransactionItemsCreateWithoutTransactionsInput = {
    id?: string
    quantity: number
    price: PricesCreateNestedOneWithoutTransactionItemsInput
  }

  export type TransactionItemsUncheckedCreateWithoutTransactionsInput = {
    id?: string
    price_id: string
    quantity: number
  }

  export type TransactionItemsCreateOrConnectWithoutTransactionsInput = {
    where: TransactionItemsWhereUniqueInput
    create: XOR<TransactionItemsCreateWithoutTransactionsInput, TransactionItemsUncheckedCreateWithoutTransactionsInput>
  }

  export type TransactionItemsCreateManyTransactionsInputEnvelope = {
    data: TransactionItemsCreateManyTransactionsInput | TransactionItemsCreateManyTransactionsInput[]
    skipDuplicates?: boolean
  }

  export type DiscountsCreateWithoutTransactionsInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
    discount_prices?: Discount_PricesCreateNestedManyWithoutDiscountInput
    Project?: ProjectCreateNestedOneWithoutDiscountsInput
    Subscriptions?: SubscriptionsCreateNestedManyWithoutDiscountInput
  }

  export type DiscountsUncheckedCreateWithoutTransactionsInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
    projectId?: string | null
    discount_prices?: Discount_PricesUncheckedCreateNestedManyWithoutDiscountInput
    Subscriptions?: SubscriptionsUncheckedCreateNestedManyWithoutDiscountInput
  }

  export type DiscountsCreateOrConnectWithoutTransactionsInput = {
    where: DiscountsWhereUniqueInput
    create: XOR<DiscountsCreateWithoutTransactionsInput, DiscountsUncheckedCreateWithoutTransactionsInput>
  }

  export type CustomersUpsertWithoutTransactionsInput = {
    update: XOR<CustomersUpdateWithoutTransactionsInput, CustomersUncheckedUpdateWithoutTransactionsInput>
    create: XOR<CustomersCreateWithoutTransactionsInput, CustomersUncheckedCreateWithoutTransactionsInput>
    where?: CustomersWhereInput
  }

  export type CustomersUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: CustomersWhereInput
    data: XOR<CustomersUpdateWithoutTransactionsInput, CustomersUncheckedUpdateWithoutTransactionsInput>
  }

  export type CustomersUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Project?: ProjectUpdateOneWithoutCustomersNestedInput
    Addresses?: AddressesUpdateManyWithoutCustomersNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutCustomerNestedInput
  }

  export type CustomersUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    Addresses?: AddressesUncheckedUpdateManyWithoutCustomersNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type AddressesUpsertWithoutTransactionsInput = {
    update: XOR<AddressesUpdateWithoutTransactionsInput, AddressesUncheckedUpdateWithoutTransactionsInput>
    create: XOR<AddressesCreateWithoutTransactionsInput, AddressesUncheckedCreateWithoutTransactionsInput>
    where?: AddressesWhereInput
  }

  export type AddressesUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: AddressesWhereInput
    data: XOR<AddressesUpdateWithoutTransactionsInput, AddressesUncheckedUpdateWithoutTransactionsInput>
  }

  export type AddressesUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    first_line?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Customers?: CustomersUpdateOneWithoutAddressesNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutAddressNestedInput
  }

  export type AddressesUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    first_line?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customer_id?: NullableStringFieldUpdateOperationsInput | string | null
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type ProjectUpsertWithoutTransactionsInput = {
    update: XOR<ProjectUpdateWithoutTransactionsInput, ProjectUncheckedUpdateWithoutTransactionsInput>
    create: XOR<ProjectCreateWithoutTransactionsInput, ProjectUncheckedCreateWithoutTransactionsInput>
    where?: ProjectWhereInput
  }

  export type ProjectUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: ProjectWhereInput
    data: XOR<ProjectUpdateWithoutTransactionsInput, ProjectUncheckedUpdateWithoutTransactionsInput>
  }

  export type ProjectUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUpdateManyWithoutProjectNestedInput
    products?: ProductsUpdateManyWithoutProjectNestedInput
    prices?: PricesUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUpdateManyWithoutProjectNestedInput
    customers?: CustomersUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: StringFieldUpdateOperationsInput | string
    billingCycleStart?: IntFieldUpdateOperationsInput | number
    inviteCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usageLastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: ProjectUsersUncheckedUpdateManyWithoutProjectNestedInput
    invites?: ProjectInviteUncheckedUpdateManyWithoutProjectNestedInput
    sentEmails?: SentEmailUncheckedUpdateManyWithoutProjectNestedInput
    products?: ProductsUncheckedUpdateManyWithoutProjectNestedInput
    prices?: PricesUncheckedUpdateManyWithoutProjectNestedInput
    discounts?: DiscountsUncheckedUpdateManyWithoutProjectNestedInput
    customers?: CustomersUncheckedUpdateManyWithoutProjectNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProductsUpsertWithoutTransactionsInput = {
    update: XOR<ProductsUpdateWithoutTransactionsInput, ProductsUncheckedUpdateWithoutTransactionsInput>
    create: XOR<ProductsCreateWithoutTransactionsInput, ProductsUncheckedCreateWithoutTransactionsInput>
    where?: ProductsWhereInput
  }

  export type ProductsUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: ProductsWhereInput
    data: XOR<ProductsUpdateWithoutTransactionsInput, ProductsUncheckedUpdateWithoutTransactionsInput>
  }

  export type ProductsUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumproduct_statusFieldUpdateOperationsInput | $Enums.product_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    Project?: ProjectUpdateOneRequiredWithoutProductsNestedInput
    prices?: PricesUpdateManyWithoutProductsNestedInput
  }

  export type ProductsUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumproduct_statusFieldUpdateOperationsInput | $Enums.product_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    project_id?: StringFieldUpdateOperationsInput | string
    prices?: PricesUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type SubscriptionsUpsertWithoutTransactionInput = {
    update: XOR<SubscriptionsUpdateWithoutTransactionInput, SubscriptionsUncheckedUpdateWithoutTransactionInput>
    create: XOR<SubscriptionsCreateWithoutTransactionInput, SubscriptionsUncheckedCreateWithoutTransactionInput>
    where?: SubscriptionsWhereInput
  }

  export type SubscriptionsUpdateToOneWithWhereWithoutTransactionInput = {
    where?: SubscriptionsWhereInput
    data: XOR<SubscriptionsUpdateWithoutTransactionInput, SubscriptionsUncheckedUpdateWithoutTransactionInput>
  }

  export type SubscriptionsUpdateWithoutTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    customer?: CustomersUpdateOneRequiredWithoutSubscriptionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutSubscriptionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutSubscriptionsNestedInput
    discount?: DiscountsUpdateOneWithoutSubscriptionsNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUpdateOneWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateWithoutTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUncheckedUpdateOneWithoutSubscriptionNestedInput
  }

  export type TransactionPaymentUpsertWithoutTransactionInput = {
    update: XOR<TransactionPaymentUpdateWithoutTransactionInput, TransactionPaymentUncheckedUpdateWithoutTransactionInput>
    create: XOR<TransactionPaymentCreateWithoutTransactionInput, TransactionPaymentUncheckedCreateWithoutTransactionInput>
    where?: TransactionPaymentWhereInput
  }

  export type TransactionPaymentUpdateToOneWithWhereWithoutTransactionInput = {
    where?: TransactionPaymentWhereInput
    data: XOR<TransactionPaymentUpdateWithoutTransactionInput, TransactionPaymentUncheckedUpdateWithoutTransactionInput>
  }

  export type TransactionPaymentUpdateWithoutTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    payment_method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    payment_provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    mobile_network?: NullableStringFieldUpdateOperationsInput | string | null
    phone_suffix?: NullableStringFieldUpdateOperationsInput | string | null
    card_last4?: NullableStringFieldUpdateOperationsInput | string | null
    card_brand?: NullableStringFieldUpdateOperationsInput | string | null
    card_exp_month?: NullableIntFieldUpdateOperationsInput | number | null
    card_exp_year?: NullableIntFieldUpdateOperationsInput | number | null
    card_holder_name?: NullableStringFieldUpdateOperationsInput | string | null
    bank_reference?: NullableStringFieldUpdateOperationsInput | string | null
    bank_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider_reference?: NullableStringFieldUpdateOperationsInput | string | null
    provider_metadata?: NullableJsonNullValueInput | InputJsonValue
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransactionPaymentUncheckedUpdateWithoutTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    payment_method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    payment_provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    mobile_network?: NullableStringFieldUpdateOperationsInput | string | null
    phone_suffix?: NullableStringFieldUpdateOperationsInput | string | null
    card_last4?: NullableStringFieldUpdateOperationsInput | string | null
    card_brand?: NullableStringFieldUpdateOperationsInput | string | null
    card_exp_month?: NullableIntFieldUpdateOperationsInput | number | null
    card_exp_year?: NullableIntFieldUpdateOperationsInput | number | null
    card_holder_name?: NullableStringFieldUpdateOperationsInput | string | null
    bank_reference?: NullableStringFieldUpdateOperationsInput | string | null
    bank_name?: NullableStringFieldUpdateOperationsInput | string | null
    provider_reference?: NullableStringFieldUpdateOperationsInput | string | null
    provider_metadata?: NullableJsonNullValueInput | InputJsonValue
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransactionItemsUpsertWithWhereUniqueWithoutTransactionsInput = {
    where: TransactionItemsWhereUniqueInput
    update: XOR<TransactionItemsUpdateWithoutTransactionsInput, TransactionItemsUncheckedUpdateWithoutTransactionsInput>
    create: XOR<TransactionItemsCreateWithoutTransactionsInput, TransactionItemsUncheckedCreateWithoutTransactionsInput>
  }

  export type TransactionItemsUpdateWithWhereUniqueWithoutTransactionsInput = {
    where: TransactionItemsWhereUniqueInput
    data: XOR<TransactionItemsUpdateWithoutTransactionsInput, TransactionItemsUncheckedUpdateWithoutTransactionsInput>
  }

  export type TransactionItemsUpdateManyWithWhereWithoutTransactionsInput = {
    where: TransactionItemsScalarWhereInput
    data: XOR<TransactionItemsUpdateManyMutationInput, TransactionItemsUncheckedUpdateManyWithoutTransactionsInput>
  }

  export type DiscountsUpsertWithoutTransactionsInput = {
    update: XOR<DiscountsUpdateWithoutTransactionsInput, DiscountsUncheckedUpdateWithoutTransactionsInput>
    create: XOR<DiscountsCreateWithoutTransactionsInput, DiscountsUncheckedCreateWithoutTransactionsInput>
    where?: DiscountsWhereInput
  }

  export type DiscountsUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: DiscountsWhereInput
    data: XOR<DiscountsUpdateWithoutTransactionsInput, DiscountsUncheckedUpdateWithoutTransactionsInput>
  }

  export type DiscountsUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    discount_prices?: Discount_PricesUpdateManyWithoutDiscountNestedInput
    Project?: ProjectUpdateOneWithoutDiscountsNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountsUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    discount_prices?: Discount_PricesUncheckedUpdateManyWithoutDiscountNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutDiscountNestedInput
  }

  export type ProjectUsersCreateManyProjectInput = {
    id?: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type ProjectInviteCreateManyProjectInput = {
    email: string
    expires: Date | string
    createdAt?: Date | string
  }

  export type SentEmailCreateManyProjectInput = {
    id?: string
    type: string
    createdAt?: Date | string
  }

  export type ProductsCreateManyProjectInput = {
    id?: string
    name: string
    description: string
    status?: $Enums.product_status
    createdAt?: Date | string
    updatedAt: Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PricesCreateManyProjectInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    product_id: string
  }

  export type DiscountsCreateManyProjectInput = {
    id: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    enabled_for_checkout?: boolean | null
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    type: $Enums.Discount_type
    recur?: boolean | null
    max_recurring_intervals?: Decimal | DecimalJsLike | number | string | null
    usage_limit?: number | null
    expires_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: number | null
    created_at: Date | string
    updated_at: Date | string
  }

  export type CustomersCreateManyProjectInput = {
    id: string
    email: string
    name: string
    status?: $Enums.Entity_Status | null
    description?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at: Date | string
    updated_at?: Date | string
  }

  export type SubscriptionsCreateManyProjectInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    address_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
  }

  export type TransactionsCreateManyProjectInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type ProjectUsersUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProjectUsersNestedInput
  }

  export type ProjectUsersUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectUsersUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectInviteUpdateWithoutProjectInput = {
    email?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectInviteUncheckedUpdateWithoutProjectInput = {
    email?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectInviteUncheckedUpdateManyWithoutProjectInput = {
    email?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SentEmailUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SentEmailUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SentEmailUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductsUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumproduct_statusFieldUpdateOperationsInput | $Enums.product_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    prices?: PricesUpdateManyWithoutProductsNestedInput
    Transactions?: TransactionsUpdateManyWithoutProductNestedInput
  }

  export type ProductsUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumproduct_statusFieldUpdateOperationsInput | $Enums.product_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    prices?: PricesUncheckedUpdateManyWithoutProductsNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductsUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: Enumproduct_statusFieldUpdateOperationsInput | $Enums.product_status
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PricesUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Products?: ProductsUpdateOneWithoutPricesNestedInput
    Discount_Prices?: Discount_PricesUpdateManyWithoutPriceNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutPriceNestedInput
    TransactionItems?: TransactionItemsUpdateManyWithoutPriceNestedInput
  }

  export type PricesUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_id?: StringFieldUpdateOperationsInput | string
    Discount_Prices?: Discount_PricesUncheckedUpdateManyWithoutPriceNestedInput
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutPriceNestedInput
    TransactionItems?: TransactionItemsUncheckedUpdateManyWithoutPriceNestedInput
  }

  export type PricesUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_id?: StringFieldUpdateOperationsInput | string
  }

  export type DiscountsUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    discount_prices?: Discount_PricesUpdateManyWithoutDiscountNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutDiscountNestedInput
    Transactions?: TransactionsUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountsUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    discount_prices?: Discount_PricesUncheckedUpdateManyWithoutDiscountNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutDiscountNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountsUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled_for_checkout?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    type?: EnumDiscount_typeFieldUpdateOperationsInput | $Enums.Discount_type
    recur?: NullableBoolFieldUpdateOperationsInput | boolean | null
    max_recurring_intervals?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    times_used?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomersUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Addresses?: AddressesUpdateManyWithoutCustomersNestedInput
    Subscriptions?: SubscriptionsUpdateManyWithoutCustomerNestedInput
    Transactions?: TransactionsUpdateManyWithoutCustomerNestedInput
  }

  export type CustomersUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Addresses?: AddressesUncheckedUpdateManyWithoutCustomersNestedInput
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutCustomerNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomersUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionsUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    customer?: CustomersUpdateOneRequiredWithoutSubscriptionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutSubscriptionsNestedInput
    discount?: DiscountsUpdateOneWithoutSubscriptionsNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUncheckedUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
  }

  export type TransactionsUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer?: CustomersUpdateOneRequiredWithoutTransactionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutTransactionsNestedInput
    product?: ProductsUpdateOneRequiredWithoutTransactionsNestedInput
    subscription?: SubscriptionsUpdateOneWithoutTransactionNestedInput
    TransactionPayment?: TransactionPaymentUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUpdateManyWithoutTransactionsNestedInput
    discount?: DiscountsUpdateOneWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUncheckedUpdateManyWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AccountCreateManyUserInput = {
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProjectUsersCreateManyUserInput = {
    id?: string
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    projectId: string
  }

  export type SessionCreateManyUserInput = {
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Api_keysCreateManyUserInput = {
    id?: string
    prefix?: string | null
    description?: string | null
    createdAt?: Date | string
    key: string
  }

  export type AccountUpdateWithoutUserInput = {
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateManyWithoutUserInput = {
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProjectUsersUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    project?: ProjectUpdateOneRequiredWithoutUsersNestedInput
  }

  export type ProjectUsersUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectUsersUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: StringFieldUpdateOperationsInput | string
  }

  export type SessionUpdateWithoutUserInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Api_keysUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    prefix?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    key?: StringFieldUpdateOperationsInput | string
  }

  export type Api_keysUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    prefix?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    key?: StringFieldUpdateOperationsInput | string
  }

  export type Api_keysUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    prefix?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    key?: StringFieldUpdateOperationsInput | string
  }

  export type PricesCreateManyProductsInput = {
    id: string
    type?: $Enums.PriceType
    description?: string | null
    name: string
    billing_cycle_frequency: number
    billing_cycle_interval: $Enums.BillingInterval
    trial_period_frequency: number
    trial_period_interval: $Enums.BillingInterval
    amount: Decimal | DecimalJsLike | number | string
    currency_code: string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status: $Enums.Entity_Status
    created_at: Date | string
    updated_at?: Date | string
    projectId: string
  }

  export type TransactionsCreateManyProductInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    project_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type PricesUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Project?: ProjectUpdateOneRequiredWithoutPricesNestedInput
    Discount_Prices?: Discount_PricesUpdateManyWithoutPriceNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutPriceNestedInput
    TransactionItems?: TransactionItemsUpdateManyWithoutPriceNestedInput
  }

  export type PricesUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: StringFieldUpdateOperationsInput | string
    Discount_Prices?: Discount_PricesUncheckedUpdateManyWithoutPriceNestedInput
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutPriceNestedInput
    TransactionItems?: TransactionItemsUncheckedUpdateManyWithoutPriceNestedInput
  }

  export type PricesUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    trial_period_frequency?: IntFieldUpdateOperationsInput | number
    trial_period_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency_code?: StringFieldUpdateOperationsInput | string
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    projectId?: StringFieldUpdateOperationsInput | string
  }

  export type TransactionsUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer?: CustomersUpdateOneRequiredWithoutTransactionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutTransactionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutTransactionsNestedInput
    subscription?: SubscriptionsUpdateOneWithoutTransactionNestedInput
    TransactionPayment?: TransactionPaymentUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUpdateManyWithoutTransactionsNestedInput
    discount?: DiscountsUpdateOneWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUncheckedUpdateManyWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type Discount_PricesCreateManyPriceInput = {
    discount_Id: string
  }

  export type SubscriptionItemsCreateManyPriceInput = {
    id: string
    subscription_id: string
    quantity: number
    status: $Enums.SubscriptionItemsStatus
    recurring: boolean
    created_at?: Date | string
    updated_at?: Date | string
    previously_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    trial_started_at?: Date | string | null
    trial_ended_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionItemsCreateManyPriceInput = {
    id?: string
    quantity: number
    transactionsId?: string | null
  }

  export type Discount_PricesUpdateWithoutPriceInput = {
    discount?: DiscountsUpdateOneWithoutDiscount_pricesNestedInput
  }

  export type Discount_PricesUncheckedUpdateWithoutPriceInput = {
    discount_Id?: StringFieldUpdateOperationsInput | string
  }

  export type Discount_PricesUncheckedUpdateManyWithoutPriceInput = {
    discount_Id?: StringFieldUpdateOperationsInput | string
  }

  export type SubscriptionItemsUpdateWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumSubscriptionItemsStatusFieldUpdateOperationsInput | $Enums.SubscriptionItemsStatus
    recurring?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    previously_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_ended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    subscription?: SubscriptionsUpdateOneRequiredWithoutSubscription_ItemsNestedInput
  }

  export type SubscriptionItemsUncheckedUpdateWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumSubscriptionItemsStatusFieldUpdateOperationsInput | $Enums.SubscriptionItemsStatus
    recurring?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    previously_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_ended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SubscriptionItemsUncheckedUpdateManyWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumSubscriptionItemsStatusFieldUpdateOperationsInput | $Enums.SubscriptionItemsStatus
    recurring?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    previously_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_ended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type TransactionItemsUpdateWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    Transactions?: TransactionsUpdateOneWithoutTransactionItemsNestedInput
  }

  export type TransactionItemsUncheckedUpdateWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    transactionsId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionItemsUncheckedUpdateManyWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    transactionsId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Discount_PricesCreateManyDiscountInput = {
    price_id: string
  }

  export type SubscriptionsCreateManyDiscountInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    address_id: string
    project_id: string
    collection_mode: $Enums.CollectionMode
  }

  export type TransactionsCreateManyDiscountInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    project_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type Discount_PricesUpdateWithoutDiscountInput = {
    price?: PricesUpdateOneRequiredWithoutDiscount_PricesNestedInput
  }

  export type Discount_PricesUncheckedUpdateWithoutDiscountInput = {
    price_id?: StringFieldUpdateOperationsInput | string
  }

  export type Discount_PricesUncheckedUpdateManyWithoutDiscountInput = {
    price_id?: StringFieldUpdateOperationsInput | string
  }

  export type SubscriptionsUpdateWithoutDiscountInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    customer?: CustomersUpdateOneRequiredWithoutSubscriptionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutSubscriptionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutSubscriptionsNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateWithoutDiscountInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUncheckedUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateManyWithoutDiscountInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
  }

  export type TransactionsUpdateWithoutDiscountInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer?: CustomersUpdateOneRequiredWithoutTransactionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutTransactionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutTransactionsNestedInput
    product?: ProductsUpdateOneRequiredWithoutTransactionsNestedInput
    subscription?: SubscriptionsUpdateOneWithoutTransactionNestedInput
    TransactionPayment?: TransactionPaymentUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUpdateManyWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateWithoutDiscountInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUncheckedUpdateManyWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateManyWithoutDiscountInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AddressesCreateManyCustomersInput = {
    id: string
    description?: string | null
    first_line?: string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: string | null
    status?: $Enums.Entity_Status | null
    created_at?: Date | string
    updated_at: Date | string
  }

  export type SubscriptionsCreateManyCustomerInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    address_id: string
    project_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
  }

  export type TransactionsCreateManyCustomerInput = {
    id: string
    status: $Enums.TransactionStatus
    address_id: string
    project_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type AddressesUpdateWithoutCustomersInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    first_line?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Subscriptions?: SubscriptionsUpdateManyWithoutAddressNestedInput
    Transactions?: TransactionsUpdateManyWithoutAddressNestedInput
  }

  export type AddressesUncheckedUpdateWithoutCustomersInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    first_line?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Subscriptions?: SubscriptionsUncheckedUpdateManyWithoutAddressNestedInput
    Transactions?: TransactionsUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type AddressesUncheckedUpdateManyWithoutCustomersInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    first_line?: NullableStringFieldUpdateOperationsInput | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumEntity_StatusFieldUpdateOperationsInput | $Enums.Entity_Status | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionsUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    address?: AddressesUpdateOneRequiredWithoutSubscriptionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutSubscriptionsNestedInput
    discount?: DiscountsUpdateOneWithoutSubscriptionsNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUncheckedUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
  }

  export type TransactionsUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: AddressesUpdateOneRequiredWithoutTransactionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutTransactionsNestedInput
    product?: ProductsUpdateOneRequiredWithoutTransactionsNestedInput
    subscription?: SubscriptionsUpdateOneWithoutTransactionNestedInput
    TransactionPayment?: TransactionPaymentUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUpdateManyWithoutTransactionsNestedInput
    discount?: DiscountsUpdateOneWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUncheckedUpdateManyWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SubscriptionsCreateManyAddressInput = {
    id: string
    status: $Enums.SubscriptionsStatus
    currency_code: string
    created_at?: Date | string
    updated_at?: Date | string
    started_at?: Date | string | null
    first_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    paused_at?: Date | string | null
    canceled_at?: Date | string | null
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    billing_cycle_interval: $Enums.BillingInterval
    billing_cycle_frequency: number
    update_payment_method_url?: string | null
    cancel_url?: string | null
    customer_id: string
    project_id: string
    discount_id?: string | null
    collection_mode: $Enums.CollectionMode
  }

  export type TransactionsCreateManyAddressInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    project_id: string
    product_id: string
    subscription_id?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type SubscriptionsUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    customer?: CustomersUpdateOneRequiredWithoutSubscriptionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutSubscriptionsNestedInput
    discount?: DiscountsUpdateOneWithoutSubscriptionsNestedInput
    Subscription_Items?: SubscriptionItemsUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    Subscription_Items?: SubscriptionItemsUncheckedUpdateManyWithoutSubscriptionNestedInput
    Subscription_Scheduled_Changes?: Subscription_Scheduled_ChangesUncheckedUpdateManyWithoutSubscriptionNestedInput
    BillingDetails?: BillingDetailsUncheckedUpdateOneWithoutSubscriptionNestedInput
    transaction?: TransactionsUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionsUncheckedUpdateManyWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionsStatusFieldUpdateOperationsInput | $Enums.SubscriptionsStatus
    currency_code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    first_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paused_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceled_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    billing_cycle_interval?: EnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval
    billing_cycle_frequency?: IntFieldUpdateOperationsInput | number
    update_payment_method_url?: NullableStringFieldUpdateOperationsInput | string | null
    cancel_url?: NullableStringFieldUpdateOperationsInput | string | null
    customer_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
  }

  export type TransactionsUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer?: CustomersUpdateOneRequiredWithoutTransactionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutTransactionsNestedInput
    product?: ProductsUpdateOneRequiredWithoutTransactionsNestedInput
    subscription?: SubscriptionsUpdateOneWithoutTransactionNestedInput
    TransactionPayment?: TransactionPaymentUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUpdateManyWithoutTransactionsNestedInput
    discount?: DiscountsUpdateOneWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUncheckedUpdateManyWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateManyWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SubscriptionItemsCreateManySubscriptionInput = {
    id: string
    price_id: string
    quantity: number
    status: $Enums.SubscriptionItemsStatus
    recurring: boolean
    created_at?: Date | string
    updated_at?: Date | string
    previously_billed_at?: Date | string | null
    next_billed_at?: Date | string | null
    trial_started_at?: Date | string | null
    trial_ended_at?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type Subscription_Scheduled_ChangesCreateManySubscriptionInput = {
    id?: string
    action: $Enums.ScheduledChangeAction
    effective_at: Date | string
    resumes_at?: Date | string | null
    status?: $Enums.ScheduledChangesStatus
  }

  export type TransactionsCreateManySubscriptionInput = {
    id: string
    status: $Enums.TransactionStatus
    customer_id: string
    address_id: string
    project_id: string
    product_id: string
    subtotal: Decimal | DecimalJsLike | number | string
    discount_ammount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    grand_total: Decimal | DecimalJsLike | number | string
    discount_id?: string | null
    invoice_id: string
    current_period_starts?: Date | string | null
    current_period_ends?: Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code: string
    collection_mode: $Enums.CollectionMode
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type SubscriptionItemsUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumSubscriptionItemsStatusFieldUpdateOperationsInput | $Enums.SubscriptionItemsStatus
    recurring?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    previously_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_ended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    price?: PricesUpdateOneRequiredWithoutSubscription_ItemsNestedInput
  }

  export type SubscriptionItemsUncheckedUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    price_id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumSubscriptionItemsStatusFieldUpdateOperationsInput | $Enums.SubscriptionItemsStatus
    recurring?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    previously_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_ended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SubscriptionItemsUncheckedUpdateManyWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    price_id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumSubscriptionItemsStatusFieldUpdateOperationsInput | $Enums.SubscriptionItemsStatus
    recurring?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    previously_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_billed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_started_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trial_ended_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type Subscription_Scheduled_ChangesUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: EnumScheduledChangeActionFieldUpdateOperationsInput | $Enums.ScheduledChangeAction
    effective_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resumes_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumScheduledChangesStatusFieldUpdateOperationsInput | $Enums.ScheduledChangesStatus
  }

  export type Subscription_Scheduled_ChangesUncheckedUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: EnumScheduledChangeActionFieldUpdateOperationsInput | $Enums.ScheduledChangeAction
    effective_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resumes_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumScheduledChangesStatusFieldUpdateOperationsInput | $Enums.ScheduledChangesStatus
  }

  export type Subscription_Scheduled_ChangesUncheckedUpdateManyWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: EnumScheduledChangeActionFieldUpdateOperationsInput | $Enums.ScheduledChangeAction
    effective_at?: DateTimeFieldUpdateOperationsInput | Date | string
    resumes_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumScheduledChangesStatusFieldUpdateOperationsInput | $Enums.ScheduledChangesStatus
  }

  export type TransactionsUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer?: CustomersUpdateOneRequiredWithoutTransactionsNestedInput
    address?: AddressesUpdateOneRequiredWithoutTransactionsNestedInput
    project?: ProjectUpdateOneRequiredWithoutTransactionsNestedInput
    product?: ProductsUpdateOneRequiredWithoutTransactionsNestedInput
    TransactionPayment?: TransactionPaymentUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUpdateManyWithoutTransactionsNestedInput
    discount?: DiscountsUpdateOneWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TransactionPayment?: TransactionPaymentUncheckedUpdateOneWithoutTransactionNestedInput
    transactionItems?: TransactionItemsUncheckedUpdateManyWithoutTransactionsNestedInput
  }

  export type TransactionsUncheckedUpdateManyWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    customer_id?: StringFieldUpdateOperationsInput | string
    address_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_ammount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    grand_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_id?: NullableStringFieldUpdateOperationsInput | string | null
    invoice_id?: StringFieldUpdateOperationsInput | string
    current_period_starts?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    current_period_ends?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    custom_data?: NullableJsonNullValueInput | InputJsonValue
    currency_code?: StringFieldUpdateOperationsInput | string
    collection_mode?: EnumCollectionModeFieldUpdateOperationsInput | $Enums.CollectionMode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransactionItemsCreateManyTransactionsInput = {
    id?: string
    price_id: string
    quantity: number
  }

  export type TransactionItemsUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    price?: PricesUpdateOneRequiredWithoutTransactionItemsNestedInput
  }

  export type TransactionItemsUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    price_id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
  }

  export type TransactionItemsUncheckedUpdateManyWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    price_id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}