/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { pricesGetPrices } from "../funcs/pricesGetPrices.js";
import { pricesGetPricesPriceId } from "../funcs/pricesGetPricesPriceId.js";
import { pricesPatchPricesPriceId } from "../funcs/pricesPatchPricesPriceId.js";
import { pricesPostPrices } from "../funcs/pricesPostPrices.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Prices extends ClientSDK {
  async getPrices(
    options?: RequestOptions,
  ): Promise<Array<operations.GetPricesResponseBody>> {
    return unwrapAsync(pricesGetPrices(
      this,
      options,
    ));
  }

  async postPrices(
    request?: operations.PostPricesRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<operations.PostPricesResponseBody> {
    return unwrapAsync(pricesPostPrices(
      this,
      request,
      options,
    ));
  }

  async getPricesPriceId(
    request: operations.GetPricesPriceIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetPricesPriceIdResponseBody> {
    return unwrapAsync(pricesGetPricesPriceId(
      this,
      request,
      options,
    ));
  }

  async patchPricesPriceId(
    request: operations.PatchPricesPriceIdRequest,
    options?: RequestOptions,
  ): Promise<operations.PatchPricesPriceIdResponseBody> {
    return unwrapAsync(pricesPatchPricesPriceId(
      this,
      request,
      options,
    ));
  }
}
