/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { transactionsGetTransactions } from "../funcs/transactionsGetTransactions.js";
import { transactionsGetTransactionTransactionId } from "../funcs/transactionsGetTransactionTransactionId.js";
import { transactionsPatchTransactionTransactionId } from "../funcs/transactionsPatchTransactionTransactionId.js";
import { transactionsPostTransactions } from "../funcs/transactionsPostTransactions.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Transactions extends ClientSDK {
  async getTransactions(
    request: operations.GetTransactionsRequest,
    options?: RequestOptions,
  ): Promise<operations.GetTransactionsResponseBody> {
    return unwrapAsync(transactionsGetTransactions(
      this,
      request,
      options,
    ));
  }

  async postTransactions(
    request?: operations.PostTransactionsRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<operations.PostTransactionsResponseBody> {
    return unwrapAsync(transactionsPostTransactions(
      this,
      request,
      options,
    ));
  }

  async getTransactionTransactionId(
    request: operations.GetTransactionTransactionIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetTransactionTransactionIdResponseBody> {
    return unwrapAsync(transactionsGetTransactionTransactionId(
      this,
      request,
      options,
    ));
  }

  async patchTransactionTransactionId(
    request: operations.PatchTransactionTransactionIdRequest,
    options?: RequestOptions,
  ): Promise<operations.PatchTransactionTransactionIdResponseBody> {
    return unwrapAsync(transactionsPatchTransactionTransactionId(
      this,
      request,
      options,
    ));
  }
}
