/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { addressesGetAddressesAddressId } from "../funcs/addressesGetAddressesAddressId.js";
import { addressesGetCustomersCustomerIdAddresses } from "../funcs/addressesGetCustomersCustomerIdAddresses.js";
import { addressesPatchCustomersCustomerIdAddressesAddressId } from "../funcs/addressesPatchCustomersCustomerIdAddressesAddressId.js";
import { addressesPostCustomersCustomerIdAddresses } from "../funcs/addressesPostCustomersCustomerIdAddresses.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Addresses extends ClientSDK {
  async getCustomersCustomerIdAddresses(
    request: operations.GetCustomersCustomerIdAddressesRequest,
    options?: RequestOptions,
  ): Promise<Array<operations.GetCustomersCustomerIdAddressesResponseBody>> {
    return unwrapAsync(addressesGetCustomersCustomerIdAddresses(
      this,
      request,
      options,
    ));
  }

  async postCustomersCustomerIdAddresses(
    request: operations.PostCustomersCustomerIdAddressesRequest,
    options?: RequestOptions,
  ): Promise<operations.PostCustomersCustomerIdAddressesResponseBody> {
    return unwrapAsync(addressesPostCustomersCustomerIdAddresses(
      this,
      request,
      options,
    ));
  }

  async getAddressesAddressId(
    request: operations.GetAddressesAddressIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetAddressesAddressIdResponseBody> {
    return unwrapAsync(addressesGetAddressesAddressId(
      this,
      request,
      options,
    ));
  }

  async patchCustomersCustomerIdAddressesAddressId(
    request: operations.PatchCustomersCustomerIdAddressesAddressIdRequest,
    options?: RequestOptions,
  ): Promise<
    operations.PatchCustomersCustomerIdAddressesAddressIdResponseBody
  > {
    return unwrapAsync(addressesPatchCustomersCustomerIdAddressesAddressId(
      this,
      request,
      options,
    ));
  }
}
