/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { productsGetProducts } from "../funcs/productsGetProducts.js";
import { productsGetProductsProductId } from "../funcs/productsGetProductsProductId.js";
import { productsPatchProductsProductId } from "../funcs/productsPatchProductsProductId.js";
import { productsPostProducts } from "../funcs/productsPostProducts.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Products extends ClientSDK {
  async getProducts(
    options?: RequestOptions,
  ): Promise<Array<operations.ResponseBody>> {
    return unwrapAsync(productsGetProducts(
      this,
      options,
    ));
  }

  async postProducts(
    request?: operations.PostProductsRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<operations.PostProductsResponseBody> {
    return unwrapAsync(productsPostProducts(
      this,
      request,
      options,
    ));
  }

  async getProductsProductId(
    request: operations.GetProductsProductIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetProductsProductIdResponseBody> {
    return unwrapAsync(productsGetProductsProductId(
      this,
      request,
      options,
    ));
  }

  async patchProductsProductId(
    request: operations.PatchProductsProductIdRequest,
    options?: RequestOptions,
  ): Promise<operations.PatchProductsProductIdResponseBody> {
    return unwrapAsync(productsPatchProductsProductId(
      this,
      request,
      options,
    ));
  }
}
