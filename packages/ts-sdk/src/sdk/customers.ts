/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersGetCustomers } from "../funcs/customersGetCustomers.js";
import { customersGetCustomersCustomerId } from "../funcs/customersGetCustomersCustomerId.js";
import { customersPatchCustomersCustomerId } from "../funcs/customersPatchCustomersCustomerId.js";
import { customersPostCustomers } from "../funcs/customersPostCustomers.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Customers extends ClientSDK {
  async getCustomers(
    options?: RequestOptions,
  ): Promise<Array<operations.GetCustomersResponseBody>> {
    return unwrapAsync(customersGetCustomers(
      this,
      options,
    ));
  }

  async postCustomers(
    request?: operations.PostCustomersRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<operations.PostCustomersResponseBody> {
    return unwrapAsync(customersPostCustomers(
      this,
      request,
      options,
    ));
  }

  async getCustomersCustomerId(
    request: operations.GetCustomersCustomerIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetCustomersCustomerIdResponseBody> {
    return unwrapAsync(customersGetCustomersCustomerId(
      this,
      request,
      options,
    ));
  }

  async patchCustomersCustomerId(
    request: operations.PatchCustomersCustomerIdRequest,
    options?: RequestOptions,
  ): Promise<operations.PatchCustomersCustomerIdResponseBody> {
    return unwrapAsync(customersPatchCustomersCustomerId(
      this,
      request,
      options,
    ));
  }
}
