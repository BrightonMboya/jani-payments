/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * No Subscription found with that Id
 */
export type PostSubscriptionSubscriptionIdActivateSubscriptionResponseBodyData =
  {
    message: string;
    error: string;
  };

/**
 * No Subscription found with that Id
 */
export class PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody
  extends Error
{
  error: string;

  /** The original data that was passed to this error instance. */
  data$: PostSubscriptionSubscriptionIdActivateSubscriptionResponseBodyData;

  constructor(
    err: PostSubscriptionSubscriptionIdActivateSubscriptionResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody";
  }
}

/**
 * Bad Request
 */
export type PostSubscriptionSubscriptionIdActivateResponseBodyData = {
  message: string;
  error: string;
};

/**
 * Bad Request
 */
export class PostSubscriptionSubscriptionIdActivateResponseBody extends Error {
  error: string;

  /** The original data that was passed to this error instance. */
  data$: PostSubscriptionSubscriptionIdActivateResponseBodyData;

  constructor(err: PostSubscriptionSubscriptionIdActivateResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "PostSubscriptionSubscriptionIdActivateResponseBody";
  }
}

/** @internal */
export const PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody$inboundSchema:
  z.ZodType<
    PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    error: z.string(),
  })
    .transform((v) => {
      return new PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody(
        v,
      );
    });

/** @internal */
export type PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody$Outbound =
  {
    message: string;
    error: string;
  };

/** @internal */
export const PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody$outboundSchema:
  z.ZodType<
    PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody$Outbound,
    z.ZodTypeDef,
    PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody
  > = z.instanceof(
    PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      error: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody$ {
  /** @deprecated use `PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody$inboundSchema;
  /** @deprecated use `PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody$outboundSchema;
  /** @deprecated use `PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody$Outbound` instead. */
  export type Outbound =
    PostSubscriptionSubscriptionIdActivateSubscriptionResponseBody$Outbound;
}

/** @internal */
export const PostSubscriptionSubscriptionIdActivateResponseBody$inboundSchema:
  z.ZodType<
    PostSubscriptionSubscriptionIdActivateResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    error: z.string(),
  })
    .transform((v) => {
      return new PostSubscriptionSubscriptionIdActivateResponseBody(v);
    });

/** @internal */
export type PostSubscriptionSubscriptionIdActivateResponseBody$Outbound = {
  message: string;
  error: string;
};

/** @internal */
export const PostSubscriptionSubscriptionIdActivateResponseBody$outboundSchema:
  z.ZodType<
    PostSubscriptionSubscriptionIdActivateResponseBody$Outbound,
    z.ZodTypeDef,
    PostSubscriptionSubscriptionIdActivateResponseBody
  > = z.instanceof(PostSubscriptionSubscriptionIdActivateResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      error: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostSubscriptionSubscriptionIdActivateResponseBody$ {
  /** @deprecated use `PostSubscriptionSubscriptionIdActivateResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostSubscriptionSubscriptionIdActivateResponseBody$inboundSchema;
  /** @deprecated use `PostSubscriptionSubscriptionIdActivateResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostSubscriptionSubscriptionIdActivateResponseBody$outboundSchema;
  /** @deprecated use `PostSubscriptionSubscriptionIdActivateResponseBody$Outbound` instead. */
  export type Outbound =
    PostSubscriptionSubscriptionIdActivateResponseBody$Outbound;
}
