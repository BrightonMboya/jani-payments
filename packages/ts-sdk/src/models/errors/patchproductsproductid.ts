/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Invalid Product Id
 */
export type PatchProductsProductIdProductsResponseBodyData = {
  message: string;
  error: string;
};

/**
 * Invalid Product Id
 */
export class PatchProductsProductIdProductsResponseBody extends Error {
  error: string;

  /** The original data that was passed to this error instance. */
  data$: PatchProductsProductIdProductsResponseBodyData;

  constructor(err: PatchProductsProductIdProductsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "PatchProductsProductIdProductsResponseBody";
  }
}

/**
 * Invalid Product Id
 */
export type PatchProductsProductIdResponseBodyData = {
  message: string;
  error: string;
};

/**
 * Invalid Product Id
 */
export class PatchProductsProductIdResponseBody extends Error {
  error: string;

  /** The original data that was passed to this error instance. */
  data$: PatchProductsProductIdResponseBodyData;

  constructor(err: PatchProductsProductIdResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "PatchProductsProductIdResponseBody";
  }
}

/** @internal */
export const PatchProductsProductIdProductsResponseBody$inboundSchema:
  z.ZodType<PatchProductsProductIdProductsResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      message: z.string(),
      error: z.string(),
    })
      .transform((v) => {
        return new PatchProductsProductIdProductsResponseBody(v);
      });

/** @internal */
export type PatchProductsProductIdProductsResponseBody$Outbound = {
  message: string;
  error: string;
};

/** @internal */
export const PatchProductsProductIdProductsResponseBody$outboundSchema:
  z.ZodType<
    PatchProductsProductIdProductsResponseBody$Outbound,
    z.ZodTypeDef,
    PatchProductsProductIdProductsResponseBody
  > = z.instanceof(PatchProductsProductIdProductsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      error: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchProductsProductIdProductsResponseBody$ {
  /** @deprecated use `PatchProductsProductIdProductsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchProductsProductIdProductsResponseBody$inboundSchema;
  /** @deprecated use `PatchProductsProductIdProductsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchProductsProductIdProductsResponseBody$outboundSchema;
  /** @deprecated use `PatchProductsProductIdProductsResponseBody$Outbound` instead. */
  export type Outbound = PatchProductsProductIdProductsResponseBody$Outbound;
}

/** @internal */
export const PatchProductsProductIdResponseBody$inboundSchema: z.ZodType<
  PatchProductsProductIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  error: z.string(),
})
  .transform((v) => {
    return new PatchProductsProductIdResponseBody(v);
  });

/** @internal */
export type PatchProductsProductIdResponseBody$Outbound = {
  message: string;
  error: string;
};

/** @internal */
export const PatchProductsProductIdResponseBody$outboundSchema: z.ZodType<
  PatchProductsProductIdResponseBody$Outbound,
  z.ZodTypeDef,
  PatchProductsProductIdResponseBody
> = z.instanceof(PatchProductsProductIdResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
    error: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchProductsProductIdResponseBody$ {
  /** @deprecated use `PatchProductsProductIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = PatchProductsProductIdResponseBody$inboundSchema;
  /** @deprecated use `PatchProductsProductIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchProductsProductIdResponseBody$outboundSchema;
  /** @deprecated use `PatchProductsProductIdResponseBody$Outbound` instead. */
  export type Outbound = PatchProductsProductIdResponseBody$Outbound;
}
