/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Failed to update subscription due to bad conflict
 */
export type PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBodyData =
  {
    message: string;
    error: string;
  };

/**
 * Failed to update subscription due to bad conflict
 */
export class PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody
  extends Error
{
  error: string;

  /** The original data that was passed to this error instance. */
  data$:
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBodyData;

  constructor(
    err:
      PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody";
  }
}

/**
 * No Subscription found with that Id
 */
export type PostSubscriptionSubscriptionIdPauseSubscriptionResponseBodyData = {
  message: string;
  error: string;
};

/**
 * No Subscription found with that Id
 */
export class PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody
  extends Error
{
  error: string;

  /** The original data that was passed to this error instance. */
  data$: PostSubscriptionSubscriptionIdPauseSubscriptionResponseBodyData;

  constructor(
    err: PostSubscriptionSubscriptionIdPauseSubscriptionResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody";
  }
}

/**
 * Bad Request
 */
export type PostSubscriptionSubscriptionIdPauseResponseBodyData = {
  message: string;
  error: string;
};

/**
 * Bad Request
 */
export class PostSubscriptionSubscriptionIdPauseResponseBody extends Error {
  error: string;

  /** The original data that was passed to this error instance. */
  data$: PostSubscriptionSubscriptionIdPauseResponseBodyData;

  constructor(err: PostSubscriptionSubscriptionIdPauseResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "PostSubscriptionSubscriptionIdPauseResponseBody";
  }
}

/** @internal */
export const PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody$inboundSchema:
  z.ZodType<
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    error: z.string(),
  })
    .transform((v) => {
      return new PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody(
        v,
      );
    });

/** @internal */
export type PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody$Outbound =
  {
    message: string;
    error: string;
  };

/** @internal */
export const PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody$outboundSchema:
  z.ZodType<
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody$Outbound,
    z.ZodTypeDef,
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody
  > = z.instanceof(
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      error: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody$ {
  /** @deprecated use `PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody$inboundSchema;
  /** @deprecated use `PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody$outboundSchema;
  /** @deprecated use `PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody$Outbound` instead. */
  export type Outbound =
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseResponseBody$Outbound;
}

/** @internal */
export const PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody$inboundSchema:
  z.ZodType<
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    error: z.string(),
  })
    .transform((v) => {
      return new PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody(v);
    });

/** @internal */
export type PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody$Outbound =
  {
    message: string;
    error: string;
  };

/** @internal */
export const PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody$outboundSchema:
  z.ZodType<
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody$Outbound,
    z.ZodTypeDef,
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody
  > = z.instanceof(PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      error: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody$ {
  /** @deprecated use `PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody$inboundSchema;
  /** @deprecated use `PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody$outboundSchema;
  /** @deprecated use `PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody$Outbound` instead. */
  export type Outbound =
    PostSubscriptionSubscriptionIdPauseSubscriptionResponseBody$Outbound;
}

/** @internal */
export const PostSubscriptionSubscriptionIdPauseResponseBody$inboundSchema:
  z.ZodType<
    PostSubscriptionSubscriptionIdPauseResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    error: z.string(),
  })
    .transform((v) => {
      return new PostSubscriptionSubscriptionIdPauseResponseBody(v);
    });

/** @internal */
export type PostSubscriptionSubscriptionIdPauseResponseBody$Outbound = {
  message: string;
  error: string;
};

/** @internal */
export const PostSubscriptionSubscriptionIdPauseResponseBody$outboundSchema:
  z.ZodType<
    PostSubscriptionSubscriptionIdPauseResponseBody$Outbound,
    z.ZodTypeDef,
    PostSubscriptionSubscriptionIdPauseResponseBody
  > = z.instanceof(PostSubscriptionSubscriptionIdPauseResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      error: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostSubscriptionSubscriptionIdPauseResponseBody$ {
  /** @deprecated use `PostSubscriptionSubscriptionIdPauseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostSubscriptionSubscriptionIdPauseResponseBody$inboundSchema;
  /** @deprecated use `PostSubscriptionSubscriptionIdPauseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostSubscriptionSubscriptionIdPauseResponseBody$outboundSchema;
  /** @deprecated use `PostSubscriptionSubscriptionIdPauseResponseBody$Outbound` instead. */
  export type Outbound =
    PostSubscriptionSubscriptionIdPauseResponseBody$Outbound;
}
