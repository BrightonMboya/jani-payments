/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PostDiscountsStatus = {
  Active: "active",
  Archived: "archived",
} as const;
export type PostDiscountsStatus = ClosedEnum<typeof PostDiscountsStatus>;

export const PostDiscountsType = {
  Flat: "flat",
  Percentage: "percentage",
  FlatPerSeat: "flat_per_seat",
} as const;
export type PostDiscountsType = ClosedEnum<typeof PostDiscountsType>;

/**
 * Any valid JSON value
 */
export type PostDiscountsCustomData = {};

export type PostDiscountsRequestBody = {
  status?: PostDiscountsStatus | null | undefined;
  description?: string | null | undefined;
  enabledForCheckout?: boolean | null | undefined;
  amount: number;
  currencyCode: string;
  type: PostDiscountsType;
  recur?: boolean | null | undefined;
  maxRecurringIntervals?: number | null | undefined;
  usageLimit?: number | null | undefined;
  expiresAt?: string | null | undefined;
  /**
   * Any valid JSON value
   */
  customData?: PostDiscountsCustomData | undefined;
  priceIds?: Array<string> | undefined;
};

export const PostDiscountsDiscountsStatus = {
  Active: "active",
  Archived: "archived",
} as const;
export type PostDiscountsDiscountsStatus = ClosedEnum<
  typeof PostDiscountsDiscountsStatus
>;

export const PostDiscountsDiscountsType = {
  Flat: "flat",
  Percentage: "percentage",
  FlatPerSeat: "flat_per_seat",
} as const;
export type PostDiscountsDiscountsType = ClosedEnum<
  typeof PostDiscountsDiscountsType
>;

/**
 * Any valid JSON value
 */
export type PostDiscountsDiscountsCustomData = {};

/**
 * Creates a new Discount
 */
export type PostDiscountsResponseBody = {
  id: string;
  status?: PostDiscountsDiscountsStatus | null | undefined;
  description?: string | null | undefined;
  enabledForCheckout?: boolean | null | undefined;
  amount: number;
  currencyCode: string;
  type: PostDiscountsDiscountsType;
  recur?: boolean | null | undefined;
  maxRecurringIntervals?: number | null | undefined;
  usageLimit?: number | null | undefined;
  expiresAt?: string | null | undefined;
  /**
   * Any valid JSON value
   */
  customData: PostDiscountsDiscountsCustomData;
  timesUsed?: number | null | undefined;
  createdAt: string;
  updatedAt: string;
  restrictedTo: Array<string>;
};

/** @internal */
export const PostDiscountsStatus$inboundSchema: z.ZodNativeEnum<
  typeof PostDiscountsStatus
> = z.nativeEnum(PostDiscountsStatus);

/** @internal */
export const PostDiscountsStatus$outboundSchema: z.ZodNativeEnum<
  typeof PostDiscountsStatus
> = PostDiscountsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDiscountsStatus$ {
  /** @deprecated use `PostDiscountsStatus$inboundSchema` instead. */
  export const inboundSchema = PostDiscountsStatus$inboundSchema;
  /** @deprecated use `PostDiscountsStatus$outboundSchema` instead. */
  export const outboundSchema = PostDiscountsStatus$outboundSchema;
}

/** @internal */
export const PostDiscountsType$inboundSchema: z.ZodNativeEnum<
  typeof PostDiscountsType
> = z.nativeEnum(PostDiscountsType);

/** @internal */
export const PostDiscountsType$outboundSchema: z.ZodNativeEnum<
  typeof PostDiscountsType
> = PostDiscountsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDiscountsType$ {
  /** @deprecated use `PostDiscountsType$inboundSchema` instead. */
  export const inboundSchema = PostDiscountsType$inboundSchema;
  /** @deprecated use `PostDiscountsType$outboundSchema` instead. */
  export const outboundSchema = PostDiscountsType$outboundSchema;
}

/** @internal */
export const PostDiscountsCustomData$inboundSchema: z.ZodType<
  PostDiscountsCustomData,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PostDiscountsCustomData$Outbound = {};

/** @internal */
export const PostDiscountsCustomData$outboundSchema: z.ZodType<
  PostDiscountsCustomData$Outbound,
  z.ZodTypeDef,
  PostDiscountsCustomData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDiscountsCustomData$ {
  /** @deprecated use `PostDiscountsCustomData$inboundSchema` instead. */
  export const inboundSchema = PostDiscountsCustomData$inboundSchema;
  /** @deprecated use `PostDiscountsCustomData$outboundSchema` instead. */
  export const outboundSchema = PostDiscountsCustomData$outboundSchema;
  /** @deprecated use `PostDiscountsCustomData$Outbound` instead. */
  export type Outbound = PostDiscountsCustomData$Outbound;
}

export function postDiscountsCustomDataToJSON(
  postDiscountsCustomData: PostDiscountsCustomData,
): string {
  return JSON.stringify(
    PostDiscountsCustomData$outboundSchema.parse(postDiscountsCustomData),
  );
}

export function postDiscountsCustomDataFromJSON(
  jsonString: string,
): SafeParseResult<PostDiscountsCustomData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostDiscountsCustomData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostDiscountsCustomData' from JSON`,
  );
}

/** @internal */
export const PostDiscountsRequestBody$inboundSchema: z.ZodType<
  PostDiscountsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.nullable(PostDiscountsStatus$inboundSchema).optional(),
  description: z.nullable(z.string()).optional(),
  enabled_for_checkout: z.nullable(z.boolean()).optional(),
  amount: z.number(),
  currency_code: z.string(),
  type: PostDiscountsType$inboundSchema,
  recur: z.nullable(z.boolean()).optional(),
  max_recurring_intervals: z.nullable(z.number()).optional(),
  usage_limit: z.nullable(z.number().int()).optional(),
  expires_at: z.nullable(z.string()).optional(),
  custom_data: z.lazy(() => PostDiscountsCustomData$inboundSchema).optional(),
  price_ids: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "enabled_for_checkout": "enabledForCheckout",
    "currency_code": "currencyCode",
    "max_recurring_intervals": "maxRecurringIntervals",
    "usage_limit": "usageLimit",
    "expires_at": "expiresAt",
    "custom_data": "customData",
    "price_ids": "priceIds",
  });
});

/** @internal */
export type PostDiscountsRequestBody$Outbound = {
  status?: string | null | undefined;
  description?: string | null | undefined;
  enabled_for_checkout?: boolean | null | undefined;
  amount: number;
  currency_code: string;
  type: string;
  recur?: boolean | null | undefined;
  max_recurring_intervals?: number | null | undefined;
  usage_limit?: number | null | undefined;
  expires_at?: string | null | undefined;
  custom_data?: PostDiscountsCustomData$Outbound | undefined;
  price_ids?: Array<string> | undefined;
};

/** @internal */
export const PostDiscountsRequestBody$outboundSchema: z.ZodType<
  PostDiscountsRequestBody$Outbound,
  z.ZodTypeDef,
  PostDiscountsRequestBody
> = z.object({
  status: z.nullable(PostDiscountsStatus$outboundSchema).optional(),
  description: z.nullable(z.string()).optional(),
  enabledForCheckout: z.nullable(z.boolean()).optional(),
  amount: z.number(),
  currencyCode: z.string(),
  type: PostDiscountsType$outboundSchema,
  recur: z.nullable(z.boolean()).optional(),
  maxRecurringIntervals: z.nullable(z.number()).optional(),
  usageLimit: z.nullable(z.number().int()).optional(),
  expiresAt: z.nullable(z.string()).optional(),
  customData: z.lazy(() => PostDiscountsCustomData$outboundSchema).optional(),
  priceIds: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    enabledForCheckout: "enabled_for_checkout",
    currencyCode: "currency_code",
    maxRecurringIntervals: "max_recurring_intervals",
    usageLimit: "usage_limit",
    expiresAt: "expires_at",
    customData: "custom_data",
    priceIds: "price_ids",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDiscountsRequestBody$ {
  /** @deprecated use `PostDiscountsRequestBody$inboundSchema` instead. */
  export const inboundSchema = PostDiscountsRequestBody$inboundSchema;
  /** @deprecated use `PostDiscountsRequestBody$outboundSchema` instead. */
  export const outboundSchema = PostDiscountsRequestBody$outboundSchema;
  /** @deprecated use `PostDiscountsRequestBody$Outbound` instead. */
  export type Outbound = PostDiscountsRequestBody$Outbound;
}

export function postDiscountsRequestBodyToJSON(
  postDiscountsRequestBody: PostDiscountsRequestBody,
): string {
  return JSON.stringify(
    PostDiscountsRequestBody$outboundSchema.parse(postDiscountsRequestBody),
  );
}

export function postDiscountsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PostDiscountsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostDiscountsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostDiscountsRequestBody' from JSON`,
  );
}

/** @internal */
export const PostDiscountsDiscountsStatus$inboundSchema: z.ZodNativeEnum<
  typeof PostDiscountsDiscountsStatus
> = z.nativeEnum(PostDiscountsDiscountsStatus);

/** @internal */
export const PostDiscountsDiscountsStatus$outboundSchema: z.ZodNativeEnum<
  typeof PostDiscountsDiscountsStatus
> = PostDiscountsDiscountsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDiscountsDiscountsStatus$ {
  /** @deprecated use `PostDiscountsDiscountsStatus$inboundSchema` instead. */
  export const inboundSchema = PostDiscountsDiscountsStatus$inboundSchema;
  /** @deprecated use `PostDiscountsDiscountsStatus$outboundSchema` instead. */
  export const outboundSchema = PostDiscountsDiscountsStatus$outboundSchema;
}

/** @internal */
export const PostDiscountsDiscountsType$inboundSchema: z.ZodNativeEnum<
  typeof PostDiscountsDiscountsType
> = z.nativeEnum(PostDiscountsDiscountsType);

/** @internal */
export const PostDiscountsDiscountsType$outboundSchema: z.ZodNativeEnum<
  typeof PostDiscountsDiscountsType
> = PostDiscountsDiscountsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDiscountsDiscountsType$ {
  /** @deprecated use `PostDiscountsDiscountsType$inboundSchema` instead. */
  export const inboundSchema = PostDiscountsDiscountsType$inboundSchema;
  /** @deprecated use `PostDiscountsDiscountsType$outboundSchema` instead. */
  export const outboundSchema = PostDiscountsDiscountsType$outboundSchema;
}

/** @internal */
export const PostDiscountsDiscountsCustomData$inboundSchema: z.ZodType<
  PostDiscountsDiscountsCustomData,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PostDiscountsDiscountsCustomData$Outbound = {};

/** @internal */
export const PostDiscountsDiscountsCustomData$outboundSchema: z.ZodType<
  PostDiscountsDiscountsCustomData$Outbound,
  z.ZodTypeDef,
  PostDiscountsDiscountsCustomData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDiscountsDiscountsCustomData$ {
  /** @deprecated use `PostDiscountsDiscountsCustomData$inboundSchema` instead. */
  export const inboundSchema = PostDiscountsDiscountsCustomData$inboundSchema;
  /** @deprecated use `PostDiscountsDiscountsCustomData$outboundSchema` instead. */
  export const outboundSchema = PostDiscountsDiscountsCustomData$outboundSchema;
  /** @deprecated use `PostDiscountsDiscountsCustomData$Outbound` instead. */
  export type Outbound = PostDiscountsDiscountsCustomData$Outbound;
}

export function postDiscountsDiscountsCustomDataToJSON(
  postDiscountsDiscountsCustomData: PostDiscountsDiscountsCustomData,
): string {
  return JSON.stringify(
    PostDiscountsDiscountsCustomData$outboundSchema.parse(
      postDiscountsDiscountsCustomData,
    ),
  );
}

export function postDiscountsDiscountsCustomDataFromJSON(
  jsonString: string,
): SafeParseResult<PostDiscountsDiscountsCustomData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostDiscountsDiscountsCustomData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostDiscountsDiscountsCustomData' from JSON`,
  );
}

/** @internal */
export const PostDiscountsResponseBody$inboundSchema: z.ZodType<
  PostDiscountsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  status: z.nullable(PostDiscountsDiscountsStatus$inboundSchema).optional(),
  description: z.nullable(z.string()).optional(),
  enabled_for_checkout: z.nullable(z.boolean()).optional(),
  amount: z.number(),
  currency_code: z.string(),
  type: PostDiscountsDiscountsType$inboundSchema,
  recur: z.nullable(z.boolean()).optional(),
  max_recurring_intervals: z.nullable(z.number()).optional(),
  usage_limit: z.nullable(z.number().int()).optional(),
  expires_at: z.nullable(z.string()).optional(),
  custom_data: z.lazy(() => PostDiscountsDiscountsCustomData$inboundSchema),
  times_used: z.nullable(z.number().int()).optional(),
  created_at: z.string(),
  updated_at: z.string(),
  restricted_to: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    "enabled_for_checkout": "enabledForCheckout",
    "currency_code": "currencyCode",
    "max_recurring_intervals": "maxRecurringIntervals",
    "usage_limit": "usageLimit",
    "expires_at": "expiresAt",
    "custom_data": "customData",
    "times_used": "timesUsed",
    "created_at": "createdAt",
    "updated_at": "updatedAt",
    "restricted_to": "restrictedTo",
  });
});

/** @internal */
export type PostDiscountsResponseBody$Outbound = {
  id: string;
  status?: string | null | undefined;
  description?: string | null | undefined;
  enabled_for_checkout?: boolean | null | undefined;
  amount: number;
  currency_code: string;
  type: string;
  recur?: boolean | null | undefined;
  max_recurring_intervals?: number | null | undefined;
  usage_limit?: number | null | undefined;
  expires_at?: string | null | undefined;
  custom_data: PostDiscountsDiscountsCustomData$Outbound;
  times_used?: number | null | undefined;
  created_at: string;
  updated_at: string;
  restricted_to: Array<string>;
};

/** @internal */
export const PostDiscountsResponseBody$outboundSchema: z.ZodType<
  PostDiscountsResponseBody$Outbound,
  z.ZodTypeDef,
  PostDiscountsResponseBody
> = z.object({
  id: z.string(),
  status: z.nullable(PostDiscountsDiscountsStatus$outboundSchema).optional(),
  description: z.nullable(z.string()).optional(),
  enabledForCheckout: z.nullable(z.boolean()).optional(),
  amount: z.number(),
  currencyCode: z.string(),
  type: PostDiscountsDiscountsType$outboundSchema,
  recur: z.nullable(z.boolean()).optional(),
  maxRecurringIntervals: z.nullable(z.number()).optional(),
  usageLimit: z.nullable(z.number().int()).optional(),
  expiresAt: z.nullable(z.string()).optional(),
  customData: z.lazy(() => PostDiscountsDiscountsCustomData$outboundSchema),
  timesUsed: z.nullable(z.number().int()).optional(),
  createdAt: z.string(),
  updatedAt: z.string(),
  restrictedTo: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    enabledForCheckout: "enabled_for_checkout",
    currencyCode: "currency_code",
    maxRecurringIntervals: "max_recurring_intervals",
    usageLimit: "usage_limit",
    expiresAt: "expires_at",
    customData: "custom_data",
    timesUsed: "times_used",
    createdAt: "created_at",
    updatedAt: "updated_at",
    restrictedTo: "restricted_to",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDiscountsResponseBody$ {
  /** @deprecated use `PostDiscountsResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostDiscountsResponseBody$inboundSchema;
  /** @deprecated use `PostDiscountsResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostDiscountsResponseBody$outboundSchema;
  /** @deprecated use `PostDiscountsResponseBody$Outbound` instead. */
  export type Outbound = PostDiscountsResponseBody$Outbound;
}

export function postDiscountsResponseBodyToJSON(
  postDiscountsResponseBody: PostDiscountsResponseBody,
): string {
  return JSON.stringify(
    PostDiscountsResponseBody$outboundSchema.parse(postDiscountsResponseBody),
  );
}

export function postDiscountsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<PostDiscountsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostDiscountsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostDiscountsResponseBody' from JSON`,
  );
}
