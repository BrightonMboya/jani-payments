/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PatchCustomersCustomerIdStatus = {
  Active: "active",
  Archived: "archived",
} as const;
export type PatchCustomersCustomerIdStatus = ClosedEnum<
  typeof PatchCustomersCustomerIdStatus
>;

/**
 * Any valid JSON value
 */
export type PatchCustomersCustomerIdCustomData = {};

export type PatchCustomersCustomerIdRequestBody = {
  email?: string | undefined;
  name?: string | undefined;
  status?: PatchCustomersCustomerIdStatus | null | undefined;
  description?: string | null | undefined;
  /**
   * Any valid JSON value
   */
  customData?: PatchCustomersCustomerIdCustomData | undefined;
};

export type PatchCustomersCustomerIdRequest = {
  customerId: string;
  requestBody?: PatchCustomersCustomerIdRequestBody | undefined;
};

export const PatchCustomersCustomerIdCustomersStatus = {
  Active: "active",
  Archived: "archived",
} as const;
export type PatchCustomersCustomerIdCustomersStatus = ClosedEnum<
  typeof PatchCustomersCustomerIdCustomersStatus
>;

/**
 * Any valid JSON value
 */
export type PatchCustomersCustomerIdCustomersCustomData = {};

/**
 * Update a Customer
 */
export type PatchCustomersCustomerIdResponseBody = {
  id: string;
  email: string;
  name: string;
  status?: PatchCustomersCustomerIdCustomersStatus | null | undefined;
  description?: string | null | undefined;
  /**
   * Any valid JSON value
   */
  customData: PatchCustomersCustomerIdCustomersCustomData;
  createdAt: string;
  updatedAt: string;
};

/** @internal */
export const PatchCustomersCustomerIdStatus$inboundSchema: z.ZodNativeEnum<
  typeof PatchCustomersCustomerIdStatus
> = z.nativeEnum(PatchCustomersCustomerIdStatus);

/** @internal */
export const PatchCustomersCustomerIdStatus$outboundSchema: z.ZodNativeEnum<
  typeof PatchCustomersCustomerIdStatus
> = PatchCustomersCustomerIdStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchCustomersCustomerIdStatus$ {
  /** @deprecated use `PatchCustomersCustomerIdStatus$inboundSchema` instead. */
  export const inboundSchema = PatchCustomersCustomerIdStatus$inboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdStatus$outboundSchema` instead. */
  export const outboundSchema = PatchCustomersCustomerIdStatus$outboundSchema;
}

/** @internal */
export const PatchCustomersCustomerIdCustomData$inboundSchema: z.ZodType<
  PatchCustomersCustomerIdCustomData,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PatchCustomersCustomerIdCustomData$Outbound = {};

/** @internal */
export const PatchCustomersCustomerIdCustomData$outboundSchema: z.ZodType<
  PatchCustomersCustomerIdCustomData$Outbound,
  z.ZodTypeDef,
  PatchCustomersCustomerIdCustomData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchCustomersCustomerIdCustomData$ {
  /** @deprecated use `PatchCustomersCustomerIdCustomData$inboundSchema` instead. */
  export const inboundSchema = PatchCustomersCustomerIdCustomData$inboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdCustomData$outboundSchema` instead. */
  export const outboundSchema =
    PatchCustomersCustomerIdCustomData$outboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdCustomData$Outbound` instead. */
  export type Outbound = PatchCustomersCustomerIdCustomData$Outbound;
}

export function patchCustomersCustomerIdCustomDataToJSON(
  patchCustomersCustomerIdCustomData: PatchCustomersCustomerIdCustomData,
): string {
  return JSON.stringify(
    PatchCustomersCustomerIdCustomData$outboundSchema.parse(
      patchCustomersCustomerIdCustomData,
    ),
  );
}

export function patchCustomersCustomerIdCustomDataFromJSON(
  jsonString: string,
): SafeParseResult<PatchCustomersCustomerIdCustomData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PatchCustomersCustomerIdCustomData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchCustomersCustomerIdCustomData' from JSON`,
  );
}

/** @internal */
export const PatchCustomersCustomerIdRequestBody$inboundSchema: z.ZodType<
  PatchCustomersCustomerIdRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string().optional(),
  name: z.string().optional(),
  status: z.nullable(PatchCustomersCustomerIdStatus$inboundSchema).optional(),
  description: z.nullable(z.string()).optional(),
  custom_data: z.lazy(() => PatchCustomersCustomerIdCustomData$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "custom_data": "customData",
  });
});

/** @internal */
export type PatchCustomersCustomerIdRequestBody$Outbound = {
  email?: string | undefined;
  name?: string | undefined;
  status?: string | null | undefined;
  description?: string | null | undefined;
  custom_data?: PatchCustomersCustomerIdCustomData$Outbound | undefined;
};

/** @internal */
export const PatchCustomersCustomerIdRequestBody$outboundSchema: z.ZodType<
  PatchCustomersCustomerIdRequestBody$Outbound,
  z.ZodTypeDef,
  PatchCustomersCustomerIdRequestBody
> = z.object({
  email: z.string().optional(),
  name: z.string().optional(),
  status: z.nullable(PatchCustomersCustomerIdStatus$outboundSchema).optional(),
  description: z.nullable(z.string()).optional(),
  customData: z.lazy(() => PatchCustomersCustomerIdCustomData$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    customData: "custom_data",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchCustomersCustomerIdRequestBody$ {
  /** @deprecated use `PatchCustomersCustomerIdRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchCustomersCustomerIdRequestBody$inboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchCustomersCustomerIdRequestBody$outboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdRequestBody$Outbound` instead. */
  export type Outbound = PatchCustomersCustomerIdRequestBody$Outbound;
}

export function patchCustomersCustomerIdRequestBodyToJSON(
  patchCustomersCustomerIdRequestBody: PatchCustomersCustomerIdRequestBody,
): string {
  return JSON.stringify(
    PatchCustomersCustomerIdRequestBody$outboundSchema.parse(
      patchCustomersCustomerIdRequestBody,
    ),
  );
}

export function patchCustomersCustomerIdRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PatchCustomersCustomerIdRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PatchCustomersCustomerIdRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchCustomersCustomerIdRequestBody' from JSON`,
  );
}

/** @internal */
export const PatchCustomersCustomerIdRequest$inboundSchema: z.ZodType<
  PatchCustomersCustomerIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  customer_id: z.string(),
  RequestBody: z.lazy(() => PatchCustomersCustomerIdRequestBody$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "customer_id": "customerId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type PatchCustomersCustomerIdRequest$Outbound = {
  customer_id: string;
  RequestBody?: PatchCustomersCustomerIdRequestBody$Outbound | undefined;
};

/** @internal */
export const PatchCustomersCustomerIdRequest$outboundSchema: z.ZodType<
  PatchCustomersCustomerIdRequest$Outbound,
  z.ZodTypeDef,
  PatchCustomersCustomerIdRequest
> = z.object({
  customerId: z.string(),
  requestBody: z.lazy(() => PatchCustomersCustomerIdRequestBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    customerId: "customer_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchCustomersCustomerIdRequest$ {
  /** @deprecated use `PatchCustomersCustomerIdRequest$inboundSchema` instead. */
  export const inboundSchema = PatchCustomersCustomerIdRequest$inboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdRequest$outboundSchema` instead. */
  export const outboundSchema = PatchCustomersCustomerIdRequest$outboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdRequest$Outbound` instead. */
  export type Outbound = PatchCustomersCustomerIdRequest$Outbound;
}

export function patchCustomersCustomerIdRequestToJSON(
  patchCustomersCustomerIdRequest: PatchCustomersCustomerIdRequest,
): string {
  return JSON.stringify(
    PatchCustomersCustomerIdRequest$outboundSchema.parse(
      patchCustomersCustomerIdRequest,
    ),
  );
}

export function patchCustomersCustomerIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<PatchCustomersCustomerIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PatchCustomersCustomerIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchCustomersCustomerIdRequest' from JSON`,
  );
}

/** @internal */
export const PatchCustomersCustomerIdCustomersStatus$inboundSchema:
  z.ZodNativeEnum<typeof PatchCustomersCustomerIdCustomersStatus> = z
    .nativeEnum(PatchCustomersCustomerIdCustomersStatus);

/** @internal */
export const PatchCustomersCustomerIdCustomersStatus$outboundSchema:
  z.ZodNativeEnum<typeof PatchCustomersCustomerIdCustomersStatus> =
    PatchCustomersCustomerIdCustomersStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchCustomersCustomerIdCustomersStatus$ {
  /** @deprecated use `PatchCustomersCustomerIdCustomersStatus$inboundSchema` instead. */
  export const inboundSchema =
    PatchCustomersCustomerIdCustomersStatus$inboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdCustomersStatus$outboundSchema` instead. */
  export const outboundSchema =
    PatchCustomersCustomerIdCustomersStatus$outboundSchema;
}

/** @internal */
export const PatchCustomersCustomerIdCustomersCustomData$inboundSchema:
  z.ZodType<
    PatchCustomersCustomerIdCustomersCustomData,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type PatchCustomersCustomerIdCustomersCustomData$Outbound = {};

/** @internal */
export const PatchCustomersCustomerIdCustomersCustomData$outboundSchema:
  z.ZodType<
    PatchCustomersCustomerIdCustomersCustomData$Outbound,
    z.ZodTypeDef,
    PatchCustomersCustomerIdCustomersCustomData
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchCustomersCustomerIdCustomersCustomData$ {
  /** @deprecated use `PatchCustomersCustomerIdCustomersCustomData$inboundSchema` instead. */
  export const inboundSchema =
    PatchCustomersCustomerIdCustomersCustomData$inboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdCustomersCustomData$outboundSchema` instead. */
  export const outboundSchema =
    PatchCustomersCustomerIdCustomersCustomData$outboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdCustomersCustomData$Outbound` instead. */
  export type Outbound = PatchCustomersCustomerIdCustomersCustomData$Outbound;
}

export function patchCustomersCustomerIdCustomersCustomDataToJSON(
  patchCustomersCustomerIdCustomersCustomData:
    PatchCustomersCustomerIdCustomersCustomData,
): string {
  return JSON.stringify(
    PatchCustomersCustomerIdCustomersCustomData$outboundSchema.parse(
      patchCustomersCustomerIdCustomersCustomData,
    ),
  );
}

export function patchCustomersCustomerIdCustomersCustomDataFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchCustomersCustomerIdCustomersCustomData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchCustomersCustomerIdCustomersCustomData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchCustomersCustomerIdCustomersCustomData' from JSON`,
  );
}

/** @internal */
export const PatchCustomersCustomerIdResponseBody$inboundSchema: z.ZodType<
  PatchCustomersCustomerIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  email: z.string(),
  name: z.string(),
  status: z.nullable(PatchCustomersCustomerIdCustomersStatus$inboundSchema)
    .optional(),
  description: z.nullable(z.string()).optional(),
  custom_data: z.lazy(() =>
    PatchCustomersCustomerIdCustomersCustomData$inboundSchema
  ),
  created_at: z.string(),
  updated_at: z.string(),
}).transform((v) => {
  return remap$(v, {
    "custom_data": "customData",
    "created_at": "createdAt",
    "updated_at": "updatedAt",
  });
});

/** @internal */
export type PatchCustomersCustomerIdResponseBody$Outbound = {
  id: string;
  email: string;
  name: string;
  status?: string | null | undefined;
  description?: string | null | undefined;
  custom_data: PatchCustomersCustomerIdCustomersCustomData$Outbound;
  created_at: string;
  updated_at: string;
};

/** @internal */
export const PatchCustomersCustomerIdResponseBody$outboundSchema: z.ZodType<
  PatchCustomersCustomerIdResponseBody$Outbound,
  z.ZodTypeDef,
  PatchCustomersCustomerIdResponseBody
> = z.object({
  id: z.string(),
  email: z.string(),
  name: z.string(),
  status: z.nullable(PatchCustomersCustomerIdCustomersStatus$outboundSchema)
    .optional(),
  description: z.nullable(z.string()).optional(),
  customData: z.lazy(() =>
    PatchCustomersCustomerIdCustomersCustomData$outboundSchema
  ),
  createdAt: z.string(),
  updatedAt: z.string(),
}).transform((v) => {
  return remap$(v, {
    customData: "custom_data",
    createdAt: "created_at",
    updatedAt: "updated_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchCustomersCustomerIdResponseBody$ {
  /** @deprecated use `PatchCustomersCustomerIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchCustomersCustomerIdResponseBody$inboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchCustomersCustomerIdResponseBody$outboundSchema;
  /** @deprecated use `PatchCustomersCustomerIdResponseBody$Outbound` instead. */
  export type Outbound = PatchCustomersCustomerIdResponseBody$Outbound;
}

export function patchCustomersCustomerIdResponseBodyToJSON(
  patchCustomersCustomerIdResponseBody: PatchCustomersCustomerIdResponseBody,
): string {
  return JSON.stringify(
    PatchCustomersCustomerIdResponseBody$outboundSchema.parse(
      patchCustomersCustomerIdResponseBody,
    ),
  );
}

export function patchCustomersCustomerIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<PatchCustomersCustomerIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PatchCustomersCustomerIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchCustomersCustomerIdResponseBody' from JSON`,
  );
}
